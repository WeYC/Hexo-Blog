{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/lib/anime.min.js","path":"lib/anime.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/uploads/avatar.jpg","path":"uploads/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/assets/live2D/autoload.js","path":"assets/live2D/autoload.js","modified":0,"renderable":1},{"_id":"themes/next/source/assets/live2D/live2d.min.js","path":"assets/live2D/live2d.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/assets/live2D/waifu-tips.js","path":"assets/live2D/waifu-tips.js","modified":0,"renderable":1},{"_id":"themes/next/source/assets/live2D/waifu-tips.json","path":"assets/live2D/waifu-tips.json","modified":0,"renderable":1},{"_id":"themes/next/source/assets/live2D/waifu.css","path":"assets/live2D/waifu.css","modified":0,"renderable":1},{"_id":"themes/next/source/assets/particles/app.js","path":"assets/particles/app.js","modified":0,"renderable":1},{"_id":"themes/next/source/assets/particles/particles.js","path":"assets/particles/particles.js","modified":0,"renderable":1},{"_id":"themes/next/source/assets/particles/particles.json","path":"assets/particles/particles.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","path":"lib/font-awesome/css/all.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","path":"lib/font-awesome/webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","path":"lib/font-awesome/webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","path":"lib/font-awesome/webfonts/fa-solid-900.woff2","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/NodeServer笔记.md","hash":"4b01d9f4268d92b719f13f10f2f5948b9c3e765d","modified":1662565059442},{"_id":"source/_posts/Eruda-手机网页前端调试面板.md","hash":"2ade744490ff09e0183ee688f5bf1f36f4dff3e1","modified":1641840364333},{"_id":"source/_posts/Github基本使用.md","hash":"14100455ce2711b4444ff7b02aaa483e3b87e573","modified":1641829817275},{"_id":"source/_posts/hello-world.md","hash":"acad91ace80b80295b11a9b7ad4c29a2dcfdd8fb","modified":1641547734000},{"_id":"source/_posts/hexo文章内嵌HTML页面实例.md","hash":"4878a7cd8c79c718cab687f85bb9c071c3bfb9b1","modified":1641931767650},{"_id":"source/_posts/这是我的第一个条博客.md","hash":"a1fe539fca4e3aa48bc07b92ee8412dabade1d32","modified":1641632461298},{"_id":"source/_posts/今日诗词.md","hash":"ae36183be9372a4d39aea6b25c592e4dc31ec293","modified":1641835824602},{"_id":"source/_posts/OpenWrt的编译笔记.md","hash":"7eafbc534c382a07667570e47b635122559df4b1","modified":1642018307315},{"_id":"source/tags/index.md","hash":"6025001a11ca49fdc3c6813f34db51e2269bcce0","modified":1641496320000},{"_id":"source/_posts/hexo安装教程.md","hash":"1deabbc0c5756bd444637bbdcb16e0b7ef27f3eb","modified":1641741783313},{"_id":"source/_posts/particlesJS.md","hash":"a644e661c9f1e707dc48b9b432a42337f52e559d","modified":1642004459187},{"_id":"source/_posts/hexo笔记.md","hash":"e49a924273839daadac8d3b0a9c93e5da5960c17","modified":1641790411699},{"_id":"source/_posts/青龙面板.md","hash":"8cc6dda4f975747e0a88f7b5a2868dbee9cc71f9","modified":1646139982199},{"_id":"source/about/index.md","hash":"795197decf0dcdd94e3cc54c273e601ef70ba125","modified":1646138173656},{"_id":"source/_posts/青龙面板搭建JDX短信登.md","hash":"289d0e64980dc16b0be8606adf484f0b247ca008","modified":1646403288378},{"_id":"source/categories/index.md","hash":"ae2bfefe66e503e4f738f59b012f90d962bd104d","modified":1641563896905},{"_id":"source/_posts/hexo安装教程/image-20220107192509368.png","hash":"6594a12ef005e2801c5fbfbe7e99ae77fc25bead","modified":1641554719765},{"_id":"source/_posts/Eruda-手机网页前端调试面板/screenshot.jpg","hash":"b91728e0e6f47c16de2ed619574eaf21e136ee1e","modified":1641839337872},{"_id":"themes/next/.eslintrc.json","hash":"d3c11de434171d55d70daadd3914bc33544b74b8","modified":1641549342000},{"_id":"themes/next/.gitattributes","hash":"3e00e1fb043438cd820d94ee3dc9ffb6718996f3","modified":1641549342000},{"_id":"themes/next/.editorconfig","hash":"731c650ddad6eb0fc7c3d4a91cad1698fe7ad311","modified":1641549342000},{"_id":"themes/next/.travis.yml","hash":"379f31a140ce41e441442add6f673bf397d863ea","modified":1641549342000},{"_id":"themes/next/crowdin.yml","hash":"4a53f5985e545c635cb56b2a57ed290cb8cf8942","modified":1641549342000},{"_id":"themes/next/LICENSE.md","hash":"0a9c7399f102b4eb0a6950dd31264be421557c7d","modified":1641549342000},{"_id":"themes/next/README.md","hash":"7d56751b580d042559b2acf904fca4b42bcb30a7","modified":1641549342000},{"_id":"themes/next/package.json","hash":"b099e7cea4406e209130410d13de87988ba37b2a","modified":1641549342000},{"_id":"themes/next/.gitignore","hash":"83418530da80e6a78501e1d62a89c3bf5cbaec3d","modified":1641549342000},{"_id":"themes/next/scripts/renderer.js","hash":"e3658eea97b1183ee2e9f676231e53f7994741f6","modified":1641549342000},{"_id":"themes/next/scripts/events/index.js","hash":"5c355f10fe8c948a7f7cd28bd8120adb7595ebde","modified":1641549342000},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"ad321db012cea520066deb0639335e9bc0dcc343","modified":1641549342000},{"_id":"themes/next/scripts/filters/front-matter.js","hash":"305d03c1e45782988809298c3e3b3c5d5ee438aa","modified":1641549342000},{"_id":"themes/next/scripts/filters/locals.js","hash":"a5e7d05d3bd2ae6dcffad5a8ea0f72c6e55dbd02","modified":1641549342000},{"_id":"themes/next/scripts/filters/post.js","hash":"57f2d817578dd97e206942604365e936a49854de","modified":1641549342000},{"_id":"themes/next/scripts/filters/minify.js","hash":"21196a48cb127bf476ce598f25f24e8a53ef50c2","modified":1641549342000},{"_id":"themes/next/scripts/helpers/engine.js","hash":"eb6b8bbc1dce4846cd5e0fac0452dbff56d07b5d","modified":1641549342000},{"_id":"themes/next/_config.yml","hash":"a16598c64da31c376e3cc66ec2e30aee8fd5bc7c","modified":1646136739113},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"b8d7ddfa4baa9b8d6b9066a634aa81c6243beec9","modified":1641549342000},{"_id":"themes/next/scripts/helpers/font.js","hash":"8fb1c0fc745df28e20b96222974402aab6d13a79","modified":1641549342000},{"_id":"themes/next/gulpfile.js","hash":"0c76a1ac610ee8cbe8e2cc9cca1c925ffd0edf98","modified":1641549342000},{"_id":"themes/next/.stylintrc","hash":"6259e2a0b65d46865ab89564b88fc67638668295","modified":1641549342000},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"4044129368d0e2811859a9661cad8ab47118bc32","modified":1641549342000},{"_id":"themes/next/scripts/tags/button.js","hash":"bb0e8abbc0a6d5b3a1a75a23976f2ac3075aab31","modified":1641549342000},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"840536754121e0da5968f5ad235f29200fc5d769","modified":1641549342000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"93ccd3f99d3cb42674f29183c756df63acb5d7f8","modified":1641549342000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"e2d0184bc4a557e1017395b80ff46880078d8537","modified":1641549342000},{"_id":"themes/next/scripts/tags/label.js","hash":"fc83f4e1be2c34e81cb79938f4f99973eba1ea60","modified":1641549342000},{"_id":"themes/next/scripts/tags/note.js","hash":"1fdf4f95810fdb983bfd5ad4c4f13fedd4ea2f8d","modified":1641549342000},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"81134494ff0134c0dae1b3815caf6606fccd4e46","modified":1641549342000},{"_id":"themes/next/scripts/tags/tabs.js","hash":"c70a4a66fd0c28c98ccb6c5d5f398972e5574d28","modified":1641549342000},{"_id":"themes/next/scripts/tags/pdf.js","hash":"37b53661ad00a01a2ca7d2e4a5ad3a926073f8e2","modified":1641549342000},{"_id":"themes/next/scripts/tags/video.js","hash":"944293fec96e568d9b09bc1280d5dbc9ee1bbd17","modified":1641549342000},{"_id":"themes/next/languages/hu.yml","hash":"0ea89ffaefd02a10494995f05a2a59d5e5679a28","modified":1641549342000},{"_id":"themes/next/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1641549342000},{"_id":"themes/next/languages/fr.yml","hash":"3e2f89d4bb4441d33ecc7b5a4ee114f627603391","modified":1641549342000},{"_id":"themes/next/languages/id.yml","hash":"7599bb0ecf278beb8fde3d17bfc148a3241aef82","modified":1641549342000},{"_id":"themes/next/languages/it.yml","hash":"46222f468e66789e9ba13095809eb5e5b63edf30","modified":1641549342000},{"_id":"themes/next/languages/ja.yml","hash":"bf279d0eb1911806d01a12f27261fbc76a3bb3f9","modified":1641549342000},{"_id":"themes/next/languages/ar.yml","hash":"abcf220bd615cec0dd50e4d98da56580169d77e1","modified":1641549342000},{"_id":"themes/next/languages/de.yml","hash":"15078b7ede1b084e8a6a15d271f0db9c325bd698","modified":1641549342000},{"_id":"themes/next/languages/en.yml","hash":"dbb64776f9c001c54d0058256c415a9a0724ed5d","modified":1641549342000},{"_id":"themes/next/languages/es.yml","hash":"f064c793d56a5e0f20cda93b6f0e355044efc7d8","modified":1641549342000},{"_id":"themes/next/languages/nl.yml","hash":"9749cf90b250e631dd550a4f32ada3bb20f66dd0","modified":1641549342000},{"_id":"themes/next/languages/ko.yml","hash":"af4be6cb394abd4e2e9a728418897d2ed4cc5315","modified":1641549342000},{"_id":"themes/next/languages/pt-BR.yml","hash":"69aa3bef5710b61dc9a0f3b3a8f52f88c4d08c00","modified":1641549342000},{"_id":"themes/next/languages/ru.yml","hash":"012abc694cf9de281a0610f95f79c594f0a16562","modified":1641549342000},{"_id":"themes/next/languages/pt.yml","hash":"f6606dd0b916a465c233f24bd9a70adce34dc8d6","modified":1641549342000},{"_id":"themes/next/languages/tr.yml","hash":"c4e9ab7e047ae13a19f147c6bec163c3ba2c6898","modified":1641549342000},{"_id":"themes/next/languages/fa.yml","hash":"6c0a7d5bcc26eb45a9f3e02f13117c668e77fffd","modified":1641549342000},{"_id":"themes/next/languages/zh-HK.yml","hash":"92ccee40c234626bf0142152949811ebe39fcef2","modified":1641549342000},{"_id":"themes/next/languages/zh-TW.yml","hash":"cf0740648725983fb88409d6501876f8b79db41d","modified":1641549342000},{"_id":"themes/next/languages/vi.yml","hash":"6a578cc28773bd764f4418110500478f185d6efa","modified":1641549342000},{"_id":"themes/next/languages/uk.yml","hash":"69ef00b1b8225920fcefff6a6b6f2f3aad00b4ce","modified":1641549342000},{"_id":"themes/next/languages/zh-CN.yml","hash":"6f64c9a1e6c36918d340974f8251de68e7793a92","modified":1641919102028},{"_id":"themes/next/layout/index.swig","hash":"8dfd96fb6f833dd5d037de800813105654e8e8e6","modified":1641549342000},{"_id":"themes/next/layout/archive.swig","hash":"d9bca77f6dcfef71e300a294f731bead11ce199f","modified":1641549342000},{"_id":"themes/next/layout/post.swig","hash":"737933a64cb54b08fd0a3576a82f5f59d9ee1030","modified":1641756667722},{"_id":"themes/next/layout/category.swig","hash":"c546b017a956faaa5f5643c7c8a363af7ac9d6b9","modified":1641549342000},{"_id":"themes/next/layout/_layout.swig","hash":"bb058731e8f5a72a68a0f7315ed1942d5fc47b3d","modified":1641845832262},{"_id":"themes/next/layout/page.swig","hash":"357d916694d4c9a0fd1140fa56d3d17e067d8b52","modified":1641549342000},{"_id":"themes/next/layout/tag.swig","hash":"d44ff8755727f6532e86fc9fc8dc631200ffe161","modified":1641549342000},{"_id":"themes/next/docs/AGPL3.md","hash":"f463f95b169d64983f59fa6f3e4b6760290a0e6b","modified":1641549342000},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"60c7e9ef0c578deebad43e9395c958fa61096baf","modified":1641549342000},{"_id":"themes/next/docs/DATA-FILES.md","hash":"980fb8d37701f7fd96b30bb911519de3bbb473d1","modified":1641549342000},{"_id":"themes/next/docs/AUTHORS.md","hash":"cde7cc095ac31b421a573042cf61060f90d9ad0d","modified":1641549342000},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"6cc663db5e99fd86bb993c10d446ad26ada88e58","modified":1641549342000},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"1e86d32063b490d204baa9d45d8d3cb22c24a37d","modified":1641549342000},{"_id":"themes/next/docs/INSTALLATION.md","hash":"07ea00bee149a1bdc9073e903ee6b411e9f2f818","modified":1641549342000},{"_id":"themes/next/docs/LICENSE.txt","hash":"ae5ad07e4f4106bad55535dba042221539e6c7f9","modified":1641549342000},{"_id":"themes/next/docs/MATH.md","hash":"f56946053ade0915ff7efa74d43c38b8dd9e63bb","modified":1641549342000},{"_id":"themes/next/scripts/events/lib/config.js","hash":"aefe3b38a22bc155d485e39187f23e4f2ee5680a","modified":1641549342000},{"_id":"themes/next/scripts/events/lib/injects-point.js","hash":"08496b71c9939718e7955704d219e44d7109247b","modified":1641549342000},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"e73f697bb160b223fdde783237148be5f41c1d78","modified":1641549342000},{"_id":"themes/next/source/lib/anime.min.js","hash":"960be51132134acd65c2017cc8a5d69cb419a0cd","modified":1641549342000},{"_id":"themes/next/source/css/_colors.styl","hash":"11aef31a8e76f0f332a274a8bfd4537b73d4f88f","modified":1641549342000},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"2f22f48f7370470cef78561a47c2a47c78035385","modified":1641549342000},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"0c3bea89d64bc12c1bbe6f208a83773c6fb5375a","modified":1641549342000},{"_id":"themes/next/source/css/_mixins.styl","hash":"072a3fa473c19b20ccd7536a656cda044dbdae0a","modified":1641549342000},{"_id":"themes/next/source/css/main.styl","hash":"815ef30987d02f3d76dbe4b5ee3a72135a152678","modified":1641549342000},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"713056d33dbcd8e9748205c5680b456c21174f4e","modified":1641549342000},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"a4f3153ac76a7ffdf6cc70f52f1b2cc218ed393e","modified":1641549342000},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"67cf90d9a2428c14eb113a64bdd213c22a019aef","modified":1641549342000},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"323a47df6ded894944a2647db44556d6163e67c4","modified":1641549342000},{"_id":"themes/next/scripts/filters/comment/valine.js","hash":"851359f5ff90f733a9bd7fe677edbee8b8ac714c","modified":1641549342000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"5bffdb1448caca7db7b1f84e1693e6657a106d50","modified":1641549342000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"30ade8c806d7826cc50a4a3e46a9e6213fddf333","modified":1641549342000},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"3a80559df0b670ccb065ea9d3bb587d0b61be3a4","modified":1641549342000},{"_id":"themes/next/layout/_partials/languages.swig","hash":"c3ea82604a5853fb44c5f4e4663cbe912aa5dcf8","modified":1641549342000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"142efb4c6b73d8f736f6784804b40d5871333172","modified":1641549342000},{"_id":"themes/next/layout/_macro/post.swig","hash":"c3fd56bac90ce45a0c79ddfe68beb223ad0d72b4","modified":1641549342000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"2de77d533c91532a8a4052000244d0c1693370df","modified":1641549342000},{"_id":"themes/next/layout/_third-party/index.swig","hash":"c6b63cbc80938e6e09578b8c67e01adf13a9e3bd","modified":1641549342000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"cabbd54cf18b85e710b60e446f0bc630ff353214","modified":1641762631694},{"_id":"themes/next/layout/_partials/widgets.swig","hash":"5392dcbb504266f0f61d5b8219914068ef9cdc25","modified":1641549342000},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"5ae5adcd6f63ed98b2071e4f7e5e38c4d7d24e1b","modified":1641549342000},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"28b0a7e843ec4365db1963646659a153753cd746","modified":1641549342000},{"_id":"themes/next/layout/_scripts/index.swig","hash":"1822eaf55bbb4bec88871c324fc18ad95580ccb4","modified":1641549342000},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"7b9e0f776a5be6c3f95bc7f394e1424ba02ba93b","modified":1641549342000},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"269102fc5e46bd1ce75abdcce161f0570ae70e2f","modified":1641549342000},{"_id":"themes/next/layout/_scripts/pjax.swig","hash":"ccff5a773644d33ff22f6b45b6734f52b048f22b","modified":1641549342000},{"_id":"themes/next/layout/_scripts/three.swig","hash":"6b092c6d882b2dfa5273e1b3f60b244cb7c29fcd","modified":1641549342000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"244ca2d74ee0d497c87572c6a26b43c62a952673","modified":1641549342000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1641549342000},{"_id":"themes/next/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1641549342000},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1641549342000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1641549342000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1641549342000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1641549342000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1641549342000},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1641549342000},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1641549342000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1641549342000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1641549342000},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1641549342000},{"_id":"themes/next/source/js/algolia-search.js","hash":"6a813410e33824d7acc65a369a2983912bb3420c","modified":1641549342000},{"_id":"themes/next/source/js/motion.js","hash":"d5aa1a08cdf3c8d1d8d550fb1801274cc41e5874","modified":1641549342000},{"_id":"themes/next/source/js/next-boot.js","hash":"250d8dcd6322e69e3fbadd0f3e37081c97b47c52","modified":1641549342000},{"_id":"themes/next/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1641549342000},{"_id":"themes/next/docs/ru/README.md","hash":"1e5ddb26ad6f931f8c06ce2120f257ff38b74fdf","modified":1641549342000},{"_id":"themes/next/source/js/utils.js","hash":"26a82e46fdcadc7c3c2c56a7267284b61a26f7f3","modified":1641549342000},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"54e6a067ed95268eab6be2ba040a7e9b1907928e","modified":1641549342000},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"a9cfe5ac9ef727a8650b2b6584482751a26b1460","modified":1641549342000},{"_id":"themes/next/source/js/bookmark.js","hash":"9f05fd3672789311dc0cf5b37e40dc654cb04a2a","modified":1641549342000},{"_id":"themes/next/source/js/local-search.js","hash":"cfa6a0f3f9c2bc759ee507668a21f4e8f250f42a","modified":1641549342000},{"_id":"themes/next/source/assets/live2D/autoload.js","hash":"1f37fb92afcb20f3b687ea2f8394c0fab8721688","modified":1641838299691},{"_id":"themes/next/source/assets/particles/app.js","hash":"9e7574e6332c736579a2d6a9dca5c931b3ea135c","modified":1641764446669},{"_id":"themes/next/source/assets/live2D/waifu-tips.js","hash":"c001263af00debbfe5c6e5ed2cf5404e027d78dc","modified":1662520784103},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"cb8e39c377fc4a14aaf133b4d1338a48560e9e65","modified":1641549342000},{"_id":"themes/next/source/assets/live2D/waifu-tips.json","hash":"e0c159ebcaa0f729f15a86f4712d3296246bb2e8","modified":1641664848000},{"_id":"themes/next/source/assets/live2D/waifu.css","hash":"8117ac10c46b9518df439ff8e89419a3d6b99e27","modified":1641674368120},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"5980abbbbeacd8541121f436fa414d24ad5e97c2","modified":1641549342000},{"_id":"themes/next/source/assets/particles/particles.json","hash":"1498bb79e5154b171a7c365710fc392f631c5653","modified":1641682312712},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"c22b58af3327236ec54d5706501aa5a20e15012e","modified":1641549342000},{"_id":"themes/next/source/assets/particles/particles.js","hash":"6d41b2dfd94b9b8e8b96b95d1258f57efb11aada","modified":1490463981000},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"583ff1e7a2ca889f1f54eb0ca793894466823c7c","modified":1641549342000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"4e33774b1fe6d0a51f3a428c54c5e600e83bf154","modified":1641549342000},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"90cce9f407e9490756ba99580e3eb09f55b05eaa","modified":1641549342000},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"7d638e413f2548fc990c4a467dd03de6c81fc960","modified":1641549342000},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"ba6959c450b42c75c5c21caaae1d3324ba3537fc","modified":1641790203618},{"_id":"themes/next/layout/_partials/header/menu-item.swig","hash":"4baa86ca631168fc6388d27f4b1b501b40c877a8","modified":1641549342000},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"90d3eaba6fbe69bee465ddd67c467fd2c0239dc4","modified":1641789642491},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"0dd316f153c492c0a03bd0273d50fa322bc81f11","modified":1641549342000},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"bed6cc2b48cf2655036ba39c9bae73a295228a4d","modified":1641549342000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1641549342000},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"8d4e3dd0d3631ce0b21bc15c259f6ac886de631d","modified":1641549342000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1641549342000},{"_id":"themes/next/layout/_partials/post/post-followme.swig","hash":"d8f785c062c6b0763a778bd4a252e6f5fee0e432","modified":1641549342000},{"_id":"themes/next/layout/_partials/post/post-footer.swig","hash":"ce712c110b5ce8aacba7a86b0558ff89700675c9","modified":1641549342000},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"91c0addb33006619faa4c32e5d66874e25f1e9b3","modified":1641549342000},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"f2eb455c8bf13533427254f0c9b4b17b2498168b","modified":1641549342000},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"a6c761d5193cb6f22e9422dbbcf209e05471b0ed","modified":1641549342000},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"98fd1f5df044f4534e1d4ca9ab092ba5761739a9","modified":1641549342000},{"_id":"themes/next/layout/_partials/post/post-reward.swig","hash":"f349a226e5370075bb6924e60da8b0170c7cfcc1","modified":1641549342000},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"bc7b047a6246df07767373644b1637d91c3a88b1","modified":1641549342000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"128f7d679bb4d53b29203d598d217f029a66dee7","modified":1641549342000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"9298e6d6c4a62a0862fc0f4060ed99779d7b68cb","modified":1641549342000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"1b29b99fa921f12c25d3dc95facdf84ef7bb1b5c","modified":1641549342000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"3d91899ca079e84d95087b882526d291e6f53918","modified":1641549342000},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"606ad14a29320157df9b8f33738282c51bb393d9","modified":1641549342000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"84adaadd83ce447fa9da2cff19006334c9fcbff9","modified":1641549342000},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"ae2707d6e47582bb470c075649ec7bad86a6d5a9","modified":1641549342000},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"91c2cb900c76224c5814eeb842d1d5f517f9bf05","modified":1641549342000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"85b60e222712ca3b2c4dc2039de2dc36b8d82940","modified":1641549342000},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"a42f97eda3748583bac2253c47fe5dfa54f07b8f","modified":1641549342000},{"_id":"themes/next/layout/_third-party/chat/chatra.swig","hash":"2642e8aef5afbe23a2a76efdc955dab2ee04ed48","modified":1641549342000},{"_id":"themes/next/layout/_third-party/chat/tidio.swig","hash":"fb94ee487d75e484e59b7fba96e989f699ff8a83","modified":1641549342000},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"fd726aad77a57b288f07d6998ec29291c67c7cbb","modified":1641549342000},{"_id":"themes/next/layout/_third-party/search/swiftype.swig","hash":"aa6ab95b8b76611694613defb4bf25003d1b927f","modified":1641549342000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"58296a5c1883f26464c2a5ccf734c19f5fbf395a","modified":1641549342000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b8819bd056f8a580c5556d4415836a906ed5d7a4","modified":1641549342000},{"_id":"themes/next/layout/_third-party/tags/pdf.swig","hash":"5a223b60406cee7438cfe3a5e41d1284425aa7a5","modified":1641549342000},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"276f523e414d4aa7f350a8f2fd3df8a3d8ea9656","modified":1641549342000},{"_id":"themes/next/layout/_third-party/tags/mermaid.swig","hash":"619338ddacf01e3df812e66a997e778f672f4726","modified":1641549342000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"0b44f400ec00d2b5add5ee96c11d22465c432376","modified":1641549342000},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"59df21fcfe9d0ada8cee3188cb1075529c1c3eb8","modified":1641549342000},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"1f34b2d3c753a3589ab6c462880bd4eb7df09914","modified":1641549342000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"34495d408e8467555afee489500b8aad98c52079","modified":1641549342000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"0b44f400ec00d2b5add5ee96c11d22465c432376","modified":1641549342000},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"34495d408e8467555afee489500b8aad98c52079","modified":1641549342000},{"_id":"themes/next/layout/_third-party/statistics/cnzz-analytics.swig","hash":"53a0760c75d5aaabb3ce8e8aa8e003510d59807f","modified":1641549342000},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.swig","hash":"c171ea94e9afbba97f06856904264da331559463","modified":1641549342000},{"_id":"themes/next/layout/_third-party/statistics/index.swig","hash":"964cd6bac668cf6d211a2624fbef3948cfdece55","modified":1641549342000},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.swig","hash":"d2f0e4c598410ec33785abe302c7ea7492bb791a","modified":1641549342000},{"_id":"themes/next/layout/_third-party/statistics/firestore.swig","hash":"01d94354d07e72cad47100482068b6be69fcc033","modified":1641549342000},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"b85a6e2af1387fe64b51e7cd3e2da8616e6f5a3f","modified":1641549342000},{"_id":"themes/next/source/js/schemes/muse.js","hash":"a18559a9c332199efad0100cf84bb0c23fc0f17a","modified":1641549342000},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"3202be9a8d31986caac640e7a4c7ce22e99917eb","modified":1641549342000},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"611f2930c2b281b80543531b1bf33d082531456a","modified":1641549342000},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"2d868cd271d78b08775e28c5b976de8836da4455","modified":1641549342000},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"716111dd36d276f463c707dfcc9937fea2a1cf7a","modified":1641549342000},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"7e6f227f2aaf30f400d4c065650a4e3d0d61b9e1","modified":1641549342000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"d8f76000efce104e5f6231ac24c91dd4a730ed1b","modified":1641784384253},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"50ab381c27611d5bf97bb3907b5ca9998f28187d","modified":1641549342000},{"_id":"themes/next/layout/_partials/sidebar/site-overview.swig","hash":"7b2ef5db9615267a24b884388925de1e9b447c1f","modified":1641549342000},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"0d46f9f50cf2e4183970adce705d1041155b0d37","modified":1641549342000},{"_id":"themes/next/docs/zh-CN/README.md","hash":"8f7c0d0b766024152591d4ccfac715c8e18b37f3","modified":1641549342000},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"b3201934b966bc731eaf8a4dad4ba4bdcd300c10","modified":1641549342000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"7a95c27762e1303bf06ee808c63f616cb192fcaf","modified":1641549342000},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"a2ee16cac29a82cfce26804c160286fcbee94161","modified":1641549342000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"e342b8f8e11a3a6aa5a029912c9778c25bf5d135","modified":1641784396809},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"b9e87d32da24264bda247c1526afe140c858b0ef","modified":1641549342000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"716e8b0f056bf6393e6bc6969ac84598ab8e7a6f","modified":1641549342000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"c5142739e01e9f25c8b32b2209af85c787bb2b42","modified":1641549342000},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"12b265f82840f27112ca2b1be497677f20f87545","modified":1641549342000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"e1c29b81a32273a0dedd926cda199a71aea72624","modified":1641549342000},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","hash":"82e34d28f8a1169b20b60101d5bb0446deba3514","modified":1641549342000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"49c76bc723d3952abb613d9d68398ed7305da999","modified":1641549342000},{"_id":"themes/next/layout/_scripts/pages/schedule.swig","hash":"34c05e9d73b0f081db70990c296b6d6a0f8ea2ca","modified":1641549342000},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"2d3e05015796a790abd9d68957a5c698c0c9f9b6","modified":1641549342000},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"8674bd88df076a1dfe4023ed6750ded1f5b00223","modified":1641549342000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"4b7f057dbb53efd7cbe7eac7835a793ab3cbb135","modified":1641549342000},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"9898323ee5a7ac2a5d4f633c653112280beb2643","modified":1641549342000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"25c2a7930da14f023329df20f38df2728057fb4d","modified":1641549342000},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"b69ac38b9da8c9c1b7de696fdeea7f9d7705213a","modified":1641549342000},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1641549342000},{"_id":"themes/next/source/css/_common/outline/footer/footer.styl","hash":"7eeb22c5696f8e0c95161dc57703973cf81c8c12","modified":1641549342000},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"558794fced306339b98dc2b0ee7f0576802f1355","modified":1641549342000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"25c2a7930da14f023329df20f38df2728057fb4d","modified":1641549342000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"d17236df3b4d6def1e4e81133ef4729c390de3ac","modified":1641549342000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"0534b329d279a6f255112b3305ff92c810f31724","modified":1641549342000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"510a6f0ba7485dd54ce347cca890ab52c4957081","modified":1641549342000},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"c52648a7b09f9fe37858f5694fcc1ffc709ad147","modified":1641549342000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5de34e1d8a290751641ae456c942410852d5e809","modified":1641783799229},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"45f4badac6ec45cf24355f6157aece1d4d3f1134","modified":1641549342000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"0a9f0d9eb042595502d200fb8c65efb0e6c89aa9","modified":1641549342000},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"4b068d0d898f4e624937503f0e1428993050bd65","modified":1641549342000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"43045d115f8fe95732c446aa45bf1c97609ff2a5","modified":1641549342000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"f317d2e3886e94f5fbb8781c2e68edd19669ff58","modified":1641549342000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"ccff77e5a5dc266f0ee0f6cedab86176a570ac8a","modified":1641784402338},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5540c9259cb7895a5f10a289c7937e5470a7c134","modified":1641549342000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"6d740699fb6a7640647a8fd77c4ea4992d8d6437","modified":1641549342000},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"b8c816fba0a9b4a35fbae03ba5b1b2da96ba2687","modified":1641549342000},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"b4f4bae437d4f994af93cf142494ffcd86bae46b","modified":1641549342000},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"b619f39e18398422e0ac4999d8f042a5eaebe9cd","modified":1641549342000},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"20e0e3e3eba384930c022e21511214d244b4c9e7","modified":1641549342000},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"7a3a56b10ab714c0e2ed240d0939deeecdcad167","modified":1641549342000},{"_id":"themes/next/source/css/_common/outline/header/header.styl","hash":"300058ca12e81013e77ba01fe66ac210525768b6","modified":1641549342000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"49722d555a2edb18094bb2cb3d7336dd72051b93","modified":1641549342000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"096f908c08ce553e482aadfd3e767a0145191093","modified":1641549342000},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"b31c86d1a4f89837f9187bed646bda96b2cd286c","modified":1641549342000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"525242ce9e912c4adfe5134347c67dbdb9e98e3d","modified":1641549342000},{"_id":"themes/next/source/css/_common/outline/header/headerband.styl","hash":"6d5f26646e2914474f295de8bf6dc327d4acd529","modified":1641549342000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"098b4bdf49c7300490f959386d5d1185a32543f6","modified":1641549342000},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"3d16ac0f4ccaeed868c246d4d49bde543d1f62cb","modified":1641549342000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"12f7eaf6b56624cbc411528562d6bb848ff97039","modified":1641549342000},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"67a1fcb33535122d41acd24f1f49cf02c89b88fa","modified":1641549342000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"357f825f0a649b2e28cba1481d4c9a0cb402e43a","modified":1641549342000},{"_id":"themes/next/source/css/_common/scaffolding/highlight/diff.styl","hash":"83bd737f663a8461e66985af8ddbfc0a731fc939","modified":1641549342000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar.styl","hash":"5d540f683018745a5ed1d6f635df28ea610c1244","modified":1641549342000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"b11b04737a1a0fea3bd9f0081d96ee6c015358d4","modified":1641549342000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"fa0a2ea57b7b4ce75b5d18c264af2d92ea3192f9","modified":1641549342000},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"4079e616fbf36112dec0674c1e0713d1d9769068","modified":1641549342000},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"236a039b0900f4267de566b46f62314ad967d30f","modified":1641549342000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"18edddb2ffb3f85a68e4367f81e06c461e07bc25","modified":1641549342000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"6cf78a379bb656cc0abb4ab80fcae60152ce41ad","modified":1641549342000},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"97974c231b4659b8aa5e9321c4d54db5c816d0db","modified":1641549342000},{"_id":"themes/next/source/css/_common/scaffolding/highlight/theme.styl","hash":"c911045b2ce9a66e38d9dd30c7ed078abbc10cbf","modified":1641549342000},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"b87f4a06c0db893df4f756f24be182e1a4751f24","modified":1641549342000},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"d83102771df652769e51ddfd041cf5f4ca1a041d","modified":1641549342000},{"_id":"themes/next/source/css/_common/scaffolding/highlight/highlight.styl","hash":"80488259271bcfe38031f4c2e902463daba9336b","modified":1641549342000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1f6b0d3ab227697ca115e57fd61122ea7950e19d","modified":1641549342000},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"8ed7a9d5dfac592de703421b543978095129aa5b","modified":1641549342000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"f6f05f02d50f742c84ee5122016c0563a8bb2cf9","modified":1641549342000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"9af620eba5ccceea21a0e3bc69f6f1fa7637c2f3","modified":1641549342000},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"bad99f4cccb93b3cefe990a2c85124e60698d32e","modified":1641549342000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"2c24829d95c742eb9e8316ebf2fbe9f2c168b59a","modified":1641549342000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"a52f8cae599099231866298ed831fdf76c9b6717","modified":1641549342000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"97dec98d0403097d66822f1c90b50b2890c84698","modified":1641549342000},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"09dda2667628d1f91b2e37d8fc6df1413f961b64","modified":1641549342000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5cc9e7394c927065c688cba5edd6e0a27587f1d8","modified":1641549342000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"b266d2ce5e2b117be01537889e839a69004dc0bb","modified":1641549342000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"70b3eb9d36543ab92796ac163544e9cf51b7c1e6","modified":1641549342000},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"93ba8172c0d2c37d738e6dbd44fcd5a2e23b92f3","modified":1641549342000},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"ceacfa6218f6084c71a230b086e5d2708d29927e","modified":1641549342000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"66fc406796b6efe6cea76550573b7a632112406a","modified":1641549342000},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"57b9a179675f1536e017cba457b6ac575e397c4f","modified":1641549342000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"0dfb97703a519d9438f64f9e41ab1dd37381f733","modified":1641549342000},{"_id":"themes/next/source/css/_common/scaffolding/tags/tags.styl","hash":"51d46fa3c7c6b691c61a2c2b0ac005c97cfbf72b","modified":1641549342000},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"aca7bb220fc14ef2a8f96282d2a95a96a9238d46","modified":1641549342000},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"8b7aafb911850c73074cdb6cc87abe4ac8c12e99","modified":1641549342000},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"03a5bcecc0b12231462ef6ffe432fa77ee71beff","modified":1641549342000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"fcd64c23d17775b3635325f6758b648d932e79b5","modified":1641549342000},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"adaf0f580fccf4158169eeaf534a18005b39a760","modified":1641549342000},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"3256e39f281f06751a1c0145d9806a0e56d68170","modified":1641549342000},{"_id":"themes/next/source/uploads/avatar.jpg","hash":"f5c87aacf813781ba4f6f91e3a8b0de064bbebe0","modified":1641635170348},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1641549342000},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1641549342000},{"_id":"themes/next/source/assets/live2D/live2d.min.js","hash":"94383fb61de815c3f806ae3f11026bbcfe384082","modified":1641664848000},{"_id":"public/search.xml","hash":"c01aab6d9f38c8b302fb1aa40590bf3a49677c59","modified":1662565114611},{"_id":"public/tags/index.html","hash":"c8a2cd45e35556e52fb751902835b337ac9a5e3d","modified":1662565114611},{"_id":"public/archives/2022/03/index.html","hash":"0306821215c392633e11cc6c62d5323e615cda10","modified":1662565114611},{"_id":"public/categories/GitHub/index.html","hash":"75e3bd9704e9f6e0cb46d896e08cf4eca45b80b1","modified":1662565114611},{"_id":"public/categories/学习/index.html","hash":"5e82de9422fc0223d0ec21106ab202e69e804304","modified":1662565114611},{"_id":"public/categories/node/index.html","hash":"caaabeb68936904f4f2783d4a990513c01d4ab65","modified":1662565114611},{"_id":"public/categories/OpenWrt/index.html","hash":"08f96af68edadfda1cde7f38dc2e8fa82f37e678","modified":1662565114611},{"_id":"public/categories/HTML/index.html","hash":"a7faa82c5613101dc827df40d33c470aef8d7373","modified":1662565114611},{"_id":"public/categories/青龙面板/index.html","hash":"b76f9a3e5a893da08badae5381856351dc508914","modified":1662565114611},{"_id":"public/categories/HTML/学习/index.html","hash":"83b02756410a392dfc73240773acc85285faa893","modified":1662565114611},{"_id":"public/categories/hexo/HTML背景特效/index.html","hash":"83f9de4a05b79de31e0310dd38803707d85449f2","modified":1662565114611},{"_id":"public/categories/hexo/HTML背景特效/学习/index.html","hash":"9baa6d3adbef021765975c70ff04d0fa0c43cb45","modified":1662565114611},{"_id":"public/categories/hexo/HTML背景特效/学习/HTML/index.html","hash":"699536a4edf80994b5d8a35aa93adeded678d316","modified":1662565114611},{"_id":"public/tags/学习/page/2/index.html","hash":"2643c873a85efbe192342b95e7eddae87ce89438","modified":1662565114611},{"_id":"public/tags/GitHub/index.html","hash":"64cfb01991bd088b4ce5599d048e4fd1ba956529","modified":1662565114611},{"_id":"public/tags/node/index.html","hash":"dade197aea0b8e2afc2425fe637d698f945d7ac4","modified":1662565114611},{"_id":"public/tags/OpenWrt/index.html","hash":"3e3c4951039d07d54c742c1acfc431a86f644899","modified":1662565114611},{"_id":"public/tags/HTML/index.html","hash":"0ba37139251d6a883d1cd6581663f49653c35826","modified":1662565114611},{"_id":"public/tags/HTML背景特效/index.html","hash":"fb77ccfa3eb9e55a0586745859ecb355c1597f92","modified":1662565114611},{"_id":"public/tags/折腾/index.html","hash":"89b5f2221791c6ede3abb4c0f6a025d258865766","modified":1662565114611},{"_id":"public/tags/青龙面板/index.html","hash":"330e8b947f18fc014b03c1de3e3b32f880b04151","modified":1662565114611},{"_id":"public/categories/index.html","hash":"0d944560b28ef443791afd6d677c6622115b732b","modified":1662565114611},{"_id":"public/about/index.html","hash":"650734041e17854c261f8d739ad4f0c88589686c","modified":1662565114611},{"_id":"public/posts/5/这是我的第一个条博客/index.html","hash":"9c4481e4f45777f6c45ba2e9189cf8b93ccc2af2","modified":1662565114611},{"_id":"public/posts/4/hello-world/index.html","hash":"d2b0eeea5f37f6e7850261cad4ea537169080ffc","modified":1662565114611},{"_id":"public/posts/6/青龙面板搭建JDX短信登/index.html","hash":"e9cc2c0f14f1e41c325cadda9038b09253d3718d","modified":1662565114611},{"_id":"public/posts/3/NodeServer笔记/index.html","hash":"bf7974a6bea57a580eb69c4f5917d7956dc75cd1","modified":1662565114611},{"_id":"public/posts/5/青龙面板/index.html","hash":"889ba226188f703a9175436b2723b7edb9780e89","modified":1662565114611},{"_id":"public/posts/4/hexo文章内嵌HTML页面实例/index.html","hash":"faaab34c9c7a342c321e0fd9cf61481dec1d48cb","modified":1662565114611},{"_id":"public/posts/3/Eruda-手机网页前端调试面板/index.html","hash":"1e3c240a3181dd41d3bfc458f9572705b8ebcc04","modified":1662565114611},{"_id":"public/posts/2/Github基本使用/index.html","hash":"b80de2b06248161038862fc8d2dc8599be9b126b","modified":1662565114611},{"_id":"public/posts/5/particlesJS/index.html","hash":"10696ca067926b50f718b7fe048778d938d5a140","modified":1662565114611},{"_id":"public/posts/5/今日诗词/index.html","hash":"0a6a21fe3f9b856827f1f93e1522100f511eeb51","modified":1662565114611},{"_id":"public/posts/4/OpenWrt的编译笔记/index.html","hash":"bef166b6a3ad1ee7e452eff6c877d531212d2202","modified":1662565114611},{"_id":"public/posts/5/hexo笔记/index.html","hash":"87e3c17280b154665f056bc4ccc03c43b6a89fe3","modified":1662565114611},{"_id":"public/posts/4/hexo安装教程/index.html","hash":"98af751f575d617994c2951d09675d48e4eb2346","modified":1662565114611},{"_id":"public/archives/index.html","hash":"6e04199333cbbd7ce210f9d4d7fbf146b835a60c","modified":1662565114611},{"_id":"public/archives/page/2/index.html","hash":"40ffdf0755aa1a4924bbf4ef995f3fa8e4e09fa4","modified":1662565114611},{"_id":"public/archives/2022/index.html","hash":"e3678ad56f153b8a4def3e2674e2832325290ad2","modified":1662565114611},{"_id":"public/archives/2022/page/2/index.html","hash":"3f1fb5420883dd755f6e1e2794e4aabc320acbc1","modified":1662565114611},{"_id":"public/archives/2022/01/index.html","hash":"efe35003170ab5233d43817821d43021d0cf2f12","modified":1662565114611},{"_id":"public/archives/2022/09/index.html","hash":"b74a77a5edf8345106b1f3e1dffee32a2d395a51","modified":1662565114611},{"_id":"public/categories/hexo/index.html","hash":"3d53289521a2e1d3fd158af07d63372e5aefc93a","modified":1662565114611},{"_id":"public/index.html","hash":"6268a30e527a8083e665fdde17a017eed8c8a6c5","modified":1662565114611},{"_id":"public/page/2/index.html","hash":"66cef070c3f82821646265e556ee1a2de438972a","modified":1662565114611},{"_id":"public/page/3/index.html","hash":"e42975defc3a3902d39326ee3f5c4146d06542fe","modified":1662565114611},{"_id":"public/page/4/index.html","hash":"dbffd31f7ed7c4eb716b4cbd0c42e0b2599829b6","modified":1662565114611},{"_id":"public/page/5/index.html","hash":"79e61ca9ba5ea4d361aa7312999139effd2853c0","modified":1662565114611},{"_id":"public/tags/学习/index.html","hash":"253838b78789bc39e2816cc9e533bebe4cab4782","modified":1662565114611},{"_id":"public/tags/hexo/index.html","hash":"6fabc4356d73e4abe589b9f74990665a87bf981b","modified":1662565114611},{"_id":"public/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1662565114611},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1662565114611},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1662565114611},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1662565114611},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1662565114611},{"_id":"public/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1662565114611},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1662565114611},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1662565114611},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1662565114611},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1662565114611},{"_id":"public/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1662565114611},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1662565114611},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1662565114611},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1662565114611},{"_id":"public/posts/4/hexo安装教程/image-20220107192509368.png","hash":"6594a12ef005e2801c5fbfbe7e99ae77fc25bead","modified":1662565114611},{"_id":"public/uploads/avatar.jpg","hash":"f5c87aacf813781ba4f6f91e3a8b0de064bbebe0","modified":1662565114611},{"_id":"public/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1662565114611},{"_id":"public/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1662565114611},{"_id":"public/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1662565114611},{"_id":"public/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1662565114611},{"_id":"public/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1662565114611},{"_id":"public/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1662565114611},{"_id":"public/assets/live2D/autoload.js","hash":"1f37fb92afcb20f3b687ea2f8394c0fab8721688","modified":1662565114611},{"_id":"public/assets/live2D/waifu-tips.js","hash":"c001263af00debbfe5c6e5ed2cf5404e027d78dc","modified":1662565114611},{"_id":"public/assets/live2D/waifu-tips.json","hash":"a3f9d4d832cd0948cd21385e7e8c62db377ba7d4","modified":1662565114611},{"_id":"public/assets/live2D/waifu.css","hash":"8117ac10c46b9518df439ff8e89419a3d6b99e27","modified":1662565114611},{"_id":"public/assets/particles/app.js","hash":"9e7574e6332c736579a2d6a9dca5c931b3ea135c","modified":1662565114611},{"_id":"public/assets/particles/particles.json","hash":"11e501db6aa9ba4cb2cd0ee45ff3954e7de2f341","modified":1662565114611},{"_id":"public/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1662565114611},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1662565114611},{"_id":"public/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1662565114611},{"_id":"public/css/main.css","hash":"ef1a526ffa770098a6a20bbef450a6b5ff179b0f","modified":1662565114611},{"_id":"public/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1662565114611},{"_id":"public/assets/particles/particles.js","hash":"6d41b2dfd94b9b8e8b96b95d1258f57efb11aada","modified":1662565114611},{"_id":"public/assets/live2D/live2d.min.js","hash":"94383fb61de815c3f806ae3f11026bbcfe384082","modified":1662565114611},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1662565114611},{"_id":"public/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1662565114611},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1662565114611},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1662565114611},{"_id":"public/posts/3/Eruda-手机网页前端调试面板/screenshot.jpg","hash":"b91728e0e6f47c16de2ed619574eaf21e136ee1e","modified":1662565114611}],"Category":[{"name":"GitHub","_id":"cl7rscd1z0004bwuzgh0a9t73"},{"name":"学习","_id":"cl7rscd25000abwuz56e4hyvt"},{"name":"node","_id":"cl7rscd28000fbwuza73u7ycj"},{"name":"OpenWrt","_id":"cl7rscd2c000nbwuzbjb1e2of"},{"name":"HTML","_id":"cl7rscd2f000tbwuz9odg17mq"},{"name":"hexo","_id":"cl7rscd2h000xbwuz4k9o932b"},{"name":"青龙面板","_id":"cl7rscd2k001ebwuz50h429ew"},{"name":"学习","parent":"cl7rscd2f000tbwuz9odg17mq","_id":"cl7rscd2l001jbwuzhz282ct6"},{"name":"HTML背景特效","parent":"cl7rscd2h000xbwuz4k9o932b","_id":"cl7rscd2m001mbwuz7x5ihhqd"},{"name":"学习","parent":"cl7rscd2m001mbwuz7x5ihhqd","_id":"cl7rscd2o001vbwuz775y72dx"},{"name":"HTML","parent":"cl7rscd2o001vbwuz775y72dx","_id":"cl7rscd2p0023bwuzh1wxgnwx"}],"Data":[],"Page":[{"title":"tags标签测试","date":"2022-01-06T18:36:57.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags标签测试\ndate: 2022-01-07 02:36:57\ntype: \"tags\"\n---\n","updated":"2022-01-06T19:12:00.000Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cl7rscd1r0000bwuz55utfj19","content":"","site":{"data":{}},"excerpt":"","more":""},{"type":"categories","_content":"","source":"categories/index.md","raw":"---\ntype: categories\n---\n","date":"2022-01-07T13:58:16.905Z","updated":"2022-01-07T13:58:16.905Z","path":"categories/index.html","title":"","comments":1,"layout":"page","_id":"cl7rscd1x0002bwuzdtn39dys","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"每日一言","type":"about","_content":"\n<!-- 在span标签内加入 white-space: pre-wrap 样式，在strings内的语句中加入\\n换行符可以实现换行 -->\n\n```html\n<div>\n  <span id=\"typed\" style=\"white-space: pre-wrap;line-height: 30px;\"></span>\n</div>\n<script src=\"https://cdn.jsdelivr.net/npm/typed.js@2.0.12\"></script>\n<script type=\"text/javascript\">\n  var obj\n  function getHttp() {\n    var xhr = new XMLHttpRequest();\n    url = \"http://international.v1.hitokoto.cn/\";\n    xhr.open(\"GET\", url, false);\n    xhr.send(null);\n    console.log(JSON.parse(xhr.responseText))\n    return JSON.parse(xhr.responseText)\n  }\n  var options = {\n    strings: [],\n    typeSpeed: 100, //打印速度,\n    backSpeed: 100, //退格速度\n    startDelay: 300, //开始之前的延迟300毫秒\n    smartBackspace: true\n  };\n  obj = getHttp()\n  if (obj.from_who != null) {\n    options.strings.push('\\“' + obj.hitokoto  + \"\\”^2000—— \" + obj.from_who)\n  } else {\n    options.strings.push('\\“' + obj.hitokoto  + \"\\”^2000—— \" + obj.from)\n  }\n  var typed = new Typed('#typed', options);\n</script>\n```\n\n","source":"about/index.md","raw":"---\ntitle: \"每日一言\"\ntype: \"about\"\n---\n\n<!-- 在span标签内加入 white-space: pre-wrap 样式，在strings内的语句中加入\\n换行符可以实现换行 -->\n\n```html\n<div>\n  <span id=\"typed\" style=\"white-space: pre-wrap;line-height: 30px;\"></span>\n</div>\n<script src=\"https://cdn.jsdelivr.net/npm/typed.js@2.0.12\"></script>\n<script type=\"text/javascript\">\n  var obj\n  function getHttp() {\n    var xhr = new XMLHttpRequest();\n    url = \"http://international.v1.hitokoto.cn/\";\n    xhr.open(\"GET\", url, false);\n    xhr.send(null);\n    console.log(JSON.parse(xhr.responseText))\n    return JSON.parse(xhr.responseText)\n  }\n  var options = {\n    strings: [],\n    typeSpeed: 100, //打印速度,\n    backSpeed: 100, //退格速度\n    startDelay: 300, //开始之前的延迟300毫秒\n    smartBackspace: true\n  };\n  obj = getHttp()\n  if (obj.from_who != null) {\n    options.strings.push('\\“' + obj.hitokoto  + \"\\”^2000—— \" + obj.from_who)\n  } else {\n    options.strings.push('\\“' + obj.hitokoto  + \"\\”^2000—— \" + obj.from)\n  }\n  var typed = new Typed('#typed', options);\n</script>\n```\n\n","date":"2022-03-01T12:36:13.656Z","updated":"2022-03-01T12:36:13.656Z","path":"about/index.html","comments":1,"layout":"page","_id":"cl7rscd210006bwuz1zmm8rvr","content":"<!-- 在span标签内加入 white-space: pre-wrap 样式，在strings内的语句中加入\\n换行符可以实现换行 -->\n\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;typed&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;white-space: pre-wrap;line-height: 30px;&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://cdn.jsdelivr.net/npm/typed.js@2.0.12&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">var</span> obj</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">function</span> <span class=\"title function_\">getHttp</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> <span class=\"title class_\">XMLHttpRequest</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">    url = <span class=\"string\">&quot;http://international.v1.hitokoto.cn/&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    xhr.<span class=\"title function_\">open</span>(<span class=\"string\">&quot;GET&quot;</span>, url, <span class=\"literal\">false</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    xhr.<span class=\"title function_\">send</span>(<span class=\"literal\">null</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(xhr.<span class=\"property\">responseText</span>))</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">return</span> <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(xhr.<span class=\"property\">responseText</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">var</span> options = &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">strings</span>: [],</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">typeSpeed</span>: <span class=\"number\">100</span>, <span class=\"comment\">//打印速度,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">backSpeed</span>: <span class=\"number\">100</span>, <span class=\"comment\">//退格速度</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">startDelay</span>: <span class=\"number\">300</span>, <span class=\"comment\">//开始之前的延迟300毫秒</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">smartBackspace</span>: <span class=\"literal\">true</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  obj = <span class=\"title function_\">getHttp</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">if</span> (obj.<span class=\"property\">from_who</span> != <span class=\"literal\">null</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    options.<span class=\"property\">strings</span>.<span class=\"title function_\">push</span>(<span class=\"string\">&#x27;\\“&#x27;</span> + obj.<span class=\"property\">hitokoto</span>  + <span class=\"string\">&quot;\\”^2000—— &quot;</span> + obj.<span class=\"property\">from_who</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    options.<span class=\"property\">strings</span>.<span class=\"title function_\">push</span>(<span class=\"string\">&#x27;\\“&#x27;</span> + obj.<span class=\"property\">hitokoto</span>  + <span class=\"string\">&quot;\\”^2000—— &quot;</span> + obj.<span class=\"property\">from</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">var</span> typed = <span class=\"keyword\">new</span> <span class=\"title class_\">Typed</span>(<span class=\"string\">&#x27;#typed&#x27;</span>, options);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<!-- 在span标签内加入 white-space: pre-wrap 样式，在strings内的语句中加入\\n换行符可以实现换行 -->\n\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;typed&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;white-space: pre-wrap;line-height: 30px;&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://cdn.jsdelivr.net/npm/typed.js@2.0.12&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">var</span> obj</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">function</span> <span class=\"title function_\">getHttp</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> <span class=\"title class_\">XMLHttpRequest</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">    url = <span class=\"string\">&quot;http://international.v1.hitokoto.cn/&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    xhr.<span class=\"title function_\">open</span>(<span class=\"string\">&quot;GET&quot;</span>, url, <span class=\"literal\">false</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    xhr.<span class=\"title function_\">send</span>(<span class=\"literal\">null</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(xhr.<span class=\"property\">responseText</span>))</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">return</span> <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(xhr.<span class=\"property\">responseText</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">var</span> options = &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">strings</span>: [],</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">typeSpeed</span>: <span class=\"number\">100</span>, <span class=\"comment\">//打印速度,</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">backSpeed</span>: <span class=\"number\">100</span>, <span class=\"comment\">//退格速度</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">startDelay</span>: <span class=\"number\">300</span>, <span class=\"comment\">//开始之前的延迟300毫秒</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">smartBackspace</span>: <span class=\"literal\">true</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  obj = <span class=\"title function_\">getHttp</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">if</span> (obj.<span class=\"property\">from_who</span> != <span class=\"literal\">null</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    options.<span class=\"property\">strings</span>.<span class=\"title function_\">push</span>(<span class=\"string\">&#x27;\\“&#x27;</span> + obj.<span class=\"property\">hitokoto</span>  + <span class=\"string\">&quot;\\”^2000—— &quot;</span> + obj.<span class=\"property\">from_who</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125; <span class=\"keyword\">else</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    options.<span class=\"property\">strings</span>.<span class=\"title function_\">push</span>(<span class=\"string\">&#x27;\\“&#x27;</span> + obj.<span class=\"property\">hitokoto</span>  + <span class=\"string\">&quot;\\”^2000—— &quot;</span> + obj.<span class=\"property\">from</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">var</span> typed = <span class=\"keyword\">new</span> <span class=\"title class_\">Typed</span>(<span class=\"string\">&#x27;#typed&#x27;</span>, options);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n"}],"Post":[{"title":"Github基本使用","date":"2022-01-10T15:24:40.000Z","_content":"\n\n##  一、与GitHub建立连接\n\n- 配置Git\n\n  首先在本地创建`ssh key；`\n\n  ```sh\n  $ ssh-keygen -t rsa -C \"your_email@youremail.com\"\n  ```\n\n  后面的`your_email@youremail.com`改为你在github上注册的邮箱，之后会要求确认路径和输入密码，我们这使用默认的一路回车就行。成功的话会在`~/`下生成`.ssh`文件夹，进去，打开`id_rsa.pub`，复制里面的`key`。\n\n  回到github上，进入 Account Settings（账户配置），左边选择SSH Keys，Add SSH Key,title随便填，粘贴在你电脑上生成的key。\n\n  <!-- more -->\n\n  为了验证是否成功，在git bash下输入：\n\n  ```sh\n  $ ssh -T git@github.com\n  ```\n\n  如果是第一次的会提示是否continue，输入yes就会看到：You've successfully authenticated, but GitHub does not provide shell access 。这就表示已成功连上github。\n\n  接下来我们要做的就是把本地仓库传到github上去，在此之前还需要设置username和email，因为github每次commit都会记录他们。\n\n  ```sh\n  $ git config --global user.name \"your name\"\n  $ git config --global user.email \"your_email@youremail.com\"\n  ```\n\n\n\n## 二、上传代码到仓库\n\n\n\n- …or create a new repository on the command line\n  `git init`\n  `git add README.md`\n  `git commit -m \"first commit\"`\n  `git branch -M main`\n  `git remote add origin 仓库链接地址`\n  `git push -u origin main`\n  \n- …or push an existing repository from the command line\n  `git remote add origin 仓库链接地址`\n  `git branch -M main`\n  `git push -u origin main`\n\n1. `git init` 初始化本地仓库\n2. `git add . or git add *` 添加要上传的文件\n3. `git commit -m \"first commit\"` 添加更新说明\n4. `git remote add origin 仓库链接地址` 把文件放到暂存区\n5. `git branch -M main` 更改分支\n6. `git push -u origin main` 上传、\n7. 二次上传需要执行 `git add .` and `git commit -m \"first commit\"` 然后 `git push -u origin main`\n7. 如果仓库已有代码发生改变，需要先`git pull` 拉取更新，更新本地文件与仓库一直，再执行7.步骤\n","source":"_posts/Github基本使用.md","raw":"---\ntitle: Github基本使用\ndate: 2022-01-10 23:24:40\ntags: [\"学习\", \"GitHub\"]\ncategories: \"GitHub\"\n---\n\n\n##  一、与GitHub建立连接\n\n- 配置Git\n\n  首先在本地创建`ssh key；`\n\n  ```sh\n  $ ssh-keygen -t rsa -C \"your_email@youremail.com\"\n  ```\n\n  后面的`your_email@youremail.com`改为你在github上注册的邮箱，之后会要求确认路径和输入密码，我们这使用默认的一路回车就行。成功的话会在`~/`下生成`.ssh`文件夹，进去，打开`id_rsa.pub`，复制里面的`key`。\n\n  回到github上，进入 Account Settings（账户配置），左边选择SSH Keys，Add SSH Key,title随便填，粘贴在你电脑上生成的key。\n\n  <!-- more -->\n\n  为了验证是否成功，在git bash下输入：\n\n  ```sh\n  $ ssh -T git@github.com\n  ```\n\n  如果是第一次的会提示是否continue，输入yes就会看到：You've successfully authenticated, but GitHub does not provide shell access 。这就表示已成功连上github。\n\n  接下来我们要做的就是把本地仓库传到github上去，在此之前还需要设置username和email，因为github每次commit都会记录他们。\n\n  ```sh\n  $ git config --global user.name \"your name\"\n  $ git config --global user.email \"your_email@youremail.com\"\n  ```\n\n\n\n## 二、上传代码到仓库\n\n\n\n- …or create a new repository on the command line\n  `git init`\n  `git add README.md`\n  `git commit -m \"first commit\"`\n  `git branch -M main`\n  `git remote add origin 仓库链接地址`\n  `git push -u origin main`\n  \n- …or push an existing repository from the command line\n  `git remote add origin 仓库链接地址`\n  `git branch -M main`\n  `git push -u origin main`\n\n1. `git init` 初始化本地仓库\n2. `git add . or git add *` 添加要上传的文件\n3. `git commit -m \"first commit\"` 添加更新说明\n4. `git remote add origin 仓库链接地址` 把文件放到暂存区\n5. `git branch -M main` 更改分支\n6. `git push -u origin main` 上传、\n7. 二次上传需要执行 `git add .` and `git commit -m \"first commit\"` 然后 `git push -u origin main`\n7. 如果仓库已有代码发生改变，需要先`git pull` 拉取更新，更新本地文件与仓库一直，再执行7.步骤\n","slug":"Github基本使用","published":1,"updated":"2022-01-10T15:50:17.275Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7rscd1t0001bwuzh7rvhw6b","content":"<h2 id=\"一、与GitHub建立连接\"><a href=\"#一、与GitHub建立连接\" class=\"headerlink\" title=\"一、与GitHub建立连接\"></a>一、与GitHub建立连接</h2><ul>\n<li><p>配置Git</p>\n<p>首先在本地创建<code>ssh key；</code></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh-keygen -t rsa -C <span class=\"string\">&quot;your_email@youremail.com&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>后面的<code>your_email@youremail.com</code>改为你在github上注册的邮箱，之后会要求确认路径和输入密码，我们这使用默认的一路回车就行。成功的话会在<code>~/</code>下生成<code>.ssh</code>文件夹，进去，打开<code>id_rsa.pub</code>，复制里面的<code>key</code>。</p>\n<p>回到github上，进入 Account Settings（账户配置），左边选择SSH Keys，Add SSH Key,title随便填，粘贴在你电脑上生成的key。</p>\n<span id=\"more\"></span>\n\n<p>为了验证是否成功，在git bash下输入：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure>\n\n<p>如果是第一次的会提示是否continue，输入yes就会看到：You’ve successfully authenticated, but GitHub does not provide shell access 。这就表示已成功连上github。</p>\n<p>接下来我们要做的就是把本地仓库传到github上去，在此之前还需要设置username和email，因为github每次commit都会记录他们。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git config --global user.name <span class=\"string\">&quot;your name&quot;</span></span><br><span class=\"line\">$ git config --global user.email <span class=\"string\">&quot;your_email@youremail.com&quot;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"二、上传代码到仓库\"><a href=\"#二、上传代码到仓库\" class=\"headerlink\" title=\"二、上传代码到仓库\"></a>二、上传代码到仓库</h2><ul>\n<li>…or create a new repository on the command line<br><code>git init</code><br><code>git add README.md</code><br><code>git commit -m &quot;first commit&quot;</code><br><code>git branch -M main</code><br><code>git remote add origin 仓库链接地址</code><br><code>git push -u origin main</code></li>\n<li>…or push an existing repository from the command line<br><code>git remote add origin 仓库链接地址</code><br><code>git branch -M main</code><br><code>git push -u origin main</code></li>\n</ul>\n<ol>\n<li><code>git init</code> 初始化本地仓库</li>\n<li><code>git add . or git add *</code> 添加要上传的文件</li>\n<li><code>git commit -m &quot;first commit&quot;</code> 添加更新说明</li>\n<li><code>git remote add origin 仓库链接地址</code> 把文件放到暂存区</li>\n<li><code>git branch -M main</code> 更改分支</li>\n<li><code>git push -u origin main</code> 上传、</li>\n<li>二次上传需要执行 <code>git add .</code> and <code>git commit -m &quot;first commit&quot;</code> 然后 <code>git push -u origin main</code></li>\n<li>如果仓库已有代码发生改变，需要先<code>git pull</code> 拉取更新，更新本地文件与仓库一直，再执行7.步骤</li>\n</ol>\n","site":{"data":{}},"abbrlink":2,"excerpt":"<h2 id=\"一、与GitHub建立连接\"><a href=\"#一、与GitHub建立连接\" class=\"headerlink\" title=\"一、与GitHub建立连接\"></a>一、与GitHub建立连接</h2><ul>\n<li><p>配置Git</p>\n<p>首先在本地创建<code>ssh key；</code></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh-keygen -t rsa -C <span class=\"string\">&quot;your_email@youremail.com&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>后面的<code>your_email@youremail.com</code>改为你在github上注册的邮箱，之后会要求确认路径和输入密码，我们这使用默认的一路回车就行。成功的话会在<code>~/</code>下生成<code>.ssh</code>文件夹，进去，打开<code>id_rsa.pub</code>，复制里面的<code>key</code>。</p>\n<p>回到github上，进入 Account Settings（账户配置），左边选择SSH Keys，Add SSH Key,title随便填，粘贴在你电脑上生成的key。</p>","more":"<p>为了验证是否成功，在git bash下输入：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure>\n\n<p>如果是第一次的会提示是否continue，输入yes就会看到：You’ve successfully authenticated, but GitHub does not provide shell access 。这就表示已成功连上github。</p>\n<p>接下来我们要做的就是把本地仓库传到github上去，在此之前还需要设置username和email，因为github每次commit都会记录他们。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git config --global user.name <span class=\"string\">&quot;your name&quot;</span></span><br><span class=\"line\">$ git config --global user.email <span class=\"string\">&quot;your_email@youremail.com&quot;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"二、上传代码到仓库\"><a href=\"#二、上传代码到仓库\" class=\"headerlink\" title=\"二、上传代码到仓库\"></a>二、上传代码到仓库</h2><ul>\n<li>…or create a new repository on the command line<br><code>git init</code><br><code>git add README.md</code><br><code>git commit -m &quot;first commit&quot;</code><br><code>git branch -M main</code><br><code>git remote add origin 仓库链接地址</code><br><code>git push -u origin main</code></li>\n<li>…or push an existing repository from the command line<br><code>git remote add origin 仓库链接地址</code><br><code>git branch -M main</code><br><code>git push -u origin main</code></li>\n</ul>\n<ol>\n<li><code>git init</code> 初始化本地仓库</li>\n<li><code>git add . or git add *</code> 添加要上传的文件</li>\n<li><code>git commit -m &quot;first commit&quot;</code> 添加更新说明</li>\n<li><code>git remote add origin 仓库链接地址</code> 把文件放到暂存区</li>\n<li><code>git branch -M main</code> 更改分支</li>\n<li><code>git push -u origin main</code> 上传、</li>\n<li>二次上传需要执行 <code>git add .</code> and <code>git commit -m &quot;first commit&quot;</code> 然后 <code>git push -u origin main</code></li>\n<li>如果仓库已有代码发生改变，需要先<code>git pull</code> 拉取更新，更新本地文件与仓库一直，再执行7.步骤</li>\n</ol>"},{"title":"Eruda 手机网页前端调试面板","date":"2022-01-10T18:25:08.000Z","_content":"\n\n\n# [**Eruda** 手机网页前端调试面板](https://github.com/liriliri/eruda)\n\n{% asset_img screenshot.jpg %}\n\n <!-- more -->\n\n## 快速上手\n\n通过CDN使用：\n\n```javascript\n<script src=\"//cdn.bootcdn.net/ajax/libs/eruda/2.3.3/eruda.js\"></script>\n<script>eruda.init();</script>\n```\n\n通过 npm 安装：\n\n```shell\nnpm install eruda --save\n```\n\n在页面中加载脚本：\n\n```javascript\n<script src=\"node_modules/eruda/eruda.js\"></script>\n<script>eruda.init();</script>\n```\n\nJS 文件对于移动端来说略重（gzip 后大概 100kb）。建议通过 url 参数来控制是否加载调试器，比如：\n\n```javascript\n;(function () {\n    var src = '//cdn.jsdelivr.net/npm/eruda';\n    if (!/eruda=true/.test(window.location) && localStorage.getItem('active-eruda') != 'true') return;\n    document.write('<scr' + 'ipt src=\"' + src + '\"></scr' + 'ipt>');\n    document.write('<scr' + 'ipt>eruda.init();</scr' + 'ipt>');\n})();\n```\n\n初始化时可以传入配置：\n\n- container: 用于插件初始化的 Dom 元素，如果不设置，默认创建 div 作为容器直接置于 html 根结点下面。\n- tool：指定要初始化哪些面板，默认加载所有。\n\n```javascript\nlet el = document.createElement('div');\ndocument.body.appendChild(el);\n\neruda.init({\n    container: el,\n    tool: ['console', 'elements'],\n    useShadowDom: true\n});\n```\n","source":"_posts/Eruda-手机网页前端调试面板.md","raw":"---\ntitle: Eruda 手机网页前端调试面板\ndate: 2022-01-11 02:25:08\ntags: \"学习\"\ncategories: \"学习\"\n---\n\n\n\n# [**Eruda** 手机网页前端调试面板](https://github.com/liriliri/eruda)\n\n{% asset_img screenshot.jpg %}\n\n <!-- more -->\n\n## 快速上手\n\n通过CDN使用：\n\n```javascript\n<script src=\"//cdn.bootcdn.net/ajax/libs/eruda/2.3.3/eruda.js\"></script>\n<script>eruda.init();</script>\n```\n\n通过 npm 安装：\n\n```shell\nnpm install eruda --save\n```\n\n在页面中加载脚本：\n\n```javascript\n<script src=\"node_modules/eruda/eruda.js\"></script>\n<script>eruda.init();</script>\n```\n\nJS 文件对于移动端来说略重（gzip 后大概 100kb）。建议通过 url 参数来控制是否加载调试器，比如：\n\n```javascript\n;(function () {\n    var src = '//cdn.jsdelivr.net/npm/eruda';\n    if (!/eruda=true/.test(window.location) && localStorage.getItem('active-eruda') != 'true') return;\n    document.write('<scr' + 'ipt src=\"' + src + '\"></scr' + 'ipt>');\n    document.write('<scr' + 'ipt>eruda.init();</scr' + 'ipt>');\n})();\n```\n\n初始化时可以传入配置：\n\n- container: 用于插件初始化的 Dom 元素，如果不设置，默认创建 div 作为容器直接置于 html 根结点下面。\n- tool：指定要初始化哪些面板，默认加载所有。\n\n```javascript\nlet el = document.createElement('div');\ndocument.body.appendChild(el);\n\neruda.init({\n    container: el,\n    tool: ['console', 'elements'],\n    useShadowDom: true\n});\n```\n","slug":"Eruda-手机网页前端调试面板","published":1,"updated":"2022-01-10T18:46:04.333Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7rscd1x0003bwuz56vp3t48","content":"<h1 id=\"Eruda-手机网页前端调试面板\"><a href=\"#Eruda-手机网页前端调试面板\" class=\"headerlink\" title=\"Eruda 手机网页前端调试面板\"></a><a href=\"https://github.com/liriliri/eruda\"><strong>Eruda</strong> 手机网页前端调试面板</a></h1><img data-src=\"/posts/3/Eruda-%E6%89%8B%E6%9C%BA%E7%BD%91%E9%A1%B5%E5%89%8D%E7%AB%AF%E8%B0%83%E8%AF%95%E9%9D%A2%E6%9D%BF/screenshot.jpg\" class=\"\">\n\n <span id=\"more\"></span>\n\n<h2 id=\"快速上手\"><a href=\"#快速上手\" class=\"headerlink\" title=\"快速上手\"></a>快速上手</h2><p>通过CDN使用：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src=<span class=\"string\">&quot;//cdn.bootcdn.net/ajax/libs/eruda/2.3.3/eruda.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span>eruda.init();<span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<p>通过 npm 安装：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install eruda --save</span><br></pre></td></tr></table></figure>\n\n<p>在页面中加载脚本：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src=<span class=\"string\">&quot;node_modules/eruda/eruda.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span>eruda.init();<span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<p>JS 文件对于移动端来说略重（gzip 后大概 100kb）。建议通过 url 参数来控制是否加载调试器，比如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">;(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> src = <span class=\"string\">&#x27;//cdn.jsdelivr.net/npm/eruda&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"regexp\">/eruda=true/</span>.<span class=\"title function_\">test</span>(<span class=\"variable language_\">window</span>.<span class=\"property\">location</span>) &amp;&amp; <span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">getItem</span>(<span class=\"string\">&#x27;active-eruda&#x27;</span>) != <span class=\"string\">&#x27;true&#x27;</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(<span class=\"string\">&#x27;&lt;scr&#x27;</span> + <span class=\"string\">&#x27;ipt src=&quot;&#x27;</span> + src + <span class=\"string\">&#x27;&quot;&gt;&lt;/scr&#x27;</span> + <span class=\"string\">&#x27;ipt&gt;&#x27;</span>);</span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(<span class=\"string\">&#x27;&lt;scr&#x27;</span> + <span class=\"string\">&#x27;ipt&gt;eruda.init();&lt;/scr&#x27;</span> + <span class=\"string\">&#x27;ipt&gt;&#x27;</span>);</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n\n<p>初始化时可以传入配置：</p>\n<ul>\n<li>container: 用于插件初始化的 Dom 元素，如果不设置，默认创建 div 作为容器直接置于 html 根结点下面。</li>\n<li>tool：指定要初始化哪些面板，默认加载所有。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> el = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&#x27;div&#x27;</span>);</span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"title function_\">appendChild</span>(el);</span><br><span class=\"line\"></span><br><span class=\"line\">eruda.<span class=\"title function_\">init</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">container</span>: el,</span><br><span class=\"line\">    <span class=\"attr\">tool</span>: [<span class=\"string\">&#x27;console&#x27;</span>, <span class=\"string\">&#x27;elements&#x27;</span>],</span><br><span class=\"line\">    <span class=\"attr\">useShadowDom</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"abbrlink":3,"excerpt":"<h1 id=\"Eruda-手机网页前端调试面板\"><a href=\"#Eruda-手机网页前端调试面板\" class=\"headerlink\" title=\"Eruda 手机网页前端调试面板\"></a><a href=\"https://github.com/liriliri/eruda\"><strong>Eruda</strong> 手机网页前端调试面板</a></h1><img data-src=\"/posts/3/Eruda-%E6%89%8B%E6%9C%BA%E7%BD%91%E9%A1%B5%E5%89%8D%E7%AB%AF%E8%B0%83%E8%AF%95%E9%9D%A2%E6%9D%BF/screenshot.jpg\" class=\"\">","more":"<h2 id=\"快速上手\"><a href=\"#快速上手\" class=\"headerlink\" title=\"快速上手\"></a>快速上手</h2><p>通过CDN使用：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src=<span class=\"string\">&quot;//cdn.bootcdn.net/ajax/libs/eruda/2.3.3/eruda.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span>eruda.init();<span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<p>通过 npm 安装：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install eruda --save</span><br></pre></td></tr></table></figure>\n\n<p>在页面中加载脚本：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src=<span class=\"string\">&quot;node_modules/eruda/eruda.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span>eruda.init();<span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n<p>JS 文件对于移动端来说略重（gzip 后大概 100kb）。建议通过 url 参数来控制是否加载调试器，比如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">;(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> src = <span class=\"string\">&#x27;//cdn.jsdelivr.net/npm/eruda&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"regexp\">/eruda=true/</span>.<span class=\"title function_\">test</span>(<span class=\"variable language_\">window</span>.<span class=\"property\">location</span>) &amp;&amp; <span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">getItem</span>(<span class=\"string\">&#x27;active-eruda&#x27;</span>) != <span class=\"string\">&#x27;true&#x27;</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(<span class=\"string\">&#x27;&lt;scr&#x27;</span> + <span class=\"string\">&#x27;ipt src=&quot;&#x27;</span> + src + <span class=\"string\">&#x27;&quot;&gt;&lt;/scr&#x27;</span> + <span class=\"string\">&#x27;ipt&gt;&#x27;</span>);</span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(<span class=\"string\">&#x27;&lt;scr&#x27;</span> + <span class=\"string\">&#x27;ipt&gt;eruda.init();&lt;/scr&#x27;</span> + <span class=\"string\">&#x27;ipt&gt;&#x27;</span>);</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n\n<p>初始化时可以传入配置：</p>\n<ul>\n<li>container: 用于插件初始化的 Dom 元素，如果不设置，默认创建 div 作为容器直接置于 html 根结点下面。</li>\n<li>tool：指定要初始化哪些面板，默认加载所有。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> el = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&#x27;div&#x27;</span>);</span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"title function_\">appendChild</span>(el);</span><br><span class=\"line\"></span><br><span class=\"line\">eruda.<span class=\"title function_\">init</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">container</span>: el,</span><br><span class=\"line\">    <span class=\"attr\">tool</span>: [<span class=\"string\">&#x27;console&#x27;</span>, <span class=\"string\">&#x27;elements&#x27;</span>],</span><br><span class=\"line\">    <span class=\"attr\">useShadowDom</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>"},{"title":"NodeServer笔记","date":"2022-09-07T03:35:05.000Z","_content":"\n## 开发依赖库\n\n> Express\t开发框架\n>\n> Body-Parser\t解析post请求\n>\n> Nodemon\t自动更新包\n>\n> Sequelize\t连接数据库\n>\n> Nodemailer\t发送邮件\n>\n> Express-session\t创建session\n>\n> Json Web Token 生成Token\n\n <!-- more -->\n\n## 登录验证\n\n> token，session\n>\n> token，session在后端生成\n>\n> cookie、sessionsStorage、localStorage保存在浏览器\n>\n> #### token: 令牌，一个加密的字符串，一般身份验证，前后混合开发可使用session进行身份验证，session需要配合cookie\n\n## Express\n\n> ```javascript\n> // 引入包\n> const express = require('express')\n> // 挂在实例\n> const app = express()\n> //路由\n> app.get('/', function (req, res) {\n> res.send('Hello World')\n> })\n> // 端口\n> app.listen(3000)\n> ```\n\n\n\n## Body-Parser\t解析post请求\n\n>```javascript\n>var express = require('express')\n>var bodyParser = require('body-parser')\n>\n>var app = express()\n>\n>//一般只需要下面两个\n>\n>// parse application/x-www-form-urlencoded\n>app.use(bodyParser.urlencoded({ extended: false }))\n>\n>// parse application/json\n>app.use(bodyParser.json())\n>\n>app.use(function (req, res) {\n>res.setHeader('Content-Type', 'text/plain')\n>res.write('you posted:\\n')\n>res.end(JSON.stringify(req.body, null, 2))\n>})\n>```\n>\n\n\n\n## Sequelize连接数据库 [中文文档](https://www.sequelize.cn/)\n\n> ``` sh\n> # 使用npm\n> $ npm i sequelize\n> # 驱动包\n> $ npm install --save pg pg-hstore # Postgres\n> $ npm install --save mysql2\n> $ npm install --save mariadb\n> $ npm install --save sqlite3\n> $ npm install --save tedious # Microsoft SQL Server```\n> $ npm install --save sequelize\n> ```\n>\n#### 连接到数据库\n>\n>``` javascript\n>const { Sequelize } = require('sequelize');\n>// 方法 3: 分别传递参数 (其它数据库)\n>const sequelize = new Sequelize('database', 'username', 'password', {\n>host: 'localhost',\n>dialect: /* 选择 'mysql' | 'mariadb' | 'postgres' | 'mssql' 其一 */\n>});\n>\n>```\n>\n#### 测试连接\n>```javascript\n>try {\n>await sequelize.authenticate();\n>console.log('Connection has been established successfully.');\n>} catch (error) {\n>console.error('Unable to connect to the database:', error);\n>}\n>```\n\n#### 关闭连接\n\n> 默认情况下,Sequelize 将保持连接打开状态,并对所有查询使用相同的连接. 如果你需要关闭连接,请调用 sequelize.close()(这是异步的并返回一个 Promise).\n>\n> \n\n#### 模型基础\n\n##### 使用 sequelize.define\n\n> ```javascript\n> const { Sequelize, DataTypes } = require('sequelize');\n> const sequelize = new Sequelize('sqlite::memory:');\n> \n> const User = sequelize.define('User', {\n> // 在这里定义模型属性\n> firstName: {\n>  type: DataTypes.STRING,\n>  allowNull: false\n> },\n> lastName: {\n>  type: DataTypes.STRING\n>  // allowNull 默认为 true\n> }\n> }, {\n> // 这是其他模型参数\n> });\n> \n> // `sequelize.define` 会返回模型\n> console.log(User === sequelize.models.User); // true\n> ```\n\n##### 扩展 Model\n\n> ```javascript\n> const { Sequelize, DataTypes, Model } = require('sequelize');\n> const sequelize = new Sequelize('sqlite::memory:');\n> \n> class User extends Model {}\n> \n> User.init({\n> // 在这里定义模型属性\n> firstName: {\n>  type: DataTypes.STRING,\n>  allowNull: false\n> },\n> lastName: {\n>  type: DataTypes.STRING\n>  // allowNull 默认为 true\n> }\n> }, {\n> // 这是其他模型参数\n> sequelize, // 我们需要传递连接实例\n> modelName: 'User' // 我们需要选择模型名称\n> });\n> \n> // 定义的模型是类本身\n> console.log(User === sequelize.models.User); // true\n> ```\n\n## Nodemailer\t发送邮件\n\n> ```javascript\n> \"use strict\";\n> const nodemailer = require(\"nodemailer\");\n> \n> // async..await is not allowed in global scope, must use a wrapper\n> async function main() {\n> // Generate test SMTP service account from ethereal.email\n> // Only needed if you don't have a real mail account for testing\n> let testAccount = await nodemailer.createTestAccount();\n> \n> // create reusable transporter object using the default SMTP transport\n> let transporter = nodemailer.createTransport({\n>  host: \"smtp.ethereal.email\",\n>  port: 587,\n>  secure: false, // true for 465, false for other ports\n>  auth: {\n>    user: testAccount.user, // generated ethereal user\n>    pass: testAccount.pass, // generated ethereal password\n>  },\n> });\n> \n> // send mail with defined transport object\n> let info = await transporter.sendMail({\n>  from: '\"Fred Foo 👻\" <foo@example.com>', // sender address\n>  to: \"bar@example.com, baz@example.com\", // list of receivers\n>  subject: \"Hello ✔\", // Subject line\n>  text: \"Hello world?\", // plain text body\n>  html: \"<b>Hello world?</b>\", // html body\n> });\n> \n> console.log(\"Message sent: %s\", info.messageId);\n> // Message sent: <b658f8ca-6296-ccf4-8306-87d57a0b4321@example.com>\n> \n> // Preview only available when sending through an Ethereal account\n> console.log(\"Preview URL: %s\", nodemailer.getTestMessageUrl(info));\n> // Preview URL: https://ethereal.email/message/WaQKMgKddxQDoou...\n> }\n> \n> main().catch(console.error);\n> ```\n\n","source":"_posts/NodeServer笔记.md","raw":"---\ntitle: NodeServer笔记\ndate: 2022-09-07 11:35:05\ntags: [\"学习\",\"node\"]\ncategories: [\"node\"]\n---\n\n## 开发依赖库\n\n> Express\t开发框架\n>\n> Body-Parser\t解析post请求\n>\n> Nodemon\t自动更新包\n>\n> Sequelize\t连接数据库\n>\n> Nodemailer\t发送邮件\n>\n> Express-session\t创建session\n>\n> Json Web Token 生成Token\n\n <!-- more -->\n\n## 登录验证\n\n> token，session\n>\n> token，session在后端生成\n>\n> cookie、sessionsStorage、localStorage保存在浏览器\n>\n> #### token: 令牌，一个加密的字符串，一般身份验证，前后混合开发可使用session进行身份验证，session需要配合cookie\n\n## Express\n\n> ```javascript\n> // 引入包\n> const express = require('express')\n> // 挂在实例\n> const app = express()\n> //路由\n> app.get('/', function (req, res) {\n> res.send('Hello World')\n> })\n> // 端口\n> app.listen(3000)\n> ```\n\n\n\n## Body-Parser\t解析post请求\n\n>```javascript\n>var express = require('express')\n>var bodyParser = require('body-parser')\n>\n>var app = express()\n>\n>//一般只需要下面两个\n>\n>// parse application/x-www-form-urlencoded\n>app.use(bodyParser.urlencoded({ extended: false }))\n>\n>// parse application/json\n>app.use(bodyParser.json())\n>\n>app.use(function (req, res) {\n>res.setHeader('Content-Type', 'text/plain')\n>res.write('you posted:\\n')\n>res.end(JSON.stringify(req.body, null, 2))\n>})\n>```\n>\n\n\n\n## Sequelize连接数据库 [中文文档](https://www.sequelize.cn/)\n\n> ``` sh\n> # 使用npm\n> $ npm i sequelize\n> # 驱动包\n> $ npm install --save pg pg-hstore # Postgres\n> $ npm install --save mysql2\n> $ npm install --save mariadb\n> $ npm install --save sqlite3\n> $ npm install --save tedious # Microsoft SQL Server```\n> $ npm install --save sequelize\n> ```\n>\n#### 连接到数据库\n>\n>``` javascript\n>const { Sequelize } = require('sequelize');\n>// 方法 3: 分别传递参数 (其它数据库)\n>const sequelize = new Sequelize('database', 'username', 'password', {\n>host: 'localhost',\n>dialect: /* 选择 'mysql' | 'mariadb' | 'postgres' | 'mssql' 其一 */\n>});\n>\n>```\n>\n#### 测试连接\n>```javascript\n>try {\n>await sequelize.authenticate();\n>console.log('Connection has been established successfully.');\n>} catch (error) {\n>console.error('Unable to connect to the database:', error);\n>}\n>```\n\n#### 关闭连接\n\n> 默认情况下,Sequelize 将保持连接打开状态,并对所有查询使用相同的连接. 如果你需要关闭连接,请调用 sequelize.close()(这是异步的并返回一个 Promise).\n>\n> \n\n#### 模型基础\n\n##### 使用 sequelize.define\n\n> ```javascript\n> const { Sequelize, DataTypes } = require('sequelize');\n> const sequelize = new Sequelize('sqlite::memory:');\n> \n> const User = sequelize.define('User', {\n> // 在这里定义模型属性\n> firstName: {\n>  type: DataTypes.STRING,\n>  allowNull: false\n> },\n> lastName: {\n>  type: DataTypes.STRING\n>  // allowNull 默认为 true\n> }\n> }, {\n> // 这是其他模型参数\n> });\n> \n> // `sequelize.define` 会返回模型\n> console.log(User === sequelize.models.User); // true\n> ```\n\n##### 扩展 Model\n\n> ```javascript\n> const { Sequelize, DataTypes, Model } = require('sequelize');\n> const sequelize = new Sequelize('sqlite::memory:');\n> \n> class User extends Model {}\n> \n> User.init({\n> // 在这里定义模型属性\n> firstName: {\n>  type: DataTypes.STRING,\n>  allowNull: false\n> },\n> lastName: {\n>  type: DataTypes.STRING\n>  // allowNull 默认为 true\n> }\n> }, {\n> // 这是其他模型参数\n> sequelize, // 我们需要传递连接实例\n> modelName: 'User' // 我们需要选择模型名称\n> });\n> \n> // 定义的模型是类本身\n> console.log(User === sequelize.models.User); // true\n> ```\n\n## Nodemailer\t发送邮件\n\n> ```javascript\n> \"use strict\";\n> const nodemailer = require(\"nodemailer\");\n> \n> // async..await is not allowed in global scope, must use a wrapper\n> async function main() {\n> // Generate test SMTP service account from ethereal.email\n> // Only needed if you don't have a real mail account for testing\n> let testAccount = await nodemailer.createTestAccount();\n> \n> // create reusable transporter object using the default SMTP transport\n> let transporter = nodemailer.createTransport({\n>  host: \"smtp.ethereal.email\",\n>  port: 587,\n>  secure: false, // true for 465, false for other ports\n>  auth: {\n>    user: testAccount.user, // generated ethereal user\n>    pass: testAccount.pass, // generated ethereal password\n>  },\n> });\n> \n> // send mail with defined transport object\n> let info = await transporter.sendMail({\n>  from: '\"Fred Foo 👻\" <foo@example.com>', // sender address\n>  to: \"bar@example.com, baz@example.com\", // list of receivers\n>  subject: \"Hello ✔\", // Subject line\n>  text: \"Hello world?\", // plain text body\n>  html: \"<b>Hello world?</b>\", // html body\n> });\n> \n> console.log(\"Message sent: %s\", info.messageId);\n> // Message sent: <b658f8ca-6296-ccf4-8306-87d57a0b4321@example.com>\n> \n> // Preview only available when sending through an Ethereal account\n> console.log(\"Preview URL: %s\", nodemailer.getTestMessageUrl(info));\n> // Preview URL: https://ethereal.email/message/WaQKMgKddxQDoou...\n> }\n> \n> main().catch(console.error);\n> ```\n\n","slug":"NodeServer笔记","published":1,"updated":"2022-09-07T15:37:39.442Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7rscd220007bwuz682m2nzb","content":"<h2 id=\"开发依赖库\"><a href=\"#开发依赖库\" class=\"headerlink\" title=\"开发依赖库\"></a>开发依赖库</h2><blockquote>\n<p>Express    开发框架</p>\n<p>Body-Parser    解析post请求</p>\n<p>Nodemon    自动更新包</p>\n<p>Sequelize    连接数据库</p>\n<p>Nodemailer    发送邮件</p>\n<p>Express-session    创建session</p>\n<p>Json Web Token 生成Token</p>\n</blockquote>\n <span id=\"more\"></span>\n\n<h2 id=\"登录验证\"><a href=\"#登录验证\" class=\"headerlink\" title=\"登录验证\"></a>登录验证</h2><blockquote>\n<p>token，session</p>\n<p>token，session在后端生成</p>\n<p>cookie、sessionsStorage、localStorage保存在浏览器</p>\n<h4 id=\"token-令牌，一个加密的字符串，一般身份验证，前后混合开发可使用session进行身份验证，session需要配合cookie\"><a href=\"#token-令牌，一个加密的字符串，一般身份验证，前后混合开发可使用session进行身份验证，session需要配合cookie\" class=\"headerlink\" title=\"token: 令牌，一个加密的字符串，一般身份验证，前后混合开发可使用session进行身份验证，session需要配合cookie\"></a>token: 令牌，一个加密的字符串，一般身份验证，前后混合开发可使用session进行身份验证，session需要配合cookie</h4></blockquote>\n<h2 id=\"Express\"><a href=\"#Express\" class=\"headerlink\" title=\"Express\"></a>Express</h2><blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 引入包</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;express&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">// 挂在实例</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> app = <span class=\"title function_\">express</span>()</span><br><span class=\"line\"><span class=\"comment\">//路由</span></span><br><span class=\"line\">app.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\">req, res</span>) &#123;</span><br><span class=\"line\">res.<span class=\"title function_\">send</span>(<span class=\"string\">&#x27;Hello World&#x27;</span>)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// 端口</span></span><br><span class=\"line\">app.<span class=\"title function_\">listen</span>(<span class=\"number\">3000</span>)</span><br></pre></td></tr></table></figure>\n</blockquote>\n<h2 id=\"Body-Parser-解析post请求\"><a href=\"#Body-Parser-解析post请求\" class=\"headerlink\" title=\"Body-Parser    解析post请求\"></a>Body-Parser    解析post请求</h2><blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;<span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;express&#x27;</span>)</span><br><span class=\"line\">&gt;<span class=\"keyword\">var</span> bodyParser = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;body-parser&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;<span class=\"keyword\">var</span> app = <span class=\"title function_\">express</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;<span class=\"comment\">//一般只需要下面两个</span></span><br><span class=\"line\"></span><br><span class=\"line\">&gt;<span class=\"comment\">// parse application/x-www-form-urlencoded</span></span><br><span class=\"line\">&gt;app.<span class=\"title function_\">use</span>(bodyParser.<span class=\"title function_\">urlencoded</span>(&#123; <span class=\"attr\">extended</span>: <span class=\"literal\">false</span> &#125;))</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;<span class=\"comment\">// parse application/json</span></span><br><span class=\"line\">&gt;app.<span class=\"title function_\">use</span>(bodyParser.<span class=\"title function_\">json</span>())</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;app.<span class=\"title function_\">use</span>(<span class=\"keyword\">function</span> (<span class=\"params\">req, res</span>) &#123;</span><br><span class=\"line\">&gt;res.<span class=\"title function_\">setHeader</span>(<span class=\"string\">&#x27;Content-Type&#x27;</span>, <span class=\"string\">&#x27;text/plain&#x27;</span>)</span><br><span class=\"line\">&gt;res.<span class=\"title function_\">write</span>(<span class=\"string\">&#x27;you posted:\\n&#x27;</span>)</span><br><span class=\"line\">&gt;res.<span class=\"title function_\">end</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(req.<span class=\"property\">body</span>, <span class=\"literal\">null</span>, <span class=\"number\">2</span>))</span><br><span class=\"line\">&gt;&#125;)</span><br></pre></td></tr></table></figure>\n\n</blockquote>\n<h2 id=\"Sequelize连接数据库-中文文档\"><a href=\"#Sequelize连接数据库-中文文档\" class=\"headerlink\" title=\"Sequelize连接数据库 中文文档\"></a>Sequelize连接数据库 <a href=\"https://www.sequelize.cn/\">中文文档</a></h2><blockquote>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 使用npm</span></span><br><span class=\"line\">$ npm i sequelize</span><br><span class=\"line\"><span class=\"comment\"># 驱动包</span></span><br><span class=\"line\">$ npm install --save pg pg-hstore <span class=\"comment\"># Postgres</span></span><br><span class=\"line\">$ npm install --save mysql2</span><br><span class=\"line\">$ npm install --save mariadb</span><br><span class=\"line\">$ npm install --save sqlite3</span><br><span class=\"line\">$ npm install --save tedious <span class=\"comment\"># Microsoft SQL Server```</span></span><br><span class=\"line\">$ npm install --save sequelize</span><br></pre></td></tr></table></figure>\n\n</blockquote>\n<h4 id=\"连接到数据库\"><a href=\"#连接到数据库\" class=\"headerlink\" title=\"连接到数据库\"></a>连接到数据库</h4><blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;<span class=\"keyword\">const</span> &#123; <span class=\"title class_\">Sequelize</span> &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;sequelize&#x27;</span>);</span><br><span class=\"line\">&gt;<span class=\"comment\">// 方法 3: 分别传递参数 (其它数据库)</span></span><br><span class=\"line\">&gt;<span class=\"keyword\">const</span> sequelize = <span class=\"keyword\">new</span> <span class=\"title class_\">Sequelize</span>(<span class=\"string\">&#x27;database&#x27;</span>, <span class=\"string\">&#x27;username&#x27;</span>, <span class=\"string\">&#x27;password&#x27;</span>, &#123;</span><br><span class=\"line\">&gt;<span class=\"attr\">host</span>: <span class=\"string\">&#x27;localhost&#x27;</span>,</span><br><span class=\"line\">&gt;<span class=\"attr\">dialect</span>: <span class=\"comment\">/* 选择 &#x27;mysql&#x27; | &#x27;mariadb&#x27; | &#x27;postgres&#x27; | &#x27;mssql&#x27; 其一 */</span></span><br><span class=\"line\">&gt;&#125;);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n</blockquote>\n<h4 id=\"测试连接\"><a href=\"#测试连接\" class=\"headerlink\" title=\"测试连接\"></a>测试连接</h4><blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">&gt;<span class=\"keyword\">await</span> sequelize.<span class=\"title function_\">authenticate</span>();</span><br><span class=\"line\">&gt;<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Connection has been established successfully.&#x27;</span>);</span><br><span class=\"line\">&gt;&#125; <span class=\"keyword\">catch</span> (error) &#123;</span><br><span class=\"line\">&gt;<span class=\"variable language_\">console</span>.<span class=\"title function_\">error</span>(<span class=\"string\">&#x27;Unable to connect to the database:&#x27;</span>, error);</span><br><span class=\"line\">&gt;&#125;</span><br></pre></td></tr></table></figure>\n</blockquote>\n<h4 id=\"关闭连接\"><a href=\"#关闭连接\" class=\"headerlink\" title=\"关闭连接\"></a>关闭连接</h4><blockquote>\n<p>默认情况下,Sequelize 将保持连接打开状态,并对所有查询使用相同的连接. 如果你需要关闭连接,请调用 sequelize.close()(这是异步的并返回一个 Promise).</p>\n</blockquote>\n<h4 id=\"模型基础\"><a href=\"#模型基础\" class=\"headerlink\" title=\"模型基础\"></a>模型基础</h4><h5 id=\"使用-sequelize-define\"><a href=\"#使用-sequelize-define\" class=\"headerlink\" title=\"使用 sequelize.define\"></a>使用 sequelize.define</h5><blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123; <span class=\"title class_\">Sequelize</span>, <span class=\"title class_\">DataTypes</span> &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;sequelize&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> sequelize = <span class=\"keyword\">new</span> <span class=\"title class_\">Sequelize</span>(<span class=\"string\">&#x27;sqlite::memory:&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">User</span> = sequelize.<span class=\"title function_\">define</span>(<span class=\"string\">&#x27;User&#x27;</span>, &#123;</span><br><span class=\"line\"><span class=\"comment\">// 在这里定义模型属性</span></span><br><span class=\"line\"><span class=\"attr\">firstName</span>: &#123;</span><br><span class=\"line\"> <span class=\"attr\">type</span>: <span class=\"title class_\">DataTypes</span>.<span class=\"property\">STRING</span>,</span><br><span class=\"line\"> <span class=\"attr\">allowNull</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"attr\">lastName</span>: &#123;</span><br><span class=\"line\"> <span class=\"attr\">type</span>: <span class=\"title class_\">DataTypes</span>.<span class=\"property\">STRING</span></span><br><span class=\"line\"> <span class=\"comment\">// allowNull 默认为 true</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;, &#123;</span><br><span class=\"line\"><span class=\"comment\">// 这是其他模型参数</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// `sequelize.define` 会返回模型</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">User</span> === sequelize.<span class=\"property\">models</span>.<span class=\"property\">User</span>); <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n</blockquote>\n<h5 id=\"扩展-Model\"><a href=\"#扩展-Model\" class=\"headerlink\" title=\"扩展 Model\"></a>扩展 Model</h5><blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123; <span class=\"title class_\">Sequelize</span>, <span class=\"title class_\">DataTypes</span>, <span class=\"title class_\">Model</span> &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;sequelize&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> sequelize = <span class=\"keyword\">new</span> <span class=\"title class_\">Sequelize</span>(<span class=\"string\">&#x27;sqlite::memory:&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">User</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">Model</span> &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">User</span>.<span class=\"title function_\">init</span>(&#123;</span><br><span class=\"line\"><span class=\"comment\">// 在这里定义模型属性</span></span><br><span class=\"line\"><span class=\"attr\">firstName</span>: &#123;</span><br><span class=\"line\"> <span class=\"attr\">type</span>: <span class=\"title class_\">DataTypes</span>.<span class=\"property\">STRING</span>,</span><br><span class=\"line\"> <span class=\"attr\">allowNull</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"attr\">lastName</span>: &#123;</span><br><span class=\"line\"> <span class=\"attr\">type</span>: <span class=\"title class_\">DataTypes</span>.<span class=\"property\">STRING</span></span><br><span class=\"line\"> <span class=\"comment\">// allowNull 默认为 true</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;, &#123;</span><br><span class=\"line\"><span class=\"comment\">// 这是其他模型参数</span></span><br><span class=\"line\">sequelize, <span class=\"comment\">// 我们需要传递连接实例</span></span><br><span class=\"line\"><span class=\"attr\">modelName</span>: <span class=\"string\">&#x27;User&#x27;</span> <span class=\"comment\">// 我们需要选择模型名称</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 定义的模型是类本身</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">User</span> === sequelize.<span class=\"property\">models</span>.<span class=\"property\">User</span>); <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n</blockquote>\n<h2 id=\"Nodemailer-发送邮件\"><a href=\"#Nodemailer-发送邮件\" class=\"headerlink\" title=\"Nodemailer    发送邮件\"></a>Nodemailer    发送邮件</h2><blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&quot;use strict&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> nodemailer = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;nodemailer&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// async..await is not allowed in global scope, must use a wrapper</span></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">main</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\"><span class=\"comment\">// Generate test SMTP service account from ethereal.email</span></span><br><span class=\"line\"><span class=\"comment\">// Only needed if you don&#x27;t have a real mail account for testing</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> testAccount = <span class=\"keyword\">await</span> nodemailer.<span class=\"title function_\">createTestAccount</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// create reusable transporter object using the default SMTP transport</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> transporter = nodemailer.<span class=\"title function_\">createTransport</span>(&#123;</span><br><span class=\"line\"> <span class=\"attr\">host</span>: <span class=\"string\">&quot;smtp.ethereal.email&quot;</span>,</span><br><span class=\"line\"> <span class=\"attr\">port</span>: <span class=\"number\">587</span>,</span><br><span class=\"line\"> <span class=\"attr\">secure</span>: <span class=\"literal\">false</span>, <span class=\"comment\">// true for 465, false for other ports</span></span><br><span class=\"line\"> <span class=\"attr\">auth</span>: &#123;</span><br><span class=\"line\">   <span class=\"attr\">user</span>: testAccount.<span class=\"property\">user</span>, <span class=\"comment\">// generated ethereal user</span></span><br><span class=\"line\">   <span class=\"attr\">pass</span>: testAccount.<span class=\"property\">pass</span>, <span class=\"comment\">// generated ethereal password</span></span><br><span class=\"line\"> &#125;,</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// send mail with defined transport object</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> info = <span class=\"keyword\">await</span> transporter.<span class=\"title function_\">sendMail</span>(&#123;</span><br><span class=\"line\"> <span class=\"attr\">from</span>: <span class=\"string\">&#x27;&quot;Fred Foo 👻&quot; &lt;foo@example.com&gt;&#x27;</span>, <span class=\"comment\">// sender address</span></span><br><span class=\"line\"> <span class=\"attr\">to</span>: <span class=\"string\">&quot;bar@example.com, baz@example.com&quot;</span>, <span class=\"comment\">// list of receivers</span></span><br><span class=\"line\"> <span class=\"attr\">subject</span>: <span class=\"string\">&quot;Hello ✔&quot;</span>, <span class=\"comment\">// Subject line</span></span><br><span class=\"line\"> <span class=\"attr\">text</span>: <span class=\"string\">&quot;Hello world?&quot;</span>, <span class=\"comment\">// plain text body</span></span><br><span class=\"line\"> <span class=\"attr\">html</span>: <span class=\"string\">&quot;&lt;b&gt;Hello world?&lt;/b&gt;&quot;</span>, <span class=\"comment\">// html body</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;Message sent: %s&quot;</span>, info.<span class=\"property\">messageId</span>);</span><br><span class=\"line\"><span class=\"comment\">// Message sent: &lt;b658f8ca-6296-ccf4-8306-87d57a0b4321@example.com&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Preview only available when sending through an Ethereal account</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;Preview URL: %s&quot;</span>, nodemailer.<span class=\"title function_\">getTestMessageUrl</span>(info));</span><br><span class=\"line\"><span class=\"comment\">// Preview URL: https://ethereal.email/message/WaQKMgKddxQDoou...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">main</span>().<span class=\"title function_\">catch</span>(<span class=\"variable language_\">console</span>.<span class=\"property\">error</span>);</span><br></pre></td></tr></table></figure>\n</blockquote>\n","site":{"data":{}},"abbrlink":3,"excerpt":"<h2 id=\"开发依赖库\"><a href=\"#开发依赖库\" class=\"headerlink\" title=\"开发依赖库\"></a>开发依赖库</h2><blockquote>\n<p>Express    开发框架</p>\n<p>Body-Parser    解析post请求</p>\n<p>Nodemon    自动更新包</p>\n<p>Sequelize    连接数据库</p>\n<p>Nodemailer    发送邮件</p>\n<p>Express-session    创建session</p>\n<p>Json Web Token 生成Token</p>\n</blockquote>","more":"<h2 id=\"登录验证\"><a href=\"#登录验证\" class=\"headerlink\" title=\"登录验证\"></a>登录验证</h2><blockquote>\n<p>token，session</p>\n<p>token，session在后端生成</p>\n<p>cookie、sessionsStorage、localStorage保存在浏览器</p>\n<h4 id=\"token-令牌，一个加密的字符串，一般身份验证，前后混合开发可使用session进行身份验证，session需要配合cookie\"><a href=\"#token-令牌，一个加密的字符串，一般身份验证，前后混合开发可使用session进行身份验证，session需要配合cookie\" class=\"headerlink\" title=\"token: 令牌，一个加密的字符串，一般身份验证，前后混合开发可使用session进行身份验证，session需要配合cookie\"></a>token: 令牌，一个加密的字符串，一般身份验证，前后混合开发可使用session进行身份验证，session需要配合cookie</h4></blockquote>\n<h2 id=\"Express\"><a href=\"#Express\" class=\"headerlink\" title=\"Express\"></a>Express</h2><blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 引入包</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;express&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">// 挂在实例</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> app = <span class=\"title function_\">express</span>()</span><br><span class=\"line\"><span class=\"comment\">//路由</span></span><br><span class=\"line\">app.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\">req, res</span>) &#123;</span><br><span class=\"line\">res.<span class=\"title function_\">send</span>(<span class=\"string\">&#x27;Hello World&#x27;</span>)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// 端口</span></span><br><span class=\"line\">app.<span class=\"title function_\">listen</span>(<span class=\"number\">3000</span>)</span><br></pre></td></tr></table></figure>\n</blockquote>\n<h2 id=\"Body-Parser-解析post请求\"><a href=\"#Body-Parser-解析post请求\" class=\"headerlink\" title=\"Body-Parser    解析post请求\"></a>Body-Parser    解析post请求</h2><blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;<span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;express&#x27;</span>)</span><br><span class=\"line\">&gt;<span class=\"keyword\">var</span> bodyParser = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;body-parser&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;<span class=\"keyword\">var</span> app = <span class=\"title function_\">express</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;<span class=\"comment\">//一般只需要下面两个</span></span><br><span class=\"line\"></span><br><span class=\"line\">&gt;<span class=\"comment\">// parse application/x-www-form-urlencoded</span></span><br><span class=\"line\">&gt;app.<span class=\"title function_\">use</span>(bodyParser.<span class=\"title function_\">urlencoded</span>(&#123; <span class=\"attr\">extended</span>: <span class=\"literal\">false</span> &#125;))</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;<span class=\"comment\">// parse application/json</span></span><br><span class=\"line\">&gt;app.<span class=\"title function_\">use</span>(bodyParser.<span class=\"title function_\">json</span>())</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;app.<span class=\"title function_\">use</span>(<span class=\"keyword\">function</span> (<span class=\"params\">req, res</span>) &#123;</span><br><span class=\"line\">&gt;res.<span class=\"title function_\">setHeader</span>(<span class=\"string\">&#x27;Content-Type&#x27;</span>, <span class=\"string\">&#x27;text/plain&#x27;</span>)</span><br><span class=\"line\">&gt;res.<span class=\"title function_\">write</span>(<span class=\"string\">&#x27;you posted:\\n&#x27;</span>)</span><br><span class=\"line\">&gt;res.<span class=\"title function_\">end</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(req.<span class=\"property\">body</span>, <span class=\"literal\">null</span>, <span class=\"number\">2</span>))</span><br><span class=\"line\">&gt;&#125;)</span><br></pre></td></tr></table></figure>\n\n</blockquote>\n<h2 id=\"Sequelize连接数据库-中文文档\"><a href=\"#Sequelize连接数据库-中文文档\" class=\"headerlink\" title=\"Sequelize连接数据库 中文文档\"></a>Sequelize连接数据库 <a href=\"https://www.sequelize.cn/\">中文文档</a></h2><blockquote>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 使用npm</span></span><br><span class=\"line\">$ npm i sequelize</span><br><span class=\"line\"><span class=\"comment\"># 驱动包</span></span><br><span class=\"line\">$ npm install --save pg pg-hstore <span class=\"comment\"># Postgres</span></span><br><span class=\"line\">$ npm install --save mysql2</span><br><span class=\"line\">$ npm install --save mariadb</span><br><span class=\"line\">$ npm install --save sqlite3</span><br><span class=\"line\">$ npm install --save tedious <span class=\"comment\"># Microsoft SQL Server```</span></span><br><span class=\"line\">$ npm install --save sequelize</span><br></pre></td></tr></table></figure>\n\n</blockquote>\n<h4 id=\"连接到数据库\"><a href=\"#连接到数据库\" class=\"headerlink\" title=\"连接到数据库\"></a>连接到数据库</h4><blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;<span class=\"keyword\">const</span> &#123; <span class=\"title class_\">Sequelize</span> &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;sequelize&#x27;</span>);</span><br><span class=\"line\">&gt;<span class=\"comment\">// 方法 3: 分别传递参数 (其它数据库)</span></span><br><span class=\"line\">&gt;<span class=\"keyword\">const</span> sequelize = <span class=\"keyword\">new</span> <span class=\"title class_\">Sequelize</span>(<span class=\"string\">&#x27;database&#x27;</span>, <span class=\"string\">&#x27;username&#x27;</span>, <span class=\"string\">&#x27;password&#x27;</span>, &#123;</span><br><span class=\"line\">&gt;<span class=\"attr\">host</span>: <span class=\"string\">&#x27;localhost&#x27;</span>,</span><br><span class=\"line\">&gt;<span class=\"attr\">dialect</span>: <span class=\"comment\">/* 选择 &#x27;mysql&#x27; | &#x27;mariadb&#x27; | &#x27;postgres&#x27; | &#x27;mssql&#x27; 其一 */</span></span><br><span class=\"line\">&gt;&#125;);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n</blockquote>\n<h4 id=\"测试连接\"><a href=\"#测试连接\" class=\"headerlink\" title=\"测试连接\"></a>测试连接</h4><blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">&gt;<span class=\"keyword\">await</span> sequelize.<span class=\"title function_\">authenticate</span>();</span><br><span class=\"line\">&gt;<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Connection has been established successfully.&#x27;</span>);</span><br><span class=\"line\">&gt;&#125; <span class=\"keyword\">catch</span> (error) &#123;</span><br><span class=\"line\">&gt;<span class=\"variable language_\">console</span>.<span class=\"title function_\">error</span>(<span class=\"string\">&#x27;Unable to connect to the database:&#x27;</span>, error);</span><br><span class=\"line\">&gt;&#125;</span><br></pre></td></tr></table></figure>\n</blockquote>\n<h4 id=\"关闭连接\"><a href=\"#关闭连接\" class=\"headerlink\" title=\"关闭连接\"></a>关闭连接</h4><blockquote>\n<p>默认情况下,Sequelize 将保持连接打开状态,并对所有查询使用相同的连接. 如果你需要关闭连接,请调用 sequelize.close()(这是异步的并返回一个 Promise).</p>\n</blockquote>\n<h4 id=\"模型基础\"><a href=\"#模型基础\" class=\"headerlink\" title=\"模型基础\"></a>模型基础</h4><h5 id=\"使用-sequelize-define\"><a href=\"#使用-sequelize-define\" class=\"headerlink\" title=\"使用 sequelize.define\"></a>使用 sequelize.define</h5><blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123; <span class=\"title class_\">Sequelize</span>, <span class=\"title class_\">DataTypes</span> &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;sequelize&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> sequelize = <span class=\"keyword\">new</span> <span class=\"title class_\">Sequelize</span>(<span class=\"string\">&#x27;sqlite::memory:&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">User</span> = sequelize.<span class=\"title function_\">define</span>(<span class=\"string\">&#x27;User&#x27;</span>, &#123;</span><br><span class=\"line\"><span class=\"comment\">// 在这里定义模型属性</span></span><br><span class=\"line\"><span class=\"attr\">firstName</span>: &#123;</span><br><span class=\"line\"> <span class=\"attr\">type</span>: <span class=\"title class_\">DataTypes</span>.<span class=\"property\">STRING</span>,</span><br><span class=\"line\"> <span class=\"attr\">allowNull</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"attr\">lastName</span>: &#123;</span><br><span class=\"line\"> <span class=\"attr\">type</span>: <span class=\"title class_\">DataTypes</span>.<span class=\"property\">STRING</span></span><br><span class=\"line\"> <span class=\"comment\">// allowNull 默认为 true</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;, &#123;</span><br><span class=\"line\"><span class=\"comment\">// 这是其他模型参数</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// `sequelize.define` 会返回模型</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">User</span> === sequelize.<span class=\"property\">models</span>.<span class=\"property\">User</span>); <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n</blockquote>\n<h5 id=\"扩展-Model\"><a href=\"#扩展-Model\" class=\"headerlink\" title=\"扩展 Model\"></a>扩展 Model</h5><blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123; <span class=\"title class_\">Sequelize</span>, <span class=\"title class_\">DataTypes</span>, <span class=\"title class_\">Model</span> &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;sequelize&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> sequelize = <span class=\"keyword\">new</span> <span class=\"title class_\">Sequelize</span>(<span class=\"string\">&#x27;sqlite::memory:&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">User</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">Model</span> &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">User</span>.<span class=\"title function_\">init</span>(&#123;</span><br><span class=\"line\"><span class=\"comment\">// 在这里定义模型属性</span></span><br><span class=\"line\"><span class=\"attr\">firstName</span>: &#123;</span><br><span class=\"line\"> <span class=\"attr\">type</span>: <span class=\"title class_\">DataTypes</span>.<span class=\"property\">STRING</span>,</span><br><span class=\"line\"> <span class=\"attr\">allowNull</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"attr\">lastName</span>: &#123;</span><br><span class=\"line\"> <span class=\"attr\">type</span>: <span class=\"title class_\">DataTypes</span>.<span class=\"property\">STRING</span></span><br><span class=\"line\"> <span class=\"comment\">// allowNull 默认为 true</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;, &#123;</span><br><span class=\"line\"><span class=\"comment\">// 这是其他模型参数</span></span><br><span class=\"line\">sequelize, <span class=\"comment\">// 我们需要传递连接实例</span></span><br><span class=\"line\"><span class=\"attr\">modelName</span>: <span class=\"string\">&#x27;User&#x27;</span> <span class=\"comment\">// 我们需要选择模型名称</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 定义的模型是类本身</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">User</span> === sequelize.<span class=\"property\">models</span>.<span class=\"property\">User</span>); <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n</blockquote>\n<h2 id=\"Nodemailer-发送邮件\"><a href=\"#Nodemailer-发送邮件\" class=\"headerlink\" title=\"Nodemailer    发送邮件\"></a>Nodemailer    发送邮件</h2><blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&quot;use strict&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> nodemailer = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;nodemailer&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// async..await is not allowed in global scope, must use a wrapper</span></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">main</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\"><span class=\"comment\">// Generate test SMTP service account from ethereal.email</span></span><br><span class=\"line\"><span class=\"comment\">// Only needed if you don&#x27;t have a real mail account for testing</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> testAccount = <span class=\"keyword\">await</span> nodemailer.<span class=\"title function_\">createTestAccount</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// create reusable transporter object using the default SMTP transport</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> transporter = nodemailer.<span class=\"title function_\">createTransport</span>(&#123;</span><br><span class=\"line\"> <span class=\"attr\">host</span>: <span class=\"string\">&quot;smtp.ethereal.email&quot;</span>,</span><br><span class=\"line\"> <span class=\"attr\">port</span>: <span class=\"number\">587</span>,</span><br><span class=\"line\"> <span class=\"attr\">secure</span>: <span class=\"literal\">false</span>, <span class=\"comment\">// true for 465, false for other ports</span></span><br><span class=\"line\"> <span class=\"attr\">auth</span>: &#123;</span><br><span class=\"line\">   <span class=\"attr\">user</span>: testAccount.<span class=\"property\">user</span>, <span class=\"comment\">// generated ethereal user</span></span><br><span class=\"line\">   <span class=\"attr\">pass</span>: testAccount.<span class=\"property\">pass</span>, <span class=\"comment\">// generated ethereal password</span></span><br><span class=\"line\"> &#125;,</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// send mail with defined transport object</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> info = <span class=\"keyword\">await</span> transporter.<span class=\"title function_\">sendMail</span>(&#123;</span><br><span class=\"line\"> <span class=\"attr\">from</span>: <span class=\"string\">&#x27;&quot;Fred Foo 👻&quot; &lt;foo@example.com&gt;&#x27;</span>, <span class=\"comment\">// sender address</span></span><br><span class=\"line\"> <span class=\"attr\">to</span>: <span class=\"string\">&quot;bar@example.com, baz@example.com&quot;</span>, <span class=\"comment\">// list of receivers</span></span><br><span class=\"line\"> <span class=\"attr\">subject</span>: <span class=\"string\">&quot;Hello ✔&quot;</span>, <span class=\"comment\">// Subject line</span></span><br><span class=\"line\"> <span class=\"attr\">text</span>: <span class=\"string\">&quot;Hello world?&quot;</span>, <span class=\"comment\">// plain text body</span></span><br><span class=\"line\"> <span class=\"attr\">html</span>: <span class=\"string\">&quot;&lt;b&gt;Hello world?&lt;/b&gt;&quot;</span>, <span class=\"comment\">// html body</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;Message sent: %s&quot;</span>, info.<span class=\"property\">messageId</span>);</span><br><span class=\"line\"><span class=\"comment\">// Message sent: &lt;b658f8ca-6296-ccf4-8306-87d57a0b4321@example.com&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Preview only available when sending through an Ethereal account</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;Preview URL: %s&quot;</span>, nodemailer.<span class=\"title function_\">getTestMessageUrl</span>(info));</span><br><span class=\"line\"><span class=\"comment\">// Preview URL: https://ethereal.email/message/WaQKMgKddxQDoou...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">main</span>().<span class=\"title function_\">catch</span>(<span class=\"variable language_\">console</span>.<span class=\"property\">error</span>);</span><br></pre></td></tr></table></figure>\n</blockquote>"},{"title":"OpenWrt的编译笔记","date":"2022-01-09T14:39:01.000Z","start":null,"_content":"\n##  前言：\n\n   OpenWrt的固件编译基于[Lean](https://github.com/coolsnowwolf/lede)的Openwrt源码仓库进行编译。\n\n   编译方式：<u>本地编译</u>，<u>[Github Actions](https://github.com/P3TERX/Actions-OpenWrt)</u> 云编译。\n\n\n\n------\n\n\n\n## 本地编译：\n1. ### 准备工作：\n\n2. \n   - 科学上网\n   \n   - Ubuntu TLS 20.04\n   \n   - 支持OpenWrt的设备例如网件R6220, 斐讯K2P，小米3C, 极路由1S，联想new3等。\n   \n   - 高性能X86软路由设备。\n\n2. ### 编译配置：\n\n   - 命令行输入: ```sudo apt-get update``` 然后输入 ```sudo apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync```\n\n   - 使用 `git clone https://github.com/coolsnowwolf/lede` 命令下载好源代码，然后 `cd lede` 进入目录\n\n<!--more-->\n\n   - 命令行输入:\n   \n      ```\n        ./scripts/feeds update -a\n        ./scripts/feeds install -a\n        make menuconfig (配置.config)\n      ```\n      \n   - `make -j8 download V=s` 下载dl库（国内请尽量全局科学上网）\n   \n   - 输入 `make -j1 V=s` （-j1 后面是线程数。第一次编译推荐用单线程）即可开始编译你要的固件了。\n   \n   - 温馨提示：\n   \n      ​\t\t首次编译固件时，不要大量安装插件，否则编译会容易报错，大部分报错有可能是依赖没有下载全面说导致的，或者是插件冲突，在加入插件时应当考虑设备Rom容量和Ram，加入大量插件会使编译出的固件包太大而无法刷入设备，Ram不够插件运行的等。\n\n1. ### Github Actions 云编译：\n\n   - 使用[P3TERX](https://github.com/P3TERX)的云编译脚本，点击Fork\n\n   - 脚本[文档](https://p3terx.com/archives/build-openwrt-with-github-actions.html)地址\n\n   - 自定义 feeds 配置文件\n\n        把 `feeds.conf.default` 文件放入仓库根目录即可，它会覆盖 Open­Wrt 源码目录下的相关文件。\n\n   - 如果没有.config配置文件可以使用SSH 连接到 Actions\n\n        通过 tmate 连接到 GitHub Ac­tions 虚拟服务器环境，可直接进行 `make menuconfig` 操作生成编译配置，或者任意的客制化操作。也就是说，你不需要再自己搭建编译环境了。这可能改变之前所有使用 GitHub Ac­tions 的编译 Open­Wrt 方式。\n\n     - 在`Run Workflow`时把`SSH connection to Actions`的值改为`true`（或者也可以不修改，而是通过 [webhook 方式](https://p3terx.com/archives/github-actions-manual-trigger.html#toc_2)发送带有`ssh`触发关键词的请求。）\n\n     - 在触发工作流程后，在 Actions 日志页面等待执行到`SSH connection to Actions`步骤，会出现类似下面的信息：\n\n       ```\n       To connect to this session copy-n-paste the following into a terminal or browser:\n       \n       ssh Y26QeagDtsPXp2mT6me5cnMRd@nyc1.tmate.io\n       \n       https://tmate.io/t/Y26QeagDtsPXp2mT6me5cnMRd\n       ```\n\n     - 复制 SSH 连接命令粘贴到终端内执行，或者复制链接在浏览器中打开使用网页终端。（网页终端可能会遇到黑屏的情况，按 `Ctrl`+`C` 即可）\n\n     - `cd openwrt && make menuconfig`\n\n     - 完成后按`Ctrl`+`D`组合键或执行`exit`命令退出，后续编译工作将自动进行。\n\n     - **提示:**固件目录下有个`config.seed`或者`config.buildinfo`文件，如果你需要再次编译可以使用它。\n\n2. ### 网件R6220配置：\n\n   - 集成Hello world科学上网\n\n   - Samba网络共享\n\n   - miniDLAN\n\n   - UPnP\n\n   - 动态DDNS\n\n   - 上网时间控制\n\n   - FTP服务器\n\n   - 硬盘休眠\n\n   - Turbo ACC 网络加速\n\n   - USB储存设备挂载\n\n     - 支持 USB1，USB2，USB3\n\n     - 支持exFAT，ext4，NTFS，VFAT(FAT32)\n\n     - 支持自动挂载\n\n     - 热插拔\n\n```\nCONFIG_TARGET_ramips=y\nCONFIG_TARGET_ramips_mt7621=y\nCONFIG_TARGET_ramips_mt7621_DEVICE_netgear_r6220=y\nCONFIG_PACKAGE_6in4=y\nCONFIG_PACKAGE_SAMBA_MAX_DEBUG_LEVEL=-1\nCONFIG_PACKAGE_badblocks=y\nCONFIG_PACKAGE_bash=y\nCONFIG_PACKAGE_boost=y\nCONFIG_PACKAGE_boost-date_time=y\nCONFIG_PACKAGE_boost-program_options=y\nCONFIG_PACKAGE_boost-system=y\n# CONFIG_PACKAGE_dns2socks is not set\nCONFIG_PACKAGE_e2fsprogs=y\nCONFIG_PACKAGE_fdisk=y\nCONFIG_PACKAGE_hd-idle=y\nCONFIG_PACKAGE_ip6tables=y\nCONFIG_PACKAGE_ipt2socks=y\nCONFIG_PACKAGE_ipv6helper=y\nCONFIG_PACKAGE_kcptun-client=y\nCONFIG_PACKAGE_kcptun-config=y\nCONFIG_PACKAGE_kmod-crypto-crc32c=y\nCONFIG_PACKAGE_kmod-fs-exfat=y\nCONFIG_PACKAGE_kmod-fs-ext4=y\nCONFIG_PACKAGE_kmod-fs-ntfs=y\nCONFIG_PACKAGE_kmod-fs-vfat=y\nCONFIG_PACKAGE_kmod-ipt-nat6=y\nCONFIG_PACKAGE_kmod-iptunnel=y\nCONFIG_PACKAGE_kmod-iptunnel4=y\nCONFIG_PACKAGE_kmod-lib-crc16=y\nCONFIG_PACKAGE_kmod-nf-nat6=y\nCONFIG_PACKAGE_kmod-nls-cp437=y\nCONFIG_PACKAGE_kmod-nls-iso8859-1=y\nCONFIG_PACKAGE_kmod-nls-utf8=y\nCONFIG_PACKAGE_kmod-scsi-core=y\nCONFIG_PACKAGE_kmod-sit=y\nCONFIG_PACKAGE_kmod-usb-ehci=y\nCONFIG_PACKAGE_kmod-usb-ohci=y\nCONFIG_PACKAGE_kmod-usb-storage=y\nCONFIG_PACKAGE_kmod-usb-storage-extras=y\nCONFIG_PACKAGE_kmod-usb-uhci=y\nCONFIG_PACKAGE_kmod-usb2=y\nCONFIG_PACKAGE_libblkid=y\nCONFIG_PACKAGE_libbz2=y\nCONFIG_PACKAGE_libcomerr=y\nCONFIG_PACKAGE_libevdev=y\nCONFIG_PACKAGE_libexif=y\nCONFIG_PACKAGE_libext2fs=y\nCONFIG_PACKAGE_libfdisk=y\nCONFIG_PACKAGE_libffmpeg-audio-dec=y\nCONFIG_PACKAGE_libflac=y\nCONFIG_PACKAGE_libid3tag=y\nCONFIG_PACKAGE_libjpeg-turbo=y\nCONFIG_PACKAGE_libmaxminddb=y\nCONFIG_PACKAGE_libmbedtls=y\nCONFIG_PACKAGE_libncurses=y\nCONFIG_PACKAGE_libogg=y\nCONFIG_PACKAGE_libreadline=y\nCONFIG_PACKAGE_libsmartcols=y\nCONFIG_PACKAGE_libsqlite3=y\nCONFIG_PACKAGE_libss=y\nCONFIG_PACKAGE_libstdcpp=y\nCONFIG_PACKAGE_libudev-zero=y\nCONFIG_PACKAGE_libusb-1.0=y\nCONFIG_PACKAGE_libuv=y\nCONFIG_PACKAGE_libvorbis=y\nCONFIG_PACKAGE_lua-cjson=y\nCONFIG_PACKAGE_lua-maxminddb=y\nCONFIG_PACKAGE_luasocket=y\nCONFIG_PACKAGE_luci-app-hd-idle=y\nCONFIG_PACKAGE_luci-app-minidlna=y\nCONFIG_PACKAGE_luci-app-samba=y\n# CONFIG_PACKAGE_luci-app-ssr-plus is not set\n# CONFIG_PACKAGE_luci-app-unblockmusic is not set\nCONFIG_PACKAGE_luci-app-vssr=y\nCONFIG_PACKAGE_luci-app-vssr_INCLUDE_Kcptun=y\nCONFIG_PACKAGE_luci-app-vssr_INCLUDE_ShadowsocksR_Libev_Server=y\nCONFIG_PACKAGE_luci-app-vssr_INCLUDE_Trojan=y\nCONFIG_PACKAGE_luci-app-vssr_INCLUDE_Xray=y\nCONFIG_PACKAGE_luci-app-vssr_INCLUDE_Xray_plugin=y\nCONFIG_PACKAGE_luci-i18n-hd-idle-zh-cn=y\nCONFIG_PACKAGE_luci-i18n-minidlna-zh-cn=y\nCONFIG_PACKAGE_luci-i18n-samba-zh-cn=y\nCONFIG_PACKAGE_luci-i18n-vssr-zh-cn=y\nCONFIG_PACKAGE_luci-proto-ipv6=y\nCONFIG_PACKAGE_luci-theme-mcat=y\n# CONFIG_PACKAGE_microsocks is not set\nCONFIG_PACKAGE_minidlna=y\nCONFIG_PACKAGE_odhcp6c=y\nCONFIG_PACKAGE_odhcp6c_ext_cer_id=0\nCONFIG_PACKAGE_odhcpd-ipv6only=y\nCONFIG_PACKAGE_odhcpd_ipv6only_ext_cer_id=0\n# CONFIG_PACKAGE_resolveip is not set\nCONFIG_PACKAGE_samba36-server=y\nCONFIG_PACKAGE_shadowsocks-libev-ss-local=y\nCONFIG_PACKAGE_shadowsocks-libev-ss-redir=y\nCONFIG_PACKAGE_shadowsocksr-libev-ssr-server=y\nCONFIG_PACKAGE_simple-obfs=y\n# CONFIG_PACKAGE_tcping is not set\nCONFIG_PACKAGE_terminfo=y\nCONFIG_PACKAGE_trojan=y\nCONFIG_PACKAGE_usbids=y\nCONFIG_PACKAGE_usbutils=y\nCONFIG_PACKAGE_xray-core=y\nCONFIG_PACKAGE_xray-plugin=y\nCONFIG_SQLITE3_DYNAMIC_EXTENSIONS=y\nCONFIG_SQLITE3_FTS3=y\nCONFIG_SQLITE3_FTS4=y\nCONFIG_SQLITE3_FTS5=y\nCONFIG_SQLITE3_JSON1=y\nCONFIG_SQLITE3_RTREE=y\nCONFIG_boost-compile-visibility-hidden=y\nCONFIG_boost-runtime-shared=y\nCONFIG_boost-static-and-shared-libs=y\nCONFIG_boost-variant-release=y\n```\n\n\n\n​     \n\n","source":"_posts/OpenWrt的编译笔记.md","raw":"---\ntitle: OpenWrt的编译笔记\ndate: 2022-01-09 22:39:01\nstart:\ntags: [\"OpenWrt\",\"学习\"]\ncategories: OpenWrt\n---\n\n##  前言：\n\n   OpenWrt的固件编译基于[Lean](https://github.com/coolsnowwolf/lede)的Openwrt源码仓库进行编译。\n\n   编译方式：<u>本地编译</u>，<u>[Github Actions](https://github.com/P3TERX/Actions-OpenWrt)</u> 云编译。\n\n\n\n------\n\n\n\n## 本地编译：\n1. ### 准备工作：\n\n2. \n   - 科学上网\n   \n   - Ubuntu TLS 20.04\n   \n   - 支持OpenWrt的设备例如网件R6220, 斐讯K2P，小米3C, 极路由1S，联想new3等。\n   \n   - 高性能X86软路由设备。\n\n2. ### 编译配置：\n\n   - 命令行输入: ```sudo apt-get update``` 然后输入 ```sudo apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync```\n\n   - 使用 `git clone https://github.com/coolsnowwolf/lede` 命令下载好源代码，然后 `cd lede` 进入目录\n\n<!--more-->\n\n   - 命令行输入:\n   \n      ```\n        ./scripts/feeds update -a\n        ./scripts/feeds install -a\n        make menuconfig (配置.config)\n      ```\n      \n   - `make -j8 download V=s` 下载dl库（国内请尽量全局科学上网）\n   \n   - 输入 `make -j1 V=s` （-j1 后面是线程数。第一次编译推荐用单线程）即可开始编译你要的固件了。\n   \n   - 温馨提示：\n   \n      ​\t\t首次编译固件时，不要大量安装插件，否则编译会容易报错，大部分报错有可能是依赖没有下载全面说导致的，或者是插件冲突，在加入插件时应当考虑设备Rom容量和Ram，加入大量插件会使编译出的固件包太大而无法刷入设备，Ram不够插件运行的等。\n\n1. ### Github Actions 云编译：\n\n   - 使用[P3TERX](https://github.com/P3TERX)的云编译脚本，点击Fork\n\n   - 脚本[文档](https://p3terx.com/archives/build-openwrt-with-github-actions.html)地址\n\n   - 自定义 feeds 配置文件\n\n        把 `feeds.conf.default` 文件放入仓库根目录即可，它会覆盖 Open­Wrt 源码目录下的相关文件。\n\n   - 如果没有.config配置文件可以使用SSH 连接到 Actions\n\n        通过 tmate 连接到 GitHub Ac­tions 虚拟服务器环境，可直接进行 `make menuconfig` 操作生成编译配置，或者任意的客制化操作。也就是说，你不需要再自己搭建编译环境了。这可能改变之前所有使用 GitHub Ac­tions 的编译 Open­Wrt 方式。\n\n     - 在`Run Workflow`时把`SSH connection to Actions`的值改为`true`（或者也可以不修改，而是通过 [webhook 方式](https://p3terx.com/archives/github-actions-manual-trigger.html#toc_2)发送带有`ssh`触发关键词的请求。）\n\n     - 在触发工作流程后，在 Actions 日志页面等待执行到`SSH connection to Actions`步骤，会出现类似下面的信息：\n\n       ```\n       To connect to this session copy-n-paste the following into a terminal or browser:\n       \n       ssh Y26QeagDtsPXp2mT6me5cnMRd@nyc1.tmate.io\n       \n       https://tmate.io/t/Y26QeagDtsPXp2mT6me5cnMRd\n       ```\n\n     - 复制 SSH 连接命令粘贴到终端内执行，或者复制链接在浏览器中打开使用网页终端。（网页终端可能会遇到黑屏的情况，按 `Ctrl`+`C` 即可）\n\n     - `cd openwrt && make menuconfig`\n\n     - 完成后按`Ctrl`+`D`组合键或执行`exit`命令退出，后续编译工作将自动进行。\n\n     - **提示:**固件目录下有个`config.seed`或者`config.buildinfo`文件，如果你需要再次编译可以使用它。\n\n2. ### 网件R6220配置：\n\n   - 集成Hello world科学上网\n\n   - Samba网络共享\n\n   - miniDLAN\n\n   - UPnP\n\n   - 动态DDNS\n\n   - 上网时间控制\n\n   - FTP服务器\n\n   - 硬盘休眠\n\n   - Turbo ACC 网络加速\n\n   - USB储存设备挂载\n\n     - 支持 USB1，USB2，USB3\n\n     - 支持exFAT，ext4，NTFS，VFAT(FAT32)\n\n     - 支持自动挂载\n\n     - 热插拔\n\n```\nCONFIG_TARGET_ramips=y\nCONFIG_TARGET_ramips_mt7621=y\nCONFIG_TARGET_ramips_mt7621_DEVICE_netgear_r6220=y\nCONFIG_PACKAGE_6in4=y\nCONFIG_PACKAGE_SAMBA_MAX_DEBUG_LEVEL=-1\nCONFIG_PACKAGE_badblocks=y\nCONFIG_PACKAGE_bash=y\nCONFIG_PACKAGE_boost=y\nCONFIG_PACKAGE_boost-date_time=y\nCONFIG_PACKAGE_boost-program_options=y\nCONFIG_PACKAGE_boost-system=y\n# CONFIG_PACKAGE_dns2socks is not set\nCONFIG_PACKAGE_e2fsprogs=y\nCONFIG_PACKAGE_fdisk=y\nCONFIG_PACKAGE_hd-idle=y\nCONFIG_PACKAGE_ip6tables=y\nCONFIG_PACKAGE_ipt2socks=y\nCONFIG_PACKAGE_ipv6helper=y\nCONFIG_PACKAGE_kcptun-client=y\nCONFIG_PACKAGE_kcptun-config=y\nCONFIG_PACKAGE_kmod-crypto-crc32c=y\nCONFIG_PACKAGE_kmod-fs-exfat=y\nCONFIG_PACKAGE_kmod-fs-ext4=y\nCONFIG_PACKAGE_kmod-fs-ntfs=y\nCONFIG_PACKAGE_kmod-fs-vfat=y\nCONFIG_PACKAGE_kmod-ipt-nat6=y\nCONFIG_PACKAGE_kmod-iptunnel=y\nCONFIG_PACKAGE_kmod-iptunnel4=y\nCONFIG_PACKAGE_kmod-lib-crc16=y\nCONFIG_PACKAGE_kmod-nf-nat6=y\nCONFIG_PACKAGE_kmod-nls-cp437=y\nCONFIG_PACKAGE_kmod-nls-iso8859-1=y\nCONFIG_PACKAGE_kmod-nls-utf8=y\nCONFIG_PACKAGE_kmod-scsi-core=y\nCONFIG_PACKAGE_kmod-sit=y\nCONFIG_PACKAGE_kmod-usb-ehci=y\nCONFIG_PACKAGE_kmod-usb-ohci=y\nCONFIG_PACKAGE_kmod-usb-storage=y\nCONFIG_PACKAGE_kmod-usb-storage-extras=y\nCONFIG_PACKAGE_kmod-usb-uhci=y\nCONFIG_PACKAGE_kmod-usb2=y\nCONFIG_PACKAGE_libblkid=y\nCONFIG_PACKAGE_libbz2=y\nCONFIG_PACKAGE_libcomerr=y\nCONFIG_PACKAGE_libevdev=y\nCONFIG_PACKAGE_libexif=y\nCONFIG_PACKAGE_libext2fs=y\nCONFIG_PACKAGE_libfdisk=y\nCONFIG_PACKAGE_libffmpeg-audio-dec=y\nCONFIG_PACKAGE_libflac=y\nCONFIG_PACKAGE_libid3tag=y\nCONFIG_PACKAGE_libjpeg-turbo=y\nCONFIG_PACKAGE_libmaxminddb=y\nCONFIG_PACKAGE_libmbedtls=y\nCONFIG_PACKAGE_libncurses=y\nCONFIG_PACKAGE_libogg=y\nCONFIG_PACKAGE_libreadline=y\nCONFIG_PACKAGE_libsmartcols=y\nCONFIG_PACKAGE_libsqlite3=y\nCONFIG_PACKAGE_libss=y\nCONFIG_PACKAGE_libstdcpp=y\nCONFIG_PACKAGE_libudev-zero=y\nCONFIG_PACKAGE_libusb-1.0=y\nCONFIG_PACKAGE_libuv=y\nCONFIG_PACKAGE_libvorbis=y\nCONFIG_PACKAGE_lua-cjson=y\nCONFIG_PACKAGE_lua-maxminddb=y\nCONFIG_PACKAGE_luasocket=y\nCONFIG_PACKAGE_luci-app-hd-idle=y\nCONFIG_PACKAGE_luci-app-minidlna=y\nCONFIG_PACKAGE_luci-app-samba=y\n# CONFIG_PACKAGE_luci-app-ssr-plus is not set\n# CONFIG_PACKAGE_luci-app-unblockmusic is not set\nCONFIG_PACKAGE_luci-app-vssr=y\nCONFIG_PACKAGE_luci-app-vssr_INCLUDE_Kcptun=y\nCONFIG_PACKAGE_luci-app-vssr_INCLUDE_ShadowsocksR_Libev_Server=y\nCONFIG_PACKAGE_luci-app-vssr_INCLUDE_Trojan=y\nCONFIG_PACKAGE_luci-app-vssr_INCLUDE_Xray=y\nCONFIG_PACKAGE_luci-app-vssr_INCLUDE_Xray_plugin=y\nCONFIG_PACKAGE_luci-i18n-hd-idle-zh-cn=y\nCONFIG_PACKAGE_luci-i18n-minidlna-zh-cn=y\nCONFIG_PACKAGE_luci-i18n-samba-zh-cn=y\nCONFIG_PACKAGE_luci-i18n-vssr-zh-cn=y\nCONFIG_PACKAGE_luci-proto-ipv6=y\nCONFIG_PACKAGE_luci-theme-mcat=y\n# CONFIG_PACKAGE_microsocks is not set\nCONFIG_PACKAGE_minidlna=y\nCONFIG_PACKAGE_odhcp6c=y\nCONFIG_PACKAGE_odhcp6c_ext_cer_id=0\nCONFIG_PACKAGE_odhcpd-ipv6only=y\nCONFIG_PACKAGE_odhcpd_ipv6only_ext_cer_id=0\n# CONFIG_PACKAGE_resolveip is not set\nCONFIG_PACKAGE_samba36-server=y\nCONFIG_PACKAGE_shadowsocks-libev-ss-local=y\nCONFIG_PACKAGE_shadowsocks-libev-ss-redir=y\nCONFIG_PACKAGE_shadowsocksr-libev-ssr-server=y\nCONFIG_PACKAGE_simple-obfs=y\n# CONFIG_PACKAGE_tcping is not set\nCONFIG_PACKAGE_terminfo=y\nCONFIG_PACKAGE_trojan=y\nCONFIG_PACKAGE_usbids=y\nCONFIG_PACKAGE_usbutils=y\nCONFIG_PACKAGE_xray-core=y\nCONFIG_PACKAGE_xray-plugin=y\nCONFIG_SQLITE3_DYNAMIC_EXTENSIONS=y\nCONFIG_SQLITE3_FTS3=y\nCONFIG_SQLITE3_FTS4=y\nCONFIG_SQLITE3_FTS5=y\nCONFIG_SQLITE3_JSON1=y\nCONFIG_SQLITE3_RTREE=y\nCONFIG_boost-compile-visibility-hidden=y\nCONFIG_boost-runtime-shared=y\nCONFIG_boost-static-and-shared-libs=y\nCONFIG_boost-variant-release=y\n```\n\n\n\n​     \n\n","slug":"OpenWrt的编译笔记","published":1,"updated":"2022-01-12T20:11:47.315Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7rscd230008bwuz4i1i51tx","content":"<h2 id=\"前言：\"><a href=\"#前言：\" class=\"headerlink\" title=\"前言：\"></a>前言：</h2><p>   OpenWrt的固件编译基于<a href=\"https://github.com/coolsnowwolf/lede\">Lean</a>的Openwrt源码仓库进行编译。</p>\n<p>   编译方式：<u>本地编译</u>，<u><a href=\"https://github.com/P3TERX/Actions-OpenWrt\">Github Actions</a></u> 云编译。</p>\n<hr>\n<h2 id=\"本地编译：\"><a href=\"#本地编译：\" class=\"headerlink\" title=\"本地编译：\"></a>本地编译：</h2><ol>\n<li><h3 id=\"准备工作：\"><a href=\"#准备工作：\" class=\"headerlink\" title=\"准备工作：\"></a>准备工作：</h3></li>\n<li><ul>\n<li><p>科学上网</p>\n</li>\n<li><p>Ubuntu TLS 20.04</p>\n</li>\n<li><p>支持OpenWrt的设备例如网件R6220, 斐讯K2P，小米3C, 极路由1S，联想new3等。</p>\n</li>\n<li><p>高性能X86软路由设备。</p>\n</li>\n</ul>\n</li>\n<li><h3 id=\"编译配置：\"><a href=\"#编译配置：\" class=\"headerlink\" title=\"编译配置：\"></a>编译配置：</h3><ul>\n<li><p>命令行输入: <code>sudo apt-get update</code> 然后输入 <code>sudo apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync</code></p>\n</li>\n<li><p>使用 <code>git clone https://github.com/coolsnowwolf/lede</code> 命令下载好源代码，然后 <code>cd lede</code> 进入目录</p>\n</li>\n</ul>\n</li>\n</ol>\n<span id=\"more\"></span>\n\n<ul>\n<li>命令行输入: <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./scripts/feeds update -a</span><br><span class=\"line\">./scripts/feeds install -a</span><br><span class=\"line\">make menuconfig (配置.config)</span><br></pre></td></tr></table></figure>\n</li>\n<li><code>make -j8 download V=s</code> 下载dl库（国内请尽量全局科学上网）</li>\n<li>输入 <code>make -j1 V=s</code> （-j1 后面是线程数。第一次编译推荐用单线程）即可开始编译你要的固件了。</li>\n<li>温馨提示： ​        首次编译固件时，不要大量安装插件，否则编译会容易报错，大部分报错有可能是依赖没有下载全面说导致的，或者是插件冲突，在加入插件时应当考虑设备Rom容量和Ram，加入大量插件会使编译出的固件包太大而无法刷入设备，Ram不够插件运行的等。</li>\n</ul>\n<ol>\n<li><h3 id=\"Github-Actions-云编译：\"><a href=\"#Github-Actions-云编译：\" class=\"headerlink\" title=\"Github Actions 云编译：\"></a>Github Actions 云编译：</h3><ul>\n<li><p>使用<a href=\"https://github.com/P3TERX\">P3TERX</a>的云编译脚本，点击Fork</p>\n</li>\n<li><p>脚本<a href=\"https://p3terx.com/archives/build-openwrt-with-github-actions.html\">文档</a>地址</p>\n</li>\n<li><p>自定义 feeds 配置文件</p>\n<p>   把 <code>feeds.conf.default</code> 文件放入仓库根目录即可，它会覆盖 Open­Wrt 源码目录下的相关文件。</p>\n</li>\n<li><p>如果没有.config配置文件可以使用SSH 连接到 Actions</p>\n<p>   通过 tmate 连接到 GitHub Ac­tions 虚拟服务器环境，可直接进行 <code>make menuconfig</code> 操作生成编译配置，或者任意的客制化操作。也就是说，你不需要再自己搭建编译环境了。这可能改变之前所有使用 GitHub Ac­tions 的编译 Open­Wrt 方式。</p>\n<ul>\n<li><p>在<code>Run Workflow</code>时把<code>SSH connection to Actions</code>的值改为<code>true</code>（或者也可以不修改，而是通过 <a href=\"https://p3terx.com/archives/github-actions-manual-trigger.html#toc_2\">webhook 方式</a>发送带有<code>ssh</code>触发关键词的请求。）</p>\n</li>\n<li><p>在触发工作流程后，在 Actions 日志页面等待执行到<code>SSH connection to Actions</code>步骤，会出现类似下面的信息：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">To connect to this session copy-n-paste the following into a terminal or browser:</span><br><span class=\"line\"></span><br><span class=\"line\">ssh Y26QeagDtsPXp2mT6me5cnMRd@nyc1.tmate.io</span><br><span class=\"line\"></span><br><span class=\"line\">https://tmate.io/t/Y26QeagDtsPXp2mT6me5cnMRd</span><br></pre></td></tr></table></figure></li>\n<li><p>复制 SSH 连接命令粘贴到终端内执行，或者复制链接在浏览器中打开使用网页终端。（网页终端可能会遇到黑屏的情况，按 <code>Ctrl</code>+<code>C</code> 即可）</p>\n</li>\n<li><p><code>cd openwrt &amp;&amp; make menuconfig</code></p>\n</li>\n<li><p>完成后按<code>Ctrl</code>+<code>D</code>组合键或执行<code>exit</code>命令退出，后续编译工作将自动进行。</p>\n</li>\n<li><p>**提示:**固件目录下有个<code>config.seed</code>或者<code>config.buildinfo</code>文件，如果你需要再次编译可以使用它。</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><h3 id=\"网件R6220配置：\"><a href=\"#网件R6220配置：\" class=\"headerlink\" title=\"网件R6220配置：\"></a>网件R6220配置：</h3><ul>\n<li><p>集成Hello world科学上网</p>\n</li>\n<li><p>Samba网络共享</p>\n</li>\n<li><p>miniDLAN</p>\n</li>\n<li><p>UPnP</p>\n</li>\n<li><p>动态DDNS</p>\n</li>\n<li><p>上网时间控制</p>\n</li>\n<li><p>FTP服务器</p>\n</li>\n<li><p>硬盘休眠</p>\n</li>\n<li><p>Turbo ACC 网络加速</p>\n</li>\n<li><p>USB储存设备挂载</p>\n<ul>\n<li><p>支持 USB1，USB2，USB3</p>\n</li>\n<li><p>支持exFAT，ext4，NTFS，VFAT(FAT32)</p>\n</li>\n<li><p>支持自动挂载</p>\n</li>\n<li><p>热插拔</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CONFIG_TARGET_ramips=y</span><br><span class=\"line\">CONFIG_TARGET_ramips_mt7621=y</span><br><span class=\"line\">CONFIG_TARGET_ramips_mt7621_DEVICE_netgear_r6220=y</span><br><span class=\"line\">CONFIG_PACKAGE_6in4=y</span><br><span class=\"line\">CONFIG_PACKAGE_SAMBA_MAX_DEBUG_LEVEL=-1</span><br><span class=\"line\">CONFIG_PACKAGE_badblocks=y</span><br><span class=\"line\">CONFIG_PACKAGE_bash=y</span><br><span class=\"line\">CONFIG_PACKAGE_boost=y</span><br><span class=\"line\">CONFIG_PACKAGE_boost-date_time=y</span><br><span class=\"line\">CONFIG_PACKAGE_boost-program_options=y</span><br><span class=\"line\">CONFIG_PACKAGE_boost-system=y</span><br><span class=\"line\"># CONFIG_PACKAGE_dns2socks is not set</span><br><span class=\"line\">CONFIG_PACKAGE_e2fsprogs=y</span><br><span class=\"line\">CONFIG_PACKAGE_fdisk=y</span><br><span class=\"line\">CONFIG_PACKAGE_hd-idle=y</span><br><span class=\"line\">CONFIG_PACKAGE_ip6tables=y</span><br><span class=\"line\">CONFIG_PACKAGE_ipt2socks=y</span><br><span class=\"line\">CONFIG_PACKAGE_ipv6helper=y</span><br><span class=\"line\">CONFIG_PACKAGE_kcptun-client=y</span><br><span class=\"line\">CONFIG_PACKAGE_kcptun-config=y</span><br><span class=\"line\">CONFIG_PACKAGE_kmod-crypto-crc32c=y</span><br><span class=\"line\">CONFIG_PACKAGE_kmod-fs-exfat=y</span><br><span class=\"line\">CONFIG_PACKAGE_kmod-fs-ext4=y</span><br><span class=\"line\">CONFIG_PACKAGE_kmod-fs-ntfs=y</span><br><span class=\"line\">CONFIG_PACKAGE_kmod-fs-vfat=y</span><br><span class=\"line\">CONFIG_PACKAGE_kmod-ipt-nat6=y</span><br><span class=\"line\">CONFIG_PACKAGE_kmod-iptunnel=y</span><br><span class=\"line\">CONFIG_PACKAGE_kmod-iptunnel4=y</span><br><span class=\"line\">CONFIG_PACKAGE_kmod-lib-crc16=y</span><br><span class=\"line\">CONFIG_PACKAGE_kmod-nf-nat6=y</span><br><span class=\"line\">CONFIG_PACKAGE_kmod-nls-cp437=y</span><br><span class=\"line\">CONFIG_PACKAGE_kmod-nls-iso8859-1=y</span><br><span class=\"line\">CONFIG_PACKAGE_kmod-nls-utf8=y</span><br><span class=\"line\">CONFIG_PACKAGE_kmod-scsi-core=y</span><br><span class=\"line\">CONFIG_PACKAGE_kmod-sit=y</span><br><span class=\"line\">CONFIG_PACKAGE_kmod-usb-ehci=y</span><br><span class=\"line\">CONFIG_PACKAGE_kmod-usb-ohci=y</span><br><span class=\"line\">CONFIG_PACKAGE_kmod-usb-storage=y</span><br><span class=\"line\">CONFIG_PACKAGE_kmod-usb-storage-extras=y</span><br><span class=\"line\">CONFIG_PACKAGE_kmod-usb-uhci=y</span><br><span class=\"line\">CONFIG_PACKAGE_kmod-usb2=y</span><br><span class=\"line\">CONFIG_PACKAGE_libblkid=y</span><br><span class=\"line\">CONFIG_PACKAGE_libbz2=y</span><br><span class=\"line\">CONFIG_PACKAGE_libcomerr=y</span><br><span class=\"line\">CONFIG_PACKAGE_libevdev=y</span><br><span class=\"line\">CONFIG_PACKAGE_libexif=y</span><br><span class=\"line\">CONFIG_PACKAGE_libext2fs=y</span><br><span class=\"line\">CONFIG_PACKAGE_libfdisk=y</span><br><span class=\"line\">CONFIG_PACKAGE_libffmpeg-audio-dec=y</span><br><span class=\"line\">CONFIG_PACKAGE_libflac=y</span><br><span class=\"line\">CONFIG_PACKAGE_libid3tag=y</span><br><span class=\"line\">CONFIG_PACKAGE_libjpeg-turbo=y</span><br><span class=\"line\">CONFIG_PACKAGE_libmaxminddb=y</span><br><span class=\"line\">CONFIG_PACKAGE_libmbedtls=y</span><br><span class=\"line\">CONFIG_PACKAGE_libncurses=y</span><br><span class=\"line\">CONFIG_PACKAGE_libogg=y</span><br><span class=\"line\">CONFIG_PACKAGE_libreadline=y</span><br><span class=\"line\">CONFIG_PACKAGE_libsmartcols=y</span><br><span class=\"line\">CONFIG_PACKAGE_libsqlite3=y</span><br><span class=\"line\">CONFIG_PACKAGE_libss=y</span><br><span class=\"line\">CONFIG_PACKAGE_libstdcpp=y</span><br><span class=\"line\">CONFIG_PACKAGE_libudev-zero=y</span><br><span class=\"line\">CONFIG_PACKAGE_libusb-1.0=y</span><br><span class=\"line\">CONFIG_PACKAGE_libuv=y</span><br><span class=\"line\">CONFIG_PACKAGE_libvorbis=y</span><br><span class=\"line\">CONFIG_PACKAGE_lua-cjson=y</span><br><span class=\"line\">CONFIG_PACKAGE_lua-maxminddb=y</span><br><span class=\"line\">CONFIG_PACKAGE_luasocket=y</span><br><span class=\"line\">CONFIG_PACKAGE_luci-app-hd-idle=y</span><br><span class=\"line\">CONFIG_PACKAGE_luci-app-minidlna=y</span><br><span class=\"line\">CONFIG_PACKAGE_luci-app-samba=y</span><br><span class=\"line\"># CONFIG_PACKAGE_luci-app-ssr-plus is not set</span><br><span class=\"line\"># CONFIG_PACKAGE_luci-app-unblockmusic is not set</span><br><span class=\"line\">CONFIG_PACKAGE_luci-app-vssr=y</span><br><span class=\"line\">CONFIG_PACKAGE_luci-app-vssr_INCLUDE_Kcptun=y</span><br><span class=\"line\">CONFIG_PACKAGE_luci-app-vssr_INCLUDE_ShadowsocksR_Libev_Server=y</span><br><span class=\"line\">CONFIG_PACKAGE_luci-app-vssr_INCLUDE_Trojan=y</span><br><span class=\"line\">CONFIG_PACKAGE_luci-app-vssr_INCLUDE_Xray=y</span><br><span class=\"line\">CONFIG_PACKAGE_luci-app-vssr_INCLUDE_Xray_plugin=y</span><br><span class=\"line\">CONFIG_PACKAGE_luci-i18n-hd-idle-zh-cn=y</span><br><span class=\"line\">CONFIG_PACKAGE_luci-i18n-minidlna-zh-cn=y</span><br><span class=\"line\">CONFIG_PACKAGE_luci-i18n-samba-zh-cn=y</span><br><span class=\"line\">CONFIG_PACKAGE_luci-i18n-vssr-zh-cn=y</span><br><span class=\"line\">CONFIG_PACKAGE_luci-proto-ipv6=y</span><br><span class=\"line\">CONFIG_PACKAGE_luci-theme-mcat=y</span><br><span class=\"line\"># CONFIG_PACKAGE_microsocks is not set</span><br><span class=\"line\">CONFIG_PACKAGE_minidlna=y</span><br><span class=\"line\">CONFIG_PACKAGE_odhcp6c=y</span><br><span class=\"line\">CONFIG_PACKAGE_odhcp6c_ext_cer_id=0</span><br><span class=\"line\">CONFIG_PACKAGE_odhcpd-ipv6only=y</span><br><span class=\"line\">CONFIG_PACKAGE_odhcpd_ipv6only_ext_cer_id=0</span><br><span class=\"line\"># CONFIG_PACKAGE_resolveip is not set</span><br><span class=\"line\">CONFIG_PACKAGE_samba36-server=y</span><br><span class=\"line\">CONFIG_PACKAGE_shadowsocks-libev-ss-local=y</span><br><span class=\"line\">CONFIG_PACKAGE_shadowsocks-libev-ss-redir=y</span><br><span class=\"line\">CONFIG_PACKAGE_shadowsocksr-libev-ssr-server=y</span><br><span class=\"line\">CONFIG_PACKAGE_simple-obfs=y</span><br><span class=\"line\"># CONFIG_PACKAGE_tcping is not set</span><br><span class=\"line\">CONFIG_PACKAGE_terminfo=y</span><br><span class=\"line\">CONFIG_PACKAGE_trojan=y</span><br><span class=\"line\">CONFIG_PACKAGE_usbids=y</span><br><span class=\"line\">CONFIG_PACKAGE_usbutils=y</span><br><span class=\"line\">CONFIG_PACKAGE_xray-core=y</span><br><span class=\"line\">CONFIG_PACKAGE_xray-plugin=y</span><br><span class=\"line\">CONFIG_SQLITE3_DYNAMIC_EXTENSIONS=y</span><br><span class=\"line\">CONFIG_SQLITE3_FTS3=y</span><br><span class=\"line\">CONFIG_SQLITE3_FTS4=y</span><br><span class=\"line\">CONFIG_SQLITE3_FTS5=y</span><br><span class=\"line\">CONFIG_SQLITE3_JSON1=y</span><br><span class=\"line\">CONFIG_SQLITE3_RTREE=y</span><br><span class=\"line\">CONFIG_boost-compile-visibility-hidden=y</span><br><span class=\"line\">CONFIG_boost-runtime-shared=y</span><br><span class=\"line\">CONFIG_boost-static-and-shared-libs=y</span><br><span class=\"line\">CONFIG_boost-variant-release=y</span><br></pre></td></tr></table></figure>\n\n\n\n<p>​     </p>\n","site":{"data":{}},"abbrlink":4,"excerpt":"<h2 id=\"前言：\"><a href=\"#前言：\" class=\"headerlink\" title=\"前言：\"></a>前言：</h2><p>   OpenWrt的固件编译基于<a href=\"https://github.com/coolsnowwolf/lede\">Lean</a>的Openwrt源码仓库进行编译。</p>\n<p>   编译方式：<u>本地编译</u>，<u><a href=\"https://github.com/P3TERX/Actions-OpenWrt\">Github Actions</a></u> 云编译。</p>\n<hr>\n<h2 id=\"本地编译：\"><a href=\"#本地编译：\" class=\"headerlink\" title=\"本地编译：\"></a>本地编译：</h2><ol>\n<li><h3 id=\"准备工作：\"><a href=\"#准备工作：\" class=\"headerlink\" title=\"准备工作：\"></a>准备工作：</h3></li>\n<li><ul>\n<li><p>科学上网</p>\n</li>\n<li><p>Ubuntu TLS 20.04</p>\n</li>\n<li><p>支持OpenWrt的设备例如网件R6220, 斐讯K2P，小米3C, 极路由1S，联想new3等。</p>\n</li>\n<li><p>高性能X86软路由设备。</p>\n</li>\n</ul>\n</li>\n<li><h3 id=\"编译配置：\"><a href=\"#编译配置：\" class=\"headerlink\" title=\"编译配置：\"></a>编译配置：</h3><ul>\n<li><p>命令行输入: <code>sudo apt-get update</code> 然后输入 <code>sudo apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync</code></p>\n</li>\n<li><p>使用 <code>git clone https://github.com/coolsnowwolf/lede</code> 命令下载好源代码，然后 <code>cd lede</code> 进入目录</p>\n</li>\n</ul>\n</li>\n</ol>","more":"<ul>\n<li>命令行输入: <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./scripts/feeds update -a</span><br><span class=\"line\">./scripts/feeds install -a</span><br><span class=\"line\">make menuconfig (配置.config)</span><br></pre></td></tr></table></figure>\n</li>\n<li><code>make -j8 download V=s</code> 下载dl库（国内请尽量全局科学上网）</li>\n<li>输入 <code>make -j1 V=s</code> （-j1 后面是线程数。第一次编译推荐用单线程）即可开始编译你要的固件了。</li>\n<li>温馨提示： ​        首次编译固件时，不要大量安装插件，否则编译会容易报错，大部分报错有可能是依赖没有下载全面说导致的，或者是插件冲突，在加入插件时应当考虑设备Rom容量和Ram，加入大量插件会使编译出的固件包太大而无法刷入设备，Ram不够插件运行的等。</li>\n</ul>\n<ol>\n<li><h3 id=\"Github-Actions-云编译：\"><a href=\"#Github-Actions-云编译：\" class=\"headerlink\" title=\"Github Actions 云编译：\"></a>Github Actions 云编译：</h3><ul>\n<li><p>使用<a href=\"https://github.com/P3TERX\">P3TERX</a>的云编译脚本，点击Fork</p>\n</li>\n<li><p>脚本<a href=\"https://p3terx.com/archives/build-openwrt-with-github-actions.html\">文档</a>地址</p>\n</li>\n<li><p>自定义 feeds 配置文件</p>\n<p>   把 <code>feeds.conf.default</code> 文件放入仓库根目录即可，它会覆盖 Open­Wrt 源码目录下的相关文件。</p>\n</li>\n<li><p>如果没有.config配置文件可以使用SSH 连接到 Actions</p>\n<p>   通过 tmate 连接到 GitHub Ac­tions 虚拟服务器环境，可直接进行 <code>make menuconfig</code> 操作生成编译配置，或者任意的客制化操作。也就是说，你不需要再自己搭建编译环境了。这可能改变之前所有使用 GitHub Ac­tions 的编译 Open­Wrt 方式。</p>\n<ul>\n<li><p>在<code>Run Workflow</code>时把<code>SSH connection to Actions</code>的值改为<code>true</code>（或者也可以不修改，而是通过 <a href=\"https://p3terx.com/archives/github-actions-manual-trigger.html#toc_2\">webhook 方式</a>发送带有<code>ssh</code>触发关键词的请求。）</p>\n</li>\n<li><p>在触发工作流程后，在 Actions 日志页面等待执行到<code>SSH connection to Actions</code>步骤，会出现类似下面的信息：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">To connect to this session copy-n-paste the following into a terminal or browser:</span><br><span class=\"line\"></span><br><span class=\"line\">ssh Y26QeagDtsPXp2mT6me5cnMRd@nyc1.tmate.io</span><br><span class=\"line\"></span><br><span class=\"line\">https://tmate.io/t/Y26QeagDtsPXp2mT6me5cnMRd</span><br></pre></td></tr></table></figure></li>\n<li><p>复制 SSH 连接命令粘贴到终端内执行，或者复制链接在浏览器中打开使用网页终端。（网页终端可能会遇到黑屏的情况，按 <code>Ctrl</code>+<code>C</code> 即可）</p>\n</li>\n<li><p><code>cd openwrt &amp;&amp; make menuconfig</code></p>\n</li>\n<li><p>完成后按<code>Ctrl</code>+<code>D</code>组合键或执行<code>exit</code>命令退出，后续编译工作将自动进行。</p>\n</li>\n<li><p>**提示:**固件目录下有个<code>config.seed</code>或者<code>config.buildinfo</code>文件，如果你需要再次编译可以使用它。</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><h3 id=\"网件R6220配置：\"><a href=\"#网件R6220配置：\" class=\"headerlink\" title=\"网件R6220配置：\"></a>网件R6220配置：</h3><ul>\n<li><p>集成Hello world科学上网</p>\n</li>\n<li><p>Samba网络共享</p>\n</li>\n<li><p>miniDLAN</p>\n</li>\n<li><p>UPnP</p>\n</li>\n<li><p>动态DDNS</p>\n</li>\n<li><p>上网时间控制</p>\n</li>\n<li><p>FTP服务器</p>\n</li>\n<li><p>硬盘休眠</p>\n</li>\n<li><p>Turbo ACC 网络加速</p>\n</li>\n<li><p>USB储存设备挂载</p>\n<ul>\n<li><p>支持 USB1，USB2，USB3</p>\n</li>\n<li><p>支持exFAT，ext4，NTFS，VFAT(FAT32)</p>\n</li>\n<li><p>支持自动挂载</p>\n</li>\n<li><p>热插拔</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CONFIG_TARGET_ramips=y</span><br><span class=\"line\">CONFIG_TARGET_ramips_mt7621=y</span><br><span class=\"line\">CONFIG_TARGET_ramips_mt7621_DEVICE_netgear_r6220=y</span><br><span class=\"line\">CONFIG_PACKAGE_6in4=y</span><br><span class=\"line\">CONFIG_PACKAGE_SAMBA_MAX_DEBUG_LEVEL=-1</span><br><span class=\"line\">CONFIG_PACKAGE_badblocks=y</span><br><span class=\"line\">CONFIG_PACKAGE_bash=y</span><br><span class=\"line\">CONFIG_PACKAGE_boost=y</span><br><span class=\"line\">CONFIG_PACKAGE_boost-date_time=y</span><br><span class=\"line\">CONFIG_PACKAGE_boost-program_options=y</span><br><span class=\"line\">CONFIG_PACKAGE_boost-system=y</span><br><span class=\"line\"># CONFIG_PACKAGE_dns2socks is not set</span><br><span class=\"line\">CONFIG_PACKAGE_e2fsprogs=y</span><br><span class=\"line\">CONFIG_PACKAGE_fdisk=y</span><br><span class=\"line\">CONFIG_PACKAGE_hd-idle=y</span><br><span class=\"line\">CONFIG_PACKAGE_ip6tables=y</span><br><span class=\"line\">CONFIG_PACKAGE_ipt2socks=y</span><br><span class=\"line\">CONFIG_PACKAGE_ipv6helper=y</span><br><span class=\"line\">CONFIG_PACKAGE_kcptun-client=y</span><br><span class=\"line\">CONFIG_PACKAGE_kcptun-config=y</span><br><span class=\"line\">CONFIG_PACKAGE_kmod-crypto-crc32c=y</span><br><span class=\"line\">CONFIG_PACKAGE_kmod-fs-exfat=y</span><br><span class=\"line\">CONFIG_PACKAGE_kmod-fs-ext4=y</span><br><span class=\"line\">CONFIG_PACKAGE_kmod-fs-ntfs=y</span><br><span class=\"line\">CONFIG_PACKAGE_kmod-fs-vfat=y</span><br><span class=\"line\">CONFIG_PACKAGE_kmod-ipt-nat6=y</span><br><span class=\"line\">CONFIG_PACKAGE_kmod-iptunnel=y</span><br><span class=\"line\">CONFIG_PACKAGE_kmod-iptunnel4=y</span><br><span class=\"line\">CONFIG_PACKAGE_kmod-lib-crc16=y</span><br><span class=\"line\">CONFIG_PACKAGE_kmod-nf-nat6=y</span><br><span class=\"line\">CONFIG_PACKAGE_kmod-nls-cp437=y</span><br><span class=\"line\">CONFIG_PACKAGE_kmod-nls-iso8859-1=y</span><br><span class=\"line\">CONFIG_PACKAGE_kmod-nls-utf8=y</span><br><span class=\"line\">CONFIG_PACKAGE_kmod-scsi-core=y</span><br><span class=\"line\">CONFIG_PACKAGE_kmod-sit=y</span><br><span class=\"line\">CONFIG_PACKAGE_kmod-usb-ehci=y</span><br><span class=\"line\">CONFIG_PACKAGE_kmod-usb-ohci=y</span><br><span class=\"line\">CONFIG_PACKAGE_kmod-usb-storage=y</span><br><span class=\"line\">CONFIG_PACKAGE_kmod-usb-storage-extras=y</span><br><span class=\"line\">CONFIG_PACKAGE_kmod-usb-uhci=y</span><br><span class=\"line\">CONFIG_PACKAGE_kmod-usb2=y</span><br><span class=\"line\">CONFIG_PACKAGE_libblkid=y</span><br><span class=\"line\">CONFIG_PACKAGE_libbz2=y</span><br><span class=\"line\">CONFIG_PACKAGE_libcomerr=y</span><br><span class=\"line\">CONFIG_PACKAGE_libevdev=y</span><br><span class=\"line\">CONFIG_PACKAGE_libexif=y</span><br><span class=\"line\">CONFIG_PACKAGE_libext2fs=y</span><br><span class=\"line\">CONFIG_PACKAGE_libfdisk=y</span><br><span class=\"line\">CONFIG_PACKAGE_libffmpeg-audio-dec=y</span><br><span class=\"line\">CONFIG_PACKAGE_libflac=y</span><br><span class=\"line\">CONFIG_PACKAGE_libid3tag=y</span><br><span class=\"line\">CONFIG_PACKAGE_libjpeg-turbo=y</span><br><span class=\"line\">CONFIG_PACKAGE_libmaxminddb=y</span><br><span class=\"line\">CONFIG_PACKAGE_libmbedtls=y</span><br><span class=\"line\">CONFIG_PACKAGE_libncurses=y</span><br><span class=\"line\">CONFIG_PACKAGE_libogg=y</span><br><span class=\"line\">CONFIG_PACKAGE_libreadline=y</span><br><span class=\"line\">CONFIG_PACKAGE_libsmartcols=y</span><br><span class=\"line\">CONFIG_PACKAGE_libsqlite3=y</span><br><span class=\"line\">CONFIG_PACKAGE_libss=y</span><br><span class=\"line\">CONFIG_PACKAGE_libstdcpp=y</span><br><span class=\"line\">CONFIG_PACKAGE_libudev-zero=y</span><br><span class=\"line\">CONFIG_PACKAGE_libusb-1.0=y</span><br><span class=\"line\">CONFIG_PACKAGE_libuv=y</span><br><span class=\"line\">CONFIG_PACKAGE_libvorbis=y</span><br><span class=\"line\">CONFIG_PACKAGE_lua-cjson=y</span><br><span class=\"line\">CONFIG_PACKAGE_lua-maxminddb=y</span><br><span class=\"line\">CONFIG_PACKAGE_luasocket=y</span><br><span class=\"line\">CONFIG_PACKAGE_luci-app-hd-idle=y</span><br><span class=\"line\">CONFIG_PACKAGE_luci-app-minidlna=y</span><br><span class=\"line\">CONFIG_PACKAGE_luci-app-samba=y</span><br><span class=\"line\"># CONFIG_PACKAGE_luci-app-ssr-plus is not set</span><br><span class=\"line\"># CONFIG_PACKAGE_luci-app-unblockmusic is not set</span><br><span class=\"line\">CONFIG_PACKAGE_luci-app-vssr=y</span><br><span class=\"line\">CONFIG_PACKAGE_luci-app-vssr_INCLUDE_Kcptun=y</span><br><span class=\"line\">CONFIG_PACKAGE_luci-app-vssr_INCLUDE_ShadowsocksR_Libev_Server=y</span><br><span class=\"line\">CONFIG_PACKAGE_luci-app-vssr_INCLUDE_Trojan=y</span><br><span class=\"line\">CONFIG_PACKAGE_luci-app-vssr_INCLUDE_Xray=y</span><br><span class=\"line\">CONFIG_PACKAGE_luci-app-vssr_INCLUDE_Xray_plugin=y</span><br><span class=\"line\">CONFIG_PACKAGE_luci-i18n-hd-idle-zh-cn=y</span><br><span class=\"line\">CONFIG_PACKAGE_luci-i18n-minidlna-zh-cn=y</span><br><span class=\"line\">CONFIG_PACKAGE_luci-i18n-samba-zh-cn=y</span><br><span class=\"line\">CONFIG_PACKAGE_luci-i18n-vssr-zh-cn=y</span><br><span class=\"line\">CONFIG_PACKAGE_luci-proto-ipv6=y</span><br><span class=\"line\">CONFIG_PACKAGE_luci-theme-mcat=y</span><br><span class=\"line\"># CONFIG_PACKAGE_microsocks is not set</span><br><span class=\"line\">CONFIG_PACKAGE_minidlna=y</span><br><span class=\"line\">CONFIG_PACKAGE_odhcp6c=y</span><br><span class=\"line\">CONFIG_PACKAGE_odhcp6c_ext_cer_id=0</span><br><span class=\"line\">CONFIG_PACKAGE_odhcpd-ipv6only=y</span><br><span class=\"line\">CONFIG_PACKAGE_odhcpd_ipv6only_ext_cer_id=0</span><br><span class=\"line\"># CONFIG_PACKAGE_resolveip is not set</span><br><span class=\"line\">CONFIG_PACKAGE_samba36-server=y</span><br><span class=\"line\">CONFIG_PACKAGE_shadowsocks-libev-ss-local=y</span><br><span class=\"line\">CONFIG_PACKAGE_shadowsocks-libev-ss-redir=y</span><br><span class=\"line\">CONFIG_PACKAGE_shadowsocksr-libev-ssr-server=y</span><br><span class=\"line\">CONFIG_PACKAGE_simple-obfs=y</span><br><span class=\"line\"># CONFIG_PACKAGE_tcping is not set</span><br><span class=\"line\">CONFIG_PACKAGE_terminfo=y</span><br><span class=\"line\">CONFIG_PACKAGE_trojan=y</span><br><span class=\"line\">CONFIG_PACKAGE_usbids=y</span><br><span class=\"line\">CONFIG_PACKAGE_usbutils=y</span><br><span class=\"line\">CONFIG_PACKAGE_xray-core=y</span><br><span class=\"line\">CONFIG_PACKAGE_xray-plugin=y</span><br><span class=\"line\">CONFIG_SQLITE3_DYNAMIC_EXTENSIONS=y</span><br><span class=\"line\">CONFIG_SQLITE3_FTS3=y</span><br><span class=\"line\">CONFIG_SQLITE3_FTS4=y</span><br><span class=\"line\">CONFIG_SQLITE3_FTS5=y</span><br><span class=\"line\">CONFIG_SQLITE3_JSON1=y</span><br><span class=\"line\">CONFIG_SQLITE3_RTREE=y</span><br><span class=\"line\">CONFIG_boost-compile-visibility-hidden=y</span><br><span class=\"line\">CONFIG_boost-runtime-shared=y</span><br><span class=\"line\">CONFIG_boost-static-and-shared-libs=y</span><br><span class=\"line\">CONFIG_boost-variant-release=y</span><br></pre></td></tr></table></figure>\n\n\n\n<p>​     </p>"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2022-09-07T03:31:07.643Z","updated":"2022-01-07T09:28:54.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7rscd240009bwuz9ui18i32","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"abbrlink":4,"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"hexo文章内嵌HTML页面实例","date":"2022-01-11T20:08:39.000Z","_content":"\n\n\n###### 使用iframe标签内嵌HTML页面。\n\n\n\n<iframe src=\"https://weyc.github.io/live2d-widget/\" width=\"100%\" height=\"600\" frameborder=\"0\"></iframe>\n\n\n\n <!-- more -->\n\n","source":"_posts/hexo文章内嵌HTML页面实例.md","raw":"---\ntitle: hexo文章内嵌HTML页面实例\ndate: 2022-01-12 04:08:39\ntags: [\"HTML\",\"学习\"]\ncategories: [\"HTML\",\"学习\"]\n---\n\n\n\n###### 使用iframe标签内嵌HTML页面。\n\n\n\n<iframe src=\"https://weyc.github.io/live2d-widget/\" width=\"100%\" height=\"600\" frameborder=\"0\"></iframe>\n\n\n\n <!-- more -->\n\n","slug":"hexo文章内嵌HTML页面实例","published":1,"updated":"2022-01-11T20:09:27.650Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7rscd26000cbwuzccrbgquw","content":"<h6 id=\"使用iframe标签内嵌HTML页面。\"><a href=\"#使用iframe标签内嵌HTML页面。\" class=\"headerlink\" title=\"使用iframe标签内嵌HTML页面。\"></a>使用iframe标签内嵌HTML页面。</h6><iframe src=\"https://weyc.github.io/live2d-widget/\" width=\"100%\" height=\"600\" frameborder=\"0\"></iframe>\n\n\n\n <span id=\"more\"></span>\n\n","site":{"data":{}},"abbrlink":4,"excerpt":"<h6 id=\"使用iframe标签内嵌HTML页面。\"><a href=\"#使用iframe标签内嵌HTML页面。\" class=\"headerlink\" title=\"使用iframe标签内嵌HTML页面。\"></a>使用iframe标签内嵌HTML页面。</h6><iframe src=\"https://weyc.github.io/live2d-widget/\" width=\"100%\" height=\"600\" frameborder=\"0\"></iframe>","more":""},{"title":"hexo安装教程","date":"2022-01-07T11:04:08.000Z","_content":"\n\n\n## 前言：\n\n&ensp;&ensp;&ensp;&ensp;这是我折腾Hexo的记录记录需要用到的知识。\n\n------\n\n\n\n1. 本地运行环境配置\n\n   - Node.Js 10+\n\n     1. 安装hexo-cli  $ npm install -g hexo-cli （ -g 全局安装 ）\n\n<!--more-->\n\n   - Windows下安装Git程序\n\n   - [GitHub](www.github.com)创建代码仓库 \n\n     1. 新建的仓库 Repository name 名称要和账号的名称一致 后面加上 github.io\n     \n     {% asset_img image-20220107192509368.png 新建的仓库image %}\n     \n     2. 选择 Pblic （公开）\n\n\n\n\n\n\n\n\n------\n\n## 开始：\n\n2. 在Blog目录下 右键打开 Git Bash Here\n\n3. 输入命令$ hexo init初始化 将自动下载hexo的文件\n```\n     ├── _config.yml\n     ├── package.json\n     ├── scaffolds\n     ├── source\n     |   ├── _drafts\n     |   └── _posts\n     └── themes\n```\n\n\n\n4. 输入命令$ npm install 下载相关依赖\n\n5. cd到Blog目录下安装hexo-deployer-git（ 重要！用于发布到Github上 ）\n\n   ```$ npm install hexo-deployer-git --save```\n\n5. 输入命令$ hexo generate （ 简写hexo g ）生成静态文件\n\n6. 输入命令$ hexo server（ 简写hexo s ）本地运行查看效果\n\n7. 配置 _config.yml 文件\n\n   - 在最后的deploy代码处为\n   \n     \\# Deployment\n   \n     \\## Docs: https://hexo.io/docs/one-command-deployment\n   \n     ```\n     deploy:\n     \ttype: git\n      \t\n      \trepository: https://github.com/WeYC/WeYC.github.io.git  #代码仓库地址\n      \t\n      \tbranch: main #分支\n     ```\n     \n      \t\n   \n------\n\n## Git基本使用\n\n\n\n- 配置Git\n\n  首先在本地创建`ssh key；`\n\n  ```$ ssh-keygen -t rsa -C \"your_email@youremail.com\"```\n\n  \n\n- 后面的`your_email@youremail.com`改为你在github上注册的邮箱，之后会要求确认路径和输入密码，我们这使用默认的一路回车就行。成功的话会在`~/`下生成`.ssh`文件夹，进去，打开`id_rsa.pub`，复制里面的`key`。\n\n- 回到github上，进入 Account Settings（账户配置），左边选择SSH Keys，Add SSH Key,title随便填，粘贴在你电脑上生成的key。\n  \n  \n  \n- 为了验证是否成功，在git bash下输入：\n\n  ```$ ssh -T git@github.com```\n\n\n\n- 如果是第一次的会提示是否continue，输入yes就会看到：You've successfully authenticated, but GitHub does not provide shell access 。这就表示已成功连上github。\n\n- 接下来我们要做的就是把本地仓库传到github上去，在此之前还需要设置username和email，因为github每次commit都会记录他们。\n\n  ``` \n  $ git config --global user.name \"your name\" \n  $ git config --global user.email \"your_email@youremail.com\" \n  ```\n\n\n\n8. 输入命令$ hexo deploy（简写hexo d）推送到代码仓库\n\n\n\n","source":"_posts/hexo安装教程.md","raw":"---\ntitle: hexo安装教程\ndate: 2022-01-07 19:04:08\ntags: [\"学习\",\"hexo\"]\ncategories: [\"hexo\"]\n---\n\n\n\n## 前言：\n\n&ensp;&ensp;&ensp;&ensp;这是我折腾Hexo的记录记录需要用到的知识。\n\n------\n\n\n\n1. 本地运行环境配置\n\n   - Node.Js 10+\n\n     1. 安装hexo-cli  $ npm install -g hexo-cli （ -g 全局安装 ）\n\n<!--more-->\n\n   - Windows下安装Git程序\n\n   - [GitHub](www.github.com)创建代码仓库 \n\n     1. 新建的仓库 Repository name 名称要和账号的名称一致 后面加上 github.io\n     \n     {% asset_img image-20220107192509368.png 新建的仓库image %}\n     \n     2. 选择 Pblic （公开）\n\n\n\n\n\n\n\n\n------\n\n## 开始：\n\n2. 在Blog目录下 右键打开 Git Bash Here\n\n3. 输入命令$ hexo init初始化 将自动下载hexo的文件\n```\n     ├── _config.yml\n     ├── package.json\n     ├── scaffolds\n     ├── source\n     |   ├── _drafts\n     |   └── _posts\n     └── themes\n```\n\n\n\n4. 输入命令$ npm install 下载相关依赖\n\n5. cd到Blog目录下安装hexo-deployer-git（ 重要！用于发布到Github上 ）\n\n   ```$ npm install hexo-deployer-git --save```\n\n5. 输入命令$ hexo generate （ 简写hexo g ）生成静态文件\n\n6. 输入命令$ hexo server（ 简写hexo s ）本地运行查看效果\n\n7. 配置 _config.yml 文件\n\n   - 在最后的deploy代码处为\n   \n     \\# Deployment\n   \n     \\## Docs: https://hexo.io/docs/one-command-deployment\n   \n     ```\n     deploy:\n     \ttype: git\n      \t\n      \trepository: https://github.com/WeYC/WeYC.github.io.git  #代码仓库地址\n      \t\n      \tbranch: main #分支\n     ```\n     \n      \t\n   \n------\n\n## Git基本使用\n\n\n\n- 配置Git\n\n  首先在本地创建`ssh key；`\n\n  ```$ ssh-keygen -t rsa -C \"your_email@youremail.com\"```\n\n  \n\n- 后面的`your_email@youremail.com`改为你在github上注册的邮箱，之后会要求确认路径和输入密码，我们这使用默认的一路回车就行。成功的话会在`~/`下生成`.ssh`文件夹，进去，打开`id_rsa.pub`，复制里面的`key`。\n\n- 回到github上，进入 Account Settings（账户配置），左边选择SSH Keys，Add SSH Key,title随便填，粘贴在你电脑上生成的key。\n  \n  \n  \n- 为了验证是否成功，在git bash下输入：\n\n  ```$ ssh -T git@github.com```\n\n\n\n- 如果是第一次的会提示是否continue，输入yes就会看到：You've successfully authenticated, but GitHub does not provide shell access 。这就表示已成功连上github。\n\n- 接下来我们要做的就是把本地仓库传到github上去，在此之前还需要设置username和email，因为github每次commit都会记录他们。\n\n  ``` \n  $ git config --global user.name \"your name\" \n  $ git config --global user.email \"your_email@youremail.com\" \n  ```\n\n\n\n8. 输入命令$ hexo deploy（简写hexo d）推送到代码仓库\n\n\n\n","slug":"hexo安装教程","published":1,"updated":"2022-01-09T15:23:03.313Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7rscd27000dbwuze2rf2nlj","content":"<h2 id=\"前言：\"><a href=\"#前言：\" class=\"headerlink\" title=\"前言：\"></a>前言：</h2><p>&ensp;&ensp;&ensp;&ensp;这是我折腾Hexo的记录记录需要用到的知识。</p>\n<hr>\n<ol>\n<li><p>本地运行环境配置</p>\n<ul>\n<li><p>Node.Js 10+</p>\n<ol>\n<li>安装hexo-cli  $ npm install -g hexo-cli （ -g 全局安装 ）</li>\n</ol>\n</li>\n</ul>\n</li>\n</ol>\n<span id=\"more\"></span>\n\n<ul>\n<li><p>Windows下安装Git程序</p>\n</li>\n<li><p><a href=\"www.github.com\">GitHub</a>创建代码仓库 </p>\n<ol>\n<li>新建的仓库 Repository name 名称要和账号的名称一致 后面加上 github.io</li>\n</ol>\n<img data-src=\"/posts/4/hexo%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/image-20220107192509368.png\" class=\"\" title=\"新建的仓库image\">\n\n<ol start=\"2\">\n<li>选择 Pblic （公开）</li>\n</ol>\n</li>\n</ul>\n<hr>\n<h2 id=\"开始：\"><a href=\"#开始：\" class=\"headerlink\" title=\"开始：\"></a>开始：</h2><ol start=\"2\">\n<li><p>在Blog目录下 右键打开 Git Bash Here</p>\n</li>\n<li><p>输入命令$ hexo init初始化 将自动下载hexo的文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">├── _config.yml</span><br><span class=\"line\">├── package.json</span><br><span class=\"line\">├── scaffolds</span><br><span class=\"line\">├── source</span><br><span class=\"line\">|   ├── _drafts</span><br><span class=\"line\">|   └── _posts</span><br><span class=\"line\">└── themes</span><br></pre></td></tr></table></figure></li>\n</ol>\n<ol start=\"4\">\n<li><p>输入命令$ npm install 下载相关依赖</p>\n</li>\n<li><p>cd到Blog目录下安装hexo-deployer-git（ 重要！用于发布到Github上 ）</p>\n<p><code>$ npm install hexo-deployer-git --save</code></p>\n</li>\n<li><p>输入命令$ hexo generate （ 简写hexo g ）生成静态文件</p>\n</li>\n<li><p>输入命令$ hexo server（ 简写hexo s ）本地运行查看效果</p>\n</li>\n<li><p>配置 _config.yml 文件</p>\n<ul>\n<li><p>在最后的deploy代码处为</p>\n<p># Deployment</p>\n<p>## Docs: <a href=\"https://hexo.io/docs/one-command-deployment\">https://hexo.io/docs/one-command-deployment</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">\ttype: git</span><br><span class=\"line\"> \t</span><br><span class=\"line\"> \trepository: https://github.com/WeYC/WeYC.github.io.git  #代码仓库地址</span><br><span class=\"line\"> \t</span><br><span class=\"line\"> \tbranch: main #分支</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h2 id=\"Git基本使用\"><a href=\"#Git基本使用\" class=\"headerlink\" title=\"Git基本使用\"></a>Git基本使用</h2><ul>\n<li><p>配置Git</p>\n<p>首先在本地创建<code>ssh key；</code></p>\n<p><code>$ ssh-keygen -t rsa -C &quot;your_email@youremail.com&quot;</code></p>\n</li>\n<li><p>后面的<code>your_email@youremail.com</code>改为你在github上注册的邮箱，之后会要求确认路径和输入密码，我们这使用默认的一路回车就行。成功的话会在<code>~/</code>下生成<code>.ssh</code>文件夹，进去，打开<code>id_rsa.pub</code>，复制里面的<code>key</code>。</p>\n</li>\n<li><p>回到github上，进入 Account Settings（账户配置），左边选择SSH Keys，Add SSH Key,title随便填，粘贴在你电脑上生成的key。</p>\n</li>\n<li><p>为了验证是否成功，在git bash下输入：</p>\n<p><code>$ ssh -T git@github.com</code></p>\n</li>\n</ul>\n<ul>\n<li><p>如果是第一次的会提示是否continue，输入yes就会看到：You’ve successfully authenticated, but GitHub does not provide shell access 。这就表示已成功连上github。</p>\n</li>\n<li><p>接下来我们要做的就是把本地仓库传到github上去，在此之前还需要设置username和email，因为github每次commit都会记录他们。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git config --global user.name &quot;your name&quot; </span><br><span class=\"line\">$ git config --global user.email &quot;your_email@youremail.com&quot; </span><br></pre></td></tr></table></figure></li>\n</ul>\n<ol start=\"8\">\n<li>输入命令$ hexo deploy（简写hexo d）推送到代码仓库</li>\n</ol>\n","site":{"data":{}},"abbrlink":4,"excerpt":"<h2 id=\"前言：\"><a href=\"#前言：\" class=\"headerlink\" title=\"前言：\"></a>前言：</h2><p>&ensp;&ensp;&ensp;&ensp;这是我折腾Hexo的记录记录需要用到的知识。</p>\n<hr>\n<ol>\n<li><p>本地运行环境配置</p>\n<ul>\n<li><p>Node.Js 10+</p>\n<ol>\n<li>安装hexo-cli  $ npm install -g hexo-cli （ -g 全局安装 ）</li>\n</ol>\n</li>\n</ul>\n</li>\n</ol>","more":"<ul>\n<li><p>Windows下安装Git程序</p>\n</li>\n<li><p><a href=\"www.github.com\">GitHub</a>创建代码仓库 </p>\n<ol>\n<li>新建的仓库 Repository name 名称要和账号的名称一致 后面加上 github.io</li>\n</ol>\n<img data-src=\"/posts/4/hexo%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/image-20220107192509368.png\" class=\"\" title=\"新建的仓库image\">\n\n<ol start=\"2\">\n<li>选择 Pblic （公开）</li>\n</ol>\n</li>\n</ul>\n<hr>\n<h2 id=\"开始：\"><a href=\"#开始：\" class=\"headerlink\" title=\"开始：\"></a>开始：</h2><ol start=\"2\">\n<li><p>在Blog目录下 右键打开 Git Bash Here</p>\n</li>\n<li><p>输入命令$ hexo init初始化 将自动下载hexo的文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">├── _config.yml</span><br><span class=\"line\">├── package.json</span><br><span class=\"line\">├── scaffolds</span><br><span class=\"line\">├── source</span><br><span class=\"line\">|   ├── _drafts</span><br><span class=\"line\">|   └── _posts</span><br><span class=\"line\">└── themes</span><br></pre></td></tr></table></figure></li>\n</ol>\n<ol start=\"4\">\n<li><p>输入命令$ npm install 下载相关依赖</p>\n</li>\n<li><p>cd到Blog目录下安装hexo-deployer-git（ 重要！用于发布到Github上 ）</p>\n<p><code>$ npm install hexo-deployer-git --save</code></p>\n</li>\n<li><p>输入命令$ hexo generate （ 简写hexo g ）生成静态文件</p>\n</li>\n<li><p>输入命令$ hexo server（ 简写hexo s ）本地运行查看效果</p>\n</li>\n<li><p>配置 _config.yml 文件</p>\n<ul>\n<li><p>在最后的deploy代码处为</p>\n<p># Deployment</p>\n<p>## Docs: <a href=\"https://hexo.io/docs/one-command-deployment\">https://hexo.io/docs/one-command-deployment</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">\ttype: git</span><br><span class=\"line\"> \t</span><br><span class=\"line\"> \trepository: https://github.com/WeYC/WeYC.github.io.git  #代码仓库地址</span><br><span class=\"line\"> \t</span><br><span class=\"line\"> \tbranch: main #分支</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h2 id=\"Git基本使用\"><a href=\"#Git基本使用\" class=\"headerlink\" title=\"Git基本使用\"></a>Git基本使用</h2><ul>\n<li><p>配置Git</p>\n<p>首先在本地创建<code>ssh key；</code></p>\n<p><code>$ ssh-keygen -t rsa -C &quot;your_email@youremail.com&quot;</code></p>\n</li>\n<li><p>后面的<code>your_email@youremail.com</code>改为你在github上注册的邮箱，之后会要求确认路径和输入密码，我们这使用默认的一路回车就行。成功的话会在<code>~/</code>下生成<code>.ssh</code>文件夹，进去，打开<code>id_rsa.pub</code>，复制里面的<code>key</code>。</p>\n</li>\n<li><p>回到github上，进入 Account Settings（账户配置），左边选择SSH Keys，Add SSH Key,title随便填，粘贴在你电脑上生成的key。</p>\n</li>\n<li><p>为了验证是否成功，在git bash下输入：</p>\n<p><code>$ ssh -T git@github.com</code></p>\n</li>\n</ul>\n<ul>\n<li><p>如果是第一次的会提示是否continue，输入yes就会看到：You’ve successfully authenticated, but GitHub does not provide shell access 。这就表示已成功连上github。</p>\n</li>\n<li><p>接下来我们要做的就是把本地仓库传到github上去，在此之前还需要设置username和email，因为github每次commit都会记录他们。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git config --global user.name &quot;your name&quot; </span><br><span class=\"line\">$ git config --global user.email &quot;your_email@youremail.com&quot; </span><br></pre></td></tr></table></figure></li>\n</ul>\n<ol start=\"8\">\n<li>输入命令$ hexo deploy（简写hexo d）推送到代码仓库</li>\n</ol>"},{"title":"hexo笔记","date":"2022-01-08T15:15:58.000Z","_content":"\n##  前言：\n\n​\t\tHexo的使用笔记\n\n## 基本配置：\n\n​\t\t配置文件_config.yml\n\n## 写作：\n\n- 使用```<!--more-->```截取文章内容使在首页不完全显示。\n\n- 启用资源文件夹，打开后每新建一篇文章都会自动创建对应的文件夹\n  ```\n   _config.yml\n  post_asset_folder: true\n  ```\n\n​\t\t相对路径引用的标签插件\n\n```\n{% asset_path slug %}\n{% asset_img slug [title] %}\n{% asset_link slug [title] %}\n```\n\n正确的引用图片方式是使用下列的标签插件而不是 markdown ：\n\n```\n{% asset_img example.jpg This is an example image %}\n```\n\n\n\n## Hexo-Themes-Next主题：\n\n   - 配置：\n\n      1. cd 到 Blog目录下的 themes，执行 `git clone https://github.com/iissnan/hexo-theme-next themes/next `下载主题文件\n\n      2. 修改_config.yml里的themes字段 `theme: next`\n\n      3. 验证主题一次输入以下命令：\n\n   ​\t\t`hexo clean`清除已经生成的静态文件\n\n   ​\t\t`hexo g` 编译生成静态文件\n\n   ​\t\t`hexo s`部署到本地服务器，在浏览器输入http://localhost:4000打开页面\n\n   ​\t\t`hexo d`上传到Github\n\n\n## 美化主题：\n   1. 移除底部的强力驱动：\n\n      ​\t\t_config.yml文件`footer`字段把 `powered:  true`改为`false`。 \n      \n      ​\t\t或\n      \n      ​\t\t打开`Blog/themes\\next\\layout\\_partials\\footer.swig`文件，下拉到底部注释一下代码：\n\n   ```\n    <!--\n    {%- if theme.footer.powered %}\n      <div class=\"powered-by\">\n        {%- set next_site = 'https://theme-next.org' %}\n        {%- if theme.scheme !== 'Gemini' %}\n          {%- set next_site = 'https://' + theme.scheme | lower + '.theme-next.org' %}\n        {%- endif %}\n        {{- __('footer.powered', next_url('https://hexo.io', 'Hexo', {class: 'theme-link'}) + ' & ' + next_url(next_site, 'NexT.' + theme.scheme, {class: 'theme-link'})) }}\n      </div>\n    {%- endif %}\n    -->\n   ```\n\n   2. 添加网站已运行时间：\n\n```javascript\n<!-- 网站运行时间的设置 -->\n<span id=\"timeDate\">载入天数...</span>\n<span id=\"times\">载入时分秒...</span>\n<script>\n  var now = new Date();\n  function createtime() {\n      var grt= new Date(\"01/01/2022 00:00:00\");//此处修改你的建站时间或者网站上线时间\n      now.setTime(now.getTime()+250);\n      days = (now - grt ) / 1000 / 60 / 60 / 24; dnum = Math.floor(days);\n      hours = (now - grt ) / 1000 / 60 / 60 - (24 * dnum); hnum = Math.floor(hours);\n      if(String(hnum).length ==1 ){hnum = \"0\" + hnum;} minutes = (now - grt ) / 1000 /60 - (24 * 60 * dnum) - (60 * hnum);\n      mnum = Math.floor(minutes); if(String(mnum).length ==1 ){mnum = \"0\" + mnum;}\n      seconds = (now - grt ) / 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum);\n      snum = Math.round(seconds); if(String(snum).length ==1 ){snum = \"0\" + snum;}\n      document.getElementById(\"timeDate\").innerHTML = \"本站已安全运行 \"+dnum+\" 天 \";\n      document.getElementById(\"times\").innerHTML = hnum + \" 小时 \" + mnum + \" 分 \" + snum + \" 秒\";\n  }\n  setInterval(\"createtime()\",250);\n</script>\n```\n   3. 修改侧边栏和首页文章透明（已放弃）：\n\n         1. 第一种方式，直接改。\n\n         2. 侧边栏透明 1`themes\\next\\source\\css\\_schemes\\Pisces\\_layout.styl`\n\n          ```stylus\n          .header-inner {\n            +++opacity: 0.8;\n            background: var(--content-bg-color);\n            border-radius: $border-radius-inner;\n            box-shadow: $box-shadow-inner;\n            overflow: hidden;\n            padding: 0;\n            position: absolute;\n            top: 0;\n            width: $sidebar-desktop;\n          \n            +desktop-large() {\n              width: $sidebar-desktop;\n            }\n          \n            +tablet-mobile() {\n              border-radius: initial;\n              position: relative;\n              width: auto;\n            }\n          }\n          ```\n\n         3. 侧边栏透 2`themes\\next\\source\\css\\_schemes\\Pisces\\_sidebar.styl`\n\n          ```less\n          .sidebar {\n            background: var(--body-bg-color);\n            box-shadow: none;\n            margin-top: 100%;\n            position: static;\n            width: $sidebar-desktop;\n            +++opacity: 0.8;\n            +tablet-mobile() {\n              display: none;\n            }\n          }\n          ```\n\n          \n\n         4. 文章透明 `themes\\next\\source\\css\\_schemes\\Gemini\\index.styl`\n\n          ```stylus\n          // Post blocks.\n          .content-wrap {\n            +++ opacity: 0.8;\n            background: initial;\n            box-shadow: initial;\n            padding: initial;\n          }\n          ```\n\n          \n\n         5. 第二种方式，在`themes\\next\\source\\css\\_variables\\base.styl`添加全局变量。\n\n      ```stylus\n      // Colors\n      // colors for use across theme.\n      // --------------------------------------------------\n      $whitesmoke   = #f5f5f5;\n      $gainsboro    = #eee;\n      $grey-lighter = #ddd;\n      $grey-light   = #ccc;\n      $grey         = #bbb;\n      $grey-dark    = #999;\n      $grey-dim     = #666;\n      $black-light  = #555;\n      $black-dim    = #333;\n      $black-deep   = #444;\n      $red          = #ff2a2a;\n      $blue-bright  = #87daff;\n      $blue         = #0684bd;\n      $blue-deep    = #262a30;\n      $orange       = #fc6423;\n      //透明\n      +++$opacity = 0.8\n      ```\n\n       **注意：**最后按照第一种的方式在.styl文件里把`opacity = 0.8`改为`$opacity = 0.8`\n\n      搜索框存在Bug，归档也闪烁的迹象。\n\n   4. ## 文章添加来必力评论：\n\n         1. 前往 [来必力](https://livere.com/) 官网注册账号\n         2. 并按要求填写信息获取livere_uid即可\n         \n   5. ## 博客副标题改成今日诗词：\n\n         1. 前往 [今日诗词](https://www.jinrishici.com/) 官网获取api\n\n         2. 将获取到的代码放入到`themes\\next\\layout\\_partials\\header\\brand.swig`如下\n\n            ```\n            {%- if subtitle %}\n                  <p +++id=\"jinrishici-sentence\" class=\"site-subtitle\" itemprop=\"description\">{{ subtitle }}</p>\n                  <!-- <span id=\"jinrishici-sentence\">正在加载今日诗词....</span> -->\n                  +++<script src=\"https://sdk.jinrishici.com/v2/browser/jinrishici.js\" charset=\"utf-8\"></script>\n                {%- endif %}\n            ```\n\n   6. \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/hexo笔记.md","raw":"---\ntitle: hexo笔记\ndate: 2022-01-08 23:15:58\ntags: [\"学习\",\"hexo\"]\ncategories: [\"hexo\"]\n---\n\n##  前言：\n\n​\t\tHexo的使用笔记\n\n## 基本配置：\n\n​\t\t配置文件_config.yml\n\n## 写作：\n\n- 使用```<!--more-->```截取文章内容使在首页不完全显示。\n\n- 启用资源文件夹，打开后每新建一篇文章都会自动创建对应的文件夹\n  ```\n   _config.yml\n  post_asset_folder: true\n  ```\n\n​\t\t相对路径引用的标签插件\n\n```\n{% asset_path slug %}\n{% asset_img slug [title] %}\n{% asset_link slug [title] %}\n```\n\n正确的引用图片方式是使用下列的标签插件而不是 markdown ：\n\n```\n{% asset_img example.jpg This is an example image %}\n```\n\n\n\n## Hexo-Themes-Next主题：\n\n   - 配置：\n\n      1. cd 到 Blog目录下的 themes，执行 `git clone https://github.com/iissnan/hexo-theme-next themes/next `下载主题文件\n\n      2. 修改_config.yml里的themes字段 `theme: next`\n\n      3. 验证主题一次输入以下命令：\n\n   ​\t\t`hexo clean`清除已经生成的静态文件\n\n   ​\t\t`hexo g` 编译生成静态文件\n\n   ​\t\t`hexo s`部署到本地服务器，在浏览器输入http://localhost:4000打开页面\n\n   ​\t\t`hexo d`上传到Github\n\n\n## 美化主题：\n   1. 移除底部的强力驱动：\n\n      ​\t\t_config.yml文件`footer`字段把 `powered:  true`改为`false`。 \n      \n      ​\t\t或\n      \n      ​\t\t打开`Blog/themes\\next\\layout\\_partials\\footer.swig`文件，下拉到底部注释一下代码：\n\n   ```\n    <!--\n    {%- if theme.footer.powered %}\n      <div class=\"powered-by\">\n        {%- set next_site = 'https://theme-next.org' %}\n        {%- if theme.scheme !== 'Gemini' %}\n          {%- set next_site = 'https://' + theme.scheme | lower + '.theme-next.org' %}\n        {%- endif %}\n        {{- __('footer.powered', next_url('https://hexo.io', 'Hexo', {class: 'theme-link'}) + ' & ' + next_url(next_site, 'NexT.' + theme.scheme, {class: 'theme-link'})) }}\n      </div>\n    {%- endif %}\n    -->\n   ```\n\n   2. 添加网站已运行时间：\n\n```javascript\n<!-- 网站运行时间的设置 -->\n<span id=\"timeDate\">载入天数...</span>\n<span id=\"times\">载入时分秒...</span>\n<script>\n  var now = new Date();\n  function createtime() {\n      var grt= new Date(\"01/01/2022 00:00:00\");//此处修改你的建站时间或者网站上线时间\n      now.setTime(now.getTime()+250);\n      days = (now - grt ) / 1000 / 60 / 60 / 24; dnum = Math.floor(days);\n      hours = (now - grt ) / 1000 / 60 / 60 - (24 * dnum); hnum = Math.floor(hours);\n      if(String(hnum).length ==1 ){hnum = \"0\" + hnum;} minutes = (now - grt ) / 1000 /60 - (24 * 60 * dnum) - (60 * hnum);\n      mnum = Math.floor(minutes); if(String(mnum).length ==1 ){mnum = \"0\" + mnum;}\n      seconds = (now - grt ) / 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum);\n      snum = Math.round(seconds); if(String(snum).length ==1 ){snum = \"0\" + snum;}\n      document.getElementById(\"timeDate\").innerHTML = \"本站已安全运行 \"+dnum+\" 天 \";\n      document.getElementById(\"times\").innerHTML = hnum + \" 小时 \" + mnum + \" 分 \" + snum + \" 秒\";\n  }\n  setInterval(\"createtime()\",250);\n</script>\n```\n   3. 修改侧边栏和首页文章透明（已放弃）：\n\n         1. 第一种方式，直接改。\n\n         2. 侧边栏透明 1`themes\\next\\source\\css\\_schemes\\Pisces\\_layout.styl`\n\n          ```stylus\n          .header-inner {\n            +++opacity: 0.8;\n            background: var(--content-bg-color);\n            border-radius: $border-radius-inner;\n            box-shadow: $box-shadow-inner;\n            overflow: hidden;\n            padding: 0;\n            position: absolute;\n            top: 0;\n            width: $sidebar-desktop;\n          \n            +desktop-large() {\n              width: $sidebar-desktop;\n            }\n          \n            +tablet-mobile() {\n              border-radius: initial;\n              position: relative;\n              width: auto;\n            }\n          }\n          ```\n\n         3. 侧边栏透 2`themes\\next\\source\\css\\_schemes\\Pisces\\_sidebar.styl`\n\n          ```less\n          .sidebar {\n            background: var(--body-bg-color);\n            box-shadow: none;\n            margin-top: 100%;\n            position: static;\n            width: $sidebar-desktop;\n            +++opacity: 0.8;\n            +tablet-mobile() {\n              display: none;\n            }\n          }\n          ```\n\n          \n\n         4. 文章透明 `themes\\next\\source\\css\\_schemes\\Gemini\\index.styl`\n\n          ```stylus\n          // Post blocks.\n          .content-wrap {\n            +++ opacity: 0.8;\n            background: initial;\n            box-shadow: initial;\n            padding: initial;\n          }\n          ```\n\n          \n\n         5. 第二种方式，在`themes\\next\\source\\css\\_variables\\base.styl`添加全局变量。\n\n      ```stylus\n      // Colors\n      // colors for use across theme.\n      // --------------------------------------------------\n      $whitesmoke   = #f5f5f5;\n      $gainsboro    = #eee;\n      $grey-lighter = #ddd;\n      $grey-light   = #ccc;\n      $grey         = #bbb;\n      $grey-dark    = #999;\n      $grey-dim     = #666;\n      $black-light  = #555;\n      $black-dim    = #333;\n      $black-deep   = #444;\n      $red          = #ff2a2a;\n      $blue-bright  = #87daff;\n      $blue         = #0684bd;\n      $blue-deep    = #262a30;\n      $orange       = #fc6423;\n      //透明\n      +++$opacity = 0.8\n      ```\n\n       **注意：**最后按照第一种的方式在.styl文件里把`opacity = 0.8`改为`$opacity = 0.8`\n\n      搜索框存在Bug，归档也闪烁的迹象。\n\n   4. ## 文章添加来必力评论：\n\n         1. 前往 [来必力](https://livere.com/) 官网注册账号\n         2. 并按要求填写信息获取livere_uid即可\n         \n   5. ## 博客副标题改成今日诗词：\n\n         1. 前往 [今日诗词](https://www.jinrishici.com/) 官网获取api\n\n         2. 将获取到的代码放入到`themes\\next\\layout\\_partials\\header\\brand.swig`如下\n\n            ```\n            {%- if subtitle %}\n                  <p +++id=\"jinrishici-sentence\" class=\"site-subtitle\" itemprop=\"description\">{{ subtitle }}</p>\n                  <!-- <span id=\"jinrishici-sentence\">正在加载今日诗词....</span> -->\n                  +++<script src=\"https://sdk.jinrishici.com/v2/browser/jinrishici.js\" charset=\"utf-8\"></script>\n                {%- endif %}\n            ```\n\n   6. \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"hexo笔记","published":1,"updated":"2022-01-10T04:53:31.699Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7rscd29000hbwuzeovq6wr9","content":"<h2 id=\"前言：\"><a href=\"#前言：\" class=\"headerlink\" title=\"前言：\"></a>前言：</h2><p>​        Hexo的使用笔记</p>\n<h2 id=\"基本配置：\"><a href=\"#基本配置：\" class=\"headerlink\" title=\"基本配置：\"></a>基本配置：</h2><p>​        配置文件_config.yml</p>\n<h2 id=\"写作：\"><a href=\"#写作：\" class=\"headerlink\" title=\"写作：\"></a>写作：</h2><ul>\n<li><p>使用<code>&lt;!--more--&gt;</code>截取文章内容使在首页不完全显示。</p>\n</li>\n<li><p>启用资源文件夹，打开后每新建一篇文章都会自动创建对应的文件夹</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> _config.yml</span><br><span class=\"line\">post_asset_folder: true</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>​        相对路径引用的标签插件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% asset_path slug %&#125;</span><br><span class=\"line\">&#123;% asset_img slug [title] %&#125;</span><br><span class=\"line\">&#123;% asset_link slug [title] %&#125;</span><br></pre></td></tr></table></figure>\n\n<p>正确的引用图片方式是使用下列的标签插件而不是 markdown ：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% asset_img example.jpg This is an example image %&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"Hexo-Themes-Next主题：\"><a href=\"#Hexo-Themes-Next主题：\" class=\"headerlink\" title=\"Hexo-Themes-Next主题：\"></a>Hexo-Themes-Next主题：</h2><ul>\n<li><p>配置：</p>\n<ol>\n<li><p>cd 到 Blog目录下的 themes，执行 <code>git clone https://github.com/iissnan/hexo-theme-next themes/next </code>下载主题文件</p>\n</li>\n<li><p>修改_config.yml里的themes字段 <code>theme: next</code></p>\n</li>\n<li><p>验证主题一次输入以下命令：</p>\n</li>\n</ol>\n</li>\n</ul>\n<p>   ​        <code>hexo clean</code>清除已经生成的静态文件</p>\n<p>   ​        <code>hexo g</code> 编译生成静态文件</p>\n<p>   ​        <code>hexo s</code>部署到本地服务器，在浏览器输入<a href=\"http://localhost:4000打开页面\">http://localhost:4000打开页面</a></p>\n<p>   ​        <code>hexo d</code>上传到Github</p>\n<h2 id=\"美化主题：\"><a href=\"#美化主题：\" class=\"headerlink\" title=\"美化主题：\"></a>美化主题：</h2><ol>\n<li><p>移除底部的强力驱动：</p>\n<p>​        _config.yml文件<code>footer</code>字段把 <code>powered:  true</code>改为<code>false</code>。 </p>\n<p>​        或</p>\n<p>​        打开<code>Blog/themes\\next\\layout\\_partials\\footer.swig</code>文件，下拉到底部注释一下代码：</p>\n</li>\n</ol>\n   <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!--</span><br><span class=\"line\">&#123;%- if theme.footer.powered %&#125;</span><br><span class=\"line\">  &lt;div class=&quot;powered-by&quot;&gt;</span><br><span class=\"line\">    &#123;%- set next_site = &#x27;https://theme-next.org&#x27; %&#125;</span><br><span class=\"line\">    &#123;%- if theme.scheme !== &#x27;Gemini&#x27; %&#125;</span><br><span class=\"line\">      &#123;%- set next_site = &#x27;https://&#x27; + theme.scheme | lower + &#x27;.theme-next.org&#x27; %&#125;</span><br><span class=\"line\">    &#123;%- endif %&#125;</span><br><span class=\"line\">    &#123;&#123;- __(&#x27;footer.powered&#x27;, next_url(&#x27;https://hexo.io&#x27;, &#x27;Hexo&#x27;, &#123;class: &#x27;theme-link&#x27;&#125;) + &#x27; &amp; &#x27; + next_url(next_site, &#x27;NexT.&#x27; + theme.scheme, &#123;class: &#x27;theme-link&#x27;&#125;)) &#125;&#125;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&#123;%- endif %&#125;</span><br><span class=\"line\">--&gt;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>添加网站已运行时间：</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 网站运行时间的设置 --&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;timeDate&quot;</span>&gt;</span>载入天数...<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;times&quot;</span>&gt;</span>载入时分秒...<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  <span class=\"keyword\">var</span> now = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>();</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  <span class=\"keyword\">function</span> <span class=\"title function_\">createtime</span>(<span class=\"params\"></span>) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"keyword\">var</span> grt= <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(<span class=\"string\">&quot;01/01/2022 00:00:00&quot;</span>);<span class=\"comment\">//此处修改你的建站时间或者网站上线时间</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      now.<span class=\"title function_\">setTime</span>(now.<span class=\"title function_\">getTime</span>()+<span class=\"number\">250</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      days = (now - grt ) / <span class=\"number\">1000</span> / <span class=\"number\">60</span> / <span class=\"number\">60</span> / <span class=\"number\">24</span>; dnum = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(days);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      hours = (now - grt ) / <span class=\"number\">1000</span> / <span class=\"number\">60</span> / <span class=\"number\">60</span> - (<span class=\"number\">24</span> * dnum); hnum = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(hours);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"keyword\">if</span>(<span class=\"title class_\">String</span>(hnum).<span class=\"property\">length</span> ==<span class=\"number\">1</span> )&#123;hnum = <span class=\"string\">&quot;0&quot;</span> + hnum;&#125; minutes = (now - grt ) / <span class=\"number\">1000</span> /<span class=\"number\">60</span> - (<span class=\"number\">24</span> * <span class=\"number\">60</span> * dnum) - (<span class=\"number\">60</span> * hnum);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      mnum = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(minutes); <span class=\"keyword\">if</span>(<span class=\"title class_\">String</span>(mnum).<span class=\"property\">length</span> ==<span class=\"number\">1</span> )&#123;mnum = <span class=\"string\">&quot;0&quot;</span> + mnum;&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      seconds = (now - grt ) / <span class=\"number\">1000</span> - (<span class=\"number\">24</span> * <span class=\"number\">60</span> * <span class=\"number\">60</span> * dnum) - (<span class=\"number\">60</span> * <span class=\"number\">60</span> * hnum) - (<span class=\"number\">60</span> * mnum);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      snum = <span class=\"title class_\">Math</span>.<span class=\"title function_\">round</span>(seconds); <span class=\"keyword\">if</span>(<span class=\"title class_\">String</span>(snum).<span class=\"property\">length</span> ==<span class=\"number\">1</span> )&#123;snum = <span class=\"string\">&quot;0&quot;</span> + snum;&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;timeDate&quot;</span>).<span class=\"property\">innerHTML</span> = <span class=\"string\">&quot;本站已安全运行 &quot;</span>+dnum+<span class=\"string\">&quot; 天 &quot;</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;times&quot;</span>).<span class=\"property\">innerHTML</span> = hnum + <span class=\"string\">&quot; 小时 &quot;</span> + mnum + <span class=\"string\">&quot; 分 &quot;</span> + snum + <span class=\"string\">&quot; 秒&quot;</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  <span class=\"built_in\">setInterval</span>(<span class=\"string\">&quot;createtime()&quot;</span>,<span class=\"number\">250</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li><p>修改侧边栏和首页文章透明（已放弃）：</p>\n<ol>\n<li><p>第一种方式，直接改。</p>\n</li>\n<li><p>侧边栏透明 1<code>themes\\next\\source\\css\\_schemes\\Pisces\\_layout.styl</code></p>\n</li>\n</ol>\n<pre><code><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.header-inner</span> &#123;</span><br><span class=\"line\">  +++<span class=\"attribute\">opacity</span>: <span class=\"number\">0.8</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">var</span>(--content-bg-color);</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"variable\">$border</span>-radius-inner;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"variable\">$box</span>-shadow-inner;</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"variable\">$sidebar</span>-desktop;</span><br><span class=\"line\"></span><br><span class=\"line\">  +<span class=\"built_in\">desktop-large</span>() &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"variable\">$sidebar</span>-desktop;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  +<span class=\"built_in\">tablet-mobile</span>() &#123;</span><br><span class=\"line\">    <span class=\"attribute\">border-radius</span>: initial;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: auto;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</code></pre>\n<ol start=\"3\">\n<li>侧边栏透 2<code>themes\\next\\source\\css\\_schemes\\Pisces\\_sidebar.styl</code></li>\n</ol>\n<pre><code><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.sidebar</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">var</span>(--body-bg-color);</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: none;</span><br><span class=\"line\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: static;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: $sidebar-desktop;</span><br><span class=\"line\">  +++<span class=\"attribute\">opacity</span>: <span class=\"number\">0.8</span>;</span><br><span class=\"line\">  +<span class=\"selector-tag\">tablet-mobile</span>() &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: none;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</code></pre>\n<ol start=\"4\">\n<li>文章透明 <code>themes\\next\\source\\css\\_schemes\\Gemini\\index.styl</code></li>\n</ol>\n<pre><code><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Post blocks.</span></span><br><span class=\"line\"><span class=\"selector-class\">.content-wrap</span> &#123;</span><br><span class=\"line\">  +++ <span class=\"attribute\">opacity</span>: <span class=\"number\">0.8</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: initial;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: initial;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: initial;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</code></pre>\n<ol start=\"5\">\n<li>第二种方式，在<code>themes\\next\\source\\css\\_variables\\base.styl</code>添加全局变量。</li>\n</ol>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Colors</span></span><br><span class=\"line\"><span class=\"comment\">// colors for use across theme.</span></span><br><span class=\"line\"><span class=\"comment\">// --------------------------------------------------</span></span><br><span class=\"line\"><span class=\"variable\">$whitesmoke</span>   = <span class=\"number\">#f5f5f5</span>;</span><br><span class=\"line\"><span class=\"variable\">$gainsboro</span>    = <span class=\"number\">#eee</span>;</span><br><span class=\"line\"><span class=\"variable\">$grey</span>-lighter = <span class=\"number\">#ddd</span>;</span><br><span class=\"line\"><span class=\"variable\">$grey</span>-light   = <span class=\"number\">#ccc</span>;</span><br><span class=\"line\"><span class=\"variable\">$grey</span>         = <span class=\"number\">#bbb</span>;</span><br><span class=\"line\"><span class=\"variable\">$grey</span>-dark    = <span class=\"number\">#999</span>;</span><br><span class=\"line\"><span class=\"variable\">$grey</span>-dim     = <span class=\"number\">#666</span>;</span><br><span class=\"line\"><span class=\"variable\">$black</span>-light  = <span class=\"number\">#555</span>;</span><br><span class=\"line\"><span class=\"variable\">$black</span>-dim    = <span class=\"number\">#333</span>;</span><br><span class=\"line\"><span class=\"variable\">$black</span>-deep   = <span class=\"number\">#444</span>;</span><br><span class=\"line\"><span class=\"variable\">$red</span>          = <span class=\"number\">#ff2a2a</span>;</span><br><span class=\"line\"><span class=\"variable\">$blue</span>-bright  = <span class=\"number\">#87daff</span>;</span><br><span class=\"line\"><span class=\"variable\">$blue</span>         = <span class=\"number\">#0684bd</span>;</span><br><span class=\"line\"><span class=\"variable\">$blue</span>-deep    = <span class=\"number\">#262a30</span>;</span><br><span class=\"line\"><span class=\"variable\">$orange</span>       = <span class=\"number\">#fc6423</span>;</span><br><span class=\"line\"><span class=\"comment\">//透明</span></span><br><span class=\"line\">+++<span class=\"variable\">$opacity</span> = <span class=\"number\">0.8</span></span><br></pre></td></tr></table></figure>\n\n<p> <strong>注意：</strong>最后按照第一种的方式在.styl文件里把<code>opacity = 0.8</code>改为<code>$opacity = 0.8</code></p>\n<p>搜索框存在Bug，归档也闪烁的迹象。</p>\n</li>\n<li><h2 id=\"文章添加来必力评论：\"><a href=\"#文章添加来必力评论：\" class=\"headerlink\" title=\"文章添加来必力评论：\"></a>文章添加来必力评论：</h2><ol>\n<li>前往 <a href=\"https://livere.com/\">来必力</a> 官网注册账号</li>\n<li>并按要求填写信息获取livere_uid即可</li>\n</ol>\n</li>\n<li><h2 id=\"博客副标题改成今日诗词：\"><a href=\"#博客副标题改成今日诗词：\" class=\"headerlink\" title=\"博客副标题改成今日诗词：\"></a>博客副标题改成今日诗词：</h2><ol>\n<li><p>前往 <a href=\"https://www.jinrishici.com/\">今日诗词</a> 官网获取api</p>\n</li>\n<li><p>将获取到的代码放入到<code>themes\\next\\layout\\_partials\\header\\brand.swig</code>如下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;%- if subtitle %&#125;</span><br><span class=\"line\">      &lt;p +++id=&quot;jinrishici-sentence&quot; class=&quot;site-subtitle&quot; itemprop=&quot;description&quot;&gt;&#123;&#123; subtitle &#125;&#125;&lt;/p&gt;</span><br><span class=\"line\">      &lt;!-- &lt;span id=&quot;jinrishici-sentence&quot;&gt;正在加载今日诗词....&lt;/span&gt; --&gt;</span><br><span class=\"line\">      +++&lt;script src=&quot;https://sdk.jinrishici.com/v2/browser/jinrishici.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">    &#123;%- endif %&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n<li></li>\n</ol>\n","site":{"data":{}},"abbrlink":5,"excerpt":"","more":"<h2 id=\"前言：\"><a href=\"#前言：\" class=\"headerlink\" title=\"前言：\"></a>前言：</h2><p>​        Hexo的使用笔记</p>\n<h2 id=\"基本配置：\"><a href=\"#基本配置：\" class=\"headerlink\" title=\"基本配置：\"></a>基本配置：</h2><p>​        配置文件_config.yml</p>\n<h2 id=\"写作：\"><a href=\"#写作：\" class=\"headerlink\" title=\"写作：\"></a>写作：</h2><ul>\n<li><p>使用<code>&lt;!--more--&gt;</code>截取文章内容使在首页不完全显示。</p>\n</li>\n<li><p>启用资源文件夹，打开后每新建一篇文章都会自动创建对应的文件夹</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> _config.yml</span><br><span class=\"line\">post_asset_folder: true</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>​        相对路径引用的标签插件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% asset_path slug %&#125;</span><br><span class=\"line\">&#123;% asset_img slug [title] %&#125;</span><br><span class=\"line\">&#123;% asset_link slug [title] %&#125;</span><br></pre></td></tr></table></figure>\n\n<p>正确的引用图片方式是使用下列的标签插件而不是 markdown ：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% asset_img example.jpg This is an example image %&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"Hexo-Themes-Next主题：\"><a href=\"#Hexo-Themes-Next主题：\" class=\"headerlink\" title=\"Hexo-Themes-Next主题：\"></a>Hexo-Themes-Next主题：</h2><ul>\n<li><p>配置：</p>\n<ol>\n<li><p>cd 到 Blog目录下的 themes，执行 <code>git clone https://github.com/iissnan/hexo-theme-next themes/next </code>下载主题文件</p>\n</li>\n<li><p>修改_config.yml里的themes字段 <code>theme: next</code></p>\n</li>\n<li><p>验证主题一次输入以下命令：</p>\n</li>\n</ol>\n</li>\n</ul>\n<p>   ​        <code>hexo clean</code>清除已经生成的静态文件</p>\n<p>   ​        <code>hexo g</code> 编译生成静态文件</p>\n<p>   ​        <code>hexo s</code>部署到本地服务器，在浏览器输入<a href=\"http://localhost:4000打开页面\">http://localhost:4000打开页面</a></p>\n<p>   ​        <code>hexo d</code>上传到Github</p>\n<h2 id=\"美化主题：\"><a href=\"#美化主题：\" class=\"headerlink\" title=\"美化主题：\"></a>美化主题：</h2><ol>\n<li><p>移除底部的强力驱动：</p>\n<p>​        _config.yml文件<code>footer</code>字段把 <code>powered:  true</code>改为<code>false</code>。 </p>\n<p>​        或</p>\n<p>​        打开<code>Blog/themes\\next\\layout\\_partials\\footer.swig</code>文件，下拉到底部注释一下代码：</p>\n</li>\n</ol>\n   <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!--</span><br><span class=\"line\">&#123;%- if theme.footer.powered %&#125;</span><br><span class=\"line\">  &lt;div class=&quot;powered-by&quot;&gt;</span><br><span class=\"line\">    &#123;%- set next_site = &#x27;https://theme-next.org&#x27; %&#125;</span><br><span class=\"line\">    &#123;%- if theme.scheme !== &#x27;Gemini&#x27; %&#125;</span><br><span class=\"line\">      &#123;%- set next_site = &#x27;https://&#x27; + theme.scheme | lower + &#x27;.theme-next.org&#x27; %&#125;</span><br><span class=\"line\">    &#123;%- endif %&#125;</span><br><span class=\"line\">    &#123;&#123;- __(&#x27;footer.powered&#x27;, next_url(&#x27;https://hexo.io&#x27;, &#x27;Hexo&#x27;, &#123;class: &#x27;theme-link&#x27;&#125;) + &#x27; &amp; &#x27; + next_url(next_site, &#x27;NexT.&#x27; + theme.scheme, &#123;class: &#x27;theme-link&#x27;&#125;)) &#125;&#125;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&#123;%- endif %&#125;</span><br><span class=\"line\">--&gt;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>添加网站已运行时间：</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 网站运行时间的设置 --&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;timeDate&quot;</span>&gt;</span>载入天数...<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;times&quot;</span>&gt;</span>载入时分秒...<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  <span class=\"keyword\">var</span> now = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>();</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  <span class=\"keyword\">function</span> <span class=\"title function_\">createtime</span>(<span class=\"params\"></span>) &#123;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"keyword\">var</span> grt= <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(<span class=\"string\">&quot;01/01/2022 00:00:00&quot;</span>);<span class=\"comment\">//此处修改你的建站时间或者网站上线时间</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      now.<span class=\"title function_\">setTime</span>(now.<span class=\"title function_\">getTime</span>()+<span class=\"number\">250</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      days = (now - grt ) / <span class=\"number\">1000</span> / <span class=\"number\">60</span> / <span class=\"number\">60</span> / <span class=\"number\">24</span>; dnum = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(days);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      hours = (now - grt ) / <span class=\"number\">1000</span> / <span class=\"number\">60</span> / <span class=\"number\">60</span> - (<span class=\"number\">24</span> * dnum); hnum = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(hours);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"keyword\">if</span>(<span class=\"title class_\">String</span>(hnum).<span class=\"property\">length</span> ==<span class=\"number\">1</span> )&#123;hnum = <span class=\"string\">&quot;0&quot;</span> + hnum;&#125; minutes = (now - grt ) / <span class=\"number\">1000</span> /<span class=\"number\">60</span> - (<span class=\"number\">24</span> * <span class=\"number\">60</span> * dnum) - (<span class=\"number\">60</span> * hnum);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      mnum = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(minutes); <span class=\"keyword\">if</span>(<span class=\"title class_\">String</span>(mnum).<span class=\"property\">length</span> ==<span class=\"number\">1</span> )&#123;mnum = <span class=\"string\">&quot;0&quot;</span> + mnum;&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      seconds = (now - grt ) / <span class=\"number\">1000</span> - (<span class=\"number\">24</span> * <span class=\"number\">60</span> * <span class=\"number\">60</span> * dnum) - (<span class=\"number\">60</span> * <span class=\"number\">60</span> * hnum) - (<span class=\"number\">60</span> * mnum);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      snum = <span class=\"title class_\">Math</span>.<span class=\"title function_\">round</span>(seconds); <span class=\"keyword\">if</span>(<span class=\"title class_\">String</span>(snum).<span class=\"property\">length</span> ==<span class=\"number\">1</span> )&#123;snum = <span class=\"string\">&quot;0&quot;</span> + snum;&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;timeDate&quot;</span>).<span class=\"property\">innerHTML</span> = <span class=\"string\">&quot;本站已安全运行 &quot;</span>+dnum+<span class=\"string\">&quot; 天 &quot;</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">      <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;times&quot;</span>).<span class=\"property\">innerHTML</span> = hnum + <span class=\"string\">&quot; 小时 &quot;</span> + mnum + <span class=\"string\">&quot; 分 &quot;</span> + snum + <span class=\"string\">&quot; 秒&quot;</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  &#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">  <span class=\"built_in\">setInterval</span>(<span class=\"string\">&quot;createtime()&quot;</span>,<span class=\"number\">250</span>);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li><p>修改侧边栏和首页文章透明（已放弃）：</p>\n<ol>\n<li><p>第一种方式，直接改。</p>\n</li>\n<li><p>侧边栏透明 1<code>themes\\next\\source\\css\\_schemes\\Pisces\\_layout.styl</code></p>\n</li>\n</ol>\n<pre><code><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.header-inner</span> &#123;</span><br><span class=\"line\">  +++<span class=\"attribute\">opacity</span>: <span class=\"number\">0.8</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">var</span>(--content-bg-color);</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"variable\">$border</span>-radius-inner;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"variable\">$box</span>-shadow-inner;</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"variable\">$sidebar</span>-desktop;</span><br><span class=\"line\"></span><br><span class=\"line\">  +<span class=\"built_in\">desktop-large</span>() &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"variable\">$sidebar</span>-desktop;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  +<span class=\"built_in\">tablet-mobile</span>() &#123;</span><br><span class=\"line\">    <span class=\"attribute\">border-radius</span>: initial;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: auto;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</code></pre>\n<ol start=\"3\">\n<li>侧边栏透 2<code>themes\\next\\source\\css\\_schemes\\Pisces\\_sidebar.styl</code></li>\n</ol>\n<pre><code><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.sidebar</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">var</span>(--body-bg-color);</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: none;</span><br><span class=\"line\">  <span class=\"attribute\">margin-top</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: static;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: $sidebar-desktop;</span><br><span class=\"line\">  +++<span class=\"attribute\">opacity</span>: <span class=\"number\">0.8</span>;</span><br><span class=\"line\">  +<span class=\"selector-tag\">tablet-mobile</span>() &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: none;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</code></pre>\n<ol start=\"4\">\n<li>文章透明 <code>themes\\next\\source\\css\\_schemes\\Gemini\\index.styl</code></li>\n</ol>\n<pre><code><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Post blocks.</span></span><br><span class=\"line\"><span class=\"selector-class\">.content-wrap</span> &#123;</span><br><span class=\"line\">  +++ <span class=\"attribute\">opacity</span>: <span class=\"number\">0.8</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: initial;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: initial;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: initial;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</code></pre>\n<ol start=\"5\">\n<li>第二种方式，在<code>themes\\next\\source\\css\\_variables\\base.styl</code>添加全局变量。</li>\n</ol>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Colors</span></span><br><span class=\"line\"><span class=\"comment\">// colors for use across theme.</span></span><br><span class=\"line\"><span class=\"comment\">// --------------------------------------------------</span></span><br><span class=\"line\"><span class=\"variable\">$whitesmoke</span>   = <span class=\"number\">#f5f5f5</span>;</span><br><span class=\"line\"><span class=\"variable\">$gainsboro</span>    = <span class=\"number\">#eee</span>;</span><br><span class=\"line\"><span class=\"variable\">$grey</span>-lighter = <span class=\"number\">#ddd</span>;</span><br><span class=\"line\"><span class=\"variable\">$grey</span>-light   = <span class=\"number\">#ccc</span>;</span><br><span class=\"line\"><span class=\"variable\">$grey</span>         = <span class=\"number\">#bbb</span>;</span><br><span class=\"line\"><span class=\"variable\">$grey</span>-dark    = <span class=\"number\">#999</span>;</span><br><span class=\"line\"><span class=\"variable\">$grey</span>-dim     = <span class=\"number\">#666</span>;</span><br><span class=\"line\"><span class=\"variable\">$black</span>-light  = <span class=\"number\">#555</span>;</span><br><span class=\"line\"><span class=\"variable\">$black</span>-dim    = <span class=\"number\">#333</span>;</span><br><span class=\"line\"><span class=\"variable\">$black</span>-deep   = <span class=\"number\">#444</span>;</span><br><span class=\"line\"><span class=\"variable\">$red</span>          = <span class=\"number\">#ff2a2a</span>;</span><br><span class=\"line\"><span class=\"variable\">$blue</span>-bright  = <span class=\"number\">#87daff</span>;</span><br><span class=\"line\"><span class=\"variable\">$blue</span>         = <span class=\"number\">#0684bd</span>;</span><br><span class=\"line\"><span class=\"variable\">$blue</span>-deep    = <span class=\"number\">#262a30</span>;</span><br><span class=\"line\"><span class=\"variable\">$orange</span>       = <span class=\"number\">#fc6423</span>;</span><br><span class=\"line\"><span class=\"comment\">//透明</span></span><br><span class=\"line\">+++<span class=\"variable\">$opacity</span> = <span class=\"number\">0.8</span></span><br></pre></td></tr></table></figure>\n\n<p> <strong>注意：</strong>最后按照第一种的方式在.styl文件里把<code>opacity = 0.8</code>改为<code>$opacity = 0.8</code></p>\n<p>搜索框存在Bug，归档也闪烁的迹象。</p>\n</li>\n<li><h2 id=\"文章添加来必力评论：\"><a href=\"#文章添加来必力评论：\" class=\"headerlink\" title=\"文章添加来必力评论：\"></a>文章添加来必力评论：</h2><ol>\n<li>前往 <a href=\"https://livere.com/\">来必力</a> 官网注册账号</li>\n<li>并按要求填写信息获取livere_uid即可</li>\n</ol>\n</li>\n<li><h2 id=\"博客副标题改成今日诗词：\"><a href=\"#博客副标题改成今日诗词：\" class=\"headerlink\" title=\"博客副标题改成今日诗词：\"></a>博客副标题改成今日诗词：</h2><ol>\n<li><p>前往 <a href=\"https://www.jinrishici.com/\">今日诗词</a> 官网获取api</p>\n</li>\n<li><p>将获取到的代码放入到<code>themes\\next\\layout\\_partials\\header\\brand.swig</code>如下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;%- if subtitle %&#125;</span><br><span class=\"line\">      &lt;p +++id=&quot;jinrishici-sentence&quot; class=&quot;site-subtitle&quot; itemprop=&quot;description&quot;&gt;&#123;&#123; subtitle &#125;&#125;&lt;/p&gt;</span><br><span class=\"line\">      &lt;!-- &lt;span id=&quot;jinrishici-sentence&quot;&gt;正在加载今日诗词....&lt;/span&gt; --&gt;</span><br><span class=\"line\">      +++&lt;script src=&quot;https://sdk.jinrishici.com/v2/browser/jinrishici.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">    &#123;%- endif %&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n<li></li>\n</ol>\n"},{"title":"获取今日诗词","date":"2022-01-10T04:32:40.000Z","_content":"\n```html\n<span id=\"jinrishici-sentence\">正在加载今日诗词...</span>\n```\n```javascript\n<script type=\"text/javascript\" src=\"https://sdk.jinrishici.com/v2/browser/jinrishici.js\" charset=\"utf-8\"></script>\n```\n","source":"_posts/今日诗词.md","raw":"---\ntitle: 获取今日诗词\ndate: 2022-01-10 12:32:40\ntags: [\"hexo\", \"HTML背景特效\", \"学习\"]\ncategories: [\"hexo\", \"HTML背景特效\", \"学习\"]\n---\n\n```html\n<span id=\"jinrishici-sentence\">正在加载今日诗词...</span>\n```\n```javascript\n<script type=\"text/javascript\" src=\"https://sdk.jinrishici.com/v2/browser/jinrishici.js\" charset=\"utf-8\"></script>\n```\n","slug":"今日诗词","published":1,"updated":"2022-01-10T17:30:24.602Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7rscd2a000jbwuzgct8c8z9","content":"<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;jinrishici-sentence&quot;</span>&gt;</span>正在加载今日诗词...<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">&quot;text/javascript&quot;</span> src=<span class=\"string\">&quot;https://sdk.jinrishici.com/v2/browser/jinrishici.js&quot;</span> charset=<span class=\"string\">&quot;utf-8&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"abbrlink":5,"excerpt":"","more":"<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;jinrishici-sentence&quot;</span>&gt;</span>正在加载今日诗词...<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">&quot;text/javascript&quot;</span> src=<span class=\"string\">&quot;https://sdk.jinrishici.com/v2/browser/jinrishici.js&quot;</span> charset=<span class=\"string\">&quot;utf-8&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n"},{"title":"这是我的第一个条博客","_content":"\n \n\n \n\n## Welcome to WeYC's Blog\n\n \n\n \n\n```\nSystem.out.println(\"Hello World!\")\n\nConsole.WriteLine(\"Hello World!\");\n\nconsole.log(\"Hello World!\")\n\nprint(\"Hello World!\")\n\necho \"Hello World!\"\n```\n","source":"_posts/这是我的第一个条博客.md","raw":"---\ntitle: 这是我的第一个条博客\n---\n\n \n\n \n\n## Welcome to WeYC's Blog\n\n \n\n \n\n```\nSystem.out.println(\"Hello World!\")\n\nConsole.WriteLine(\"Hello World!\");\n\nconsole.log(\"Hello World!\")\n\nprint(\"Hello World!\")\n\necho \"Hello World!\"\n```\n","slug":"这是我的第一个条博客","published":1,"date":"2022-09-07T03:31:07.661Z","updated":"2022-01-08T09:01:01.298Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7rscd2c000obwuzfra7692k","content":"<h2 id=\"Welcome-to-WeYC’s-Blog\"><a href=\"#Welcome-to-WeYC’s-Blog\" class=\"headerlink\" title=\"Welcome to WeYC’s Blog\"></a>Welcome to WeYC’s Blog</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">System.out.println(&quot;Hello World!&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">Console.WriteLine(&quot;Hello World!&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">console.log(&quot;Hello World!&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&quot;Hello World!&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">echo &quot;Hello World!&quot;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"abbrlink":5,"excerpt":"","more":"<h2 id=\"Welcome-to-WeYC’s-Blog\"><a href=\"#Welcome-to-WeYC’s-Blog\" class=\"headerlink\" title=\"Welcome to WeYC’s Blog\"></a>Welcome to WeYC’s Blog</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">System.out.println(&quot;Hello World!&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">Console.WriteLine(&quot;Hello World!&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">console.log(&quot;Hello World!&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&quot;Hello World!&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">echo &quot;Hello World!&quot;</span><br></pre></td></tr></table></figure>\n"},{"title":"particlesJS HTML动态背景特效","date":"2022-01-10T05:07:09.000Z","_content":"\n[particles.js](https://github.com/VincentGarreau/particles.js) HTML动态背景特效\n\n<!-- particles.js container -->\n\n```html\n<div id=\"particles-js\" style=\"\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: #2A2A30;\n  z-index: -1;\"></div>\n```\n\n<!-- 动态背景特效 -->\n```javascript\n<script src=\"./assets/particles/particles.js\"></script>\n<script src=\"./assets/particles/app.js\"></script>\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/particlesJS.md","raw":"---\ntitle: particlesJS HTML动态背景特效\ndate: 2022-01-10 13:07:09\ntags: [\"hexo\", \"HTML背景特效\", \"学习\", \"HTML\"]\ncategories: [\"hexo\", \"HTML背景特效\", \"学习\",  \"HTML\"]\n---\n\n[particles.js](https://github.com/VincentGarreau/particles.js) HTML动态背景特效\n\n<!-- particles.js container -->\n\n```html\n<div id=\"particles-js\" style=\"\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: #2A2A30;\n  z-index: -1;\"></div>\n```\n\n<!-- 动态背景特效 -->\n```javascript\n<script src=\"./assets/particles/particles.js\"></script>\n<script src=\"./assets/particles/app.js\"></script>\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"particlesJS","published":1,"updated":"2022-01-12T16:20:59.187Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7rscd2e000qbwuzeb8zazpt","content":"<p><a href=\"https://github.com/VincentGarreau/particles.js\">particles.js</a> HTML动态背景特效</p>\n<!-- particles.js container -->\n\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;particles-js&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">  position: fixed;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">  top: 0;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">  left: 0;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">  width: 100%;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">  height: 100%;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">  background-color: #2A2A30;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">  z-index: -1;&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<!-- 动态背景特效 -->\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src=<span class=\"string\">&quot;./assets/particles/particles.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;./assets/particles/app.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","site":{"data":{}},"abbrlink":5,"excerpt":"","more":"<p><a href=\"https://github.com/VincentGarreau/particles.js\">particles.js</a> HTML动态背景特效</p>\n<!-- particles.js container -->\n\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;particles-js&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">  position: fixed;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">  top: 0;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">  left: 0;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">  width: 100%;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">  height: 100%;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">  background-color: #2A2A30;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">  z-index: -1;&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<!-- 动态背景特效 -->\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src=<span class=\"string\">&quot;./assets/particles/particles.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;./assets/particles/app.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"title":"青龙面板","date":"2022-03-01T12:31:25.000Z","_content":"\n\n\n# 搭建[青龙面板](https://github.com/whyour/qinglong)\n\n1. ## 安装Docker容器\n\n2. ## 启动容器\n\n   ```bash\n   docker run -dit \\\n     -v $PWD/ql:/ql/data \\\n     -p 5700:5700 \\\n     --name qinglong \\\n     --hostname qinglong \\\n     --restart unless-stopped \\\n     whyour/qinglong:latest\n   ```\n\n3. ## docker-compose 部署\n\n   1. docker-compose 安装\n\n      ```bash\n   sudo curl -L https://github.com/docker/compose/releases/download/1.16.1/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose\n      ```\n\n   2. 启动容器\n\n      ```bash\n      mkdir qinglong\n      wget https://raw.githubusercontent.com/whyour/qinglong/master/docker/docker-compose.yml\n      \n      # 启动\n      docker-compose up -d\n      # 停止\n      docker-compose down\n      ```\n   \n    <!-- more -->\n   \n4. ## 青龙面板拉取常用脚本(JD签到)\n\n   [转载自科技玩家](https://www.kejiwanjia.com/)\n\n   如何拉库：\n   \n   `\n   ql repo <repourl> <path> <blacklist> <dependence> <branch>\n   `\n\n   对应意思 “库地址” “拉哪些” “不拉哪些” “依赖文件” “分支”\n\n   拉取单个脚本：\n   \n   `ql raw <fileurl>`\n   \n   使用方法：\n   \n   一、添加库：进入面板-右上角“定时任务”-分别填入相关信息。提供个人设置，给大家参考。其中人物名、任务定时可自定义。\n   二、运行库任务添加脚本：分别点击每个库的运行按钮，稍等一下，让它飞一会儿。然后刷新页面，就能看到库的脚本了。\n   \n   拉库出现的问题及解决方案\n   \n   1.出现这种错误：\n   \n   `Cannot find module 'xxxx'`\n   \n   依赖不完整，解决方法：\n   \n   `docker exec -it qinglong(容器名称) bashcd /ql/scripts/pnpm install 'xxxx'npm install 'xxxx'`\n   \n   这两个安装命令都可以用.\n   \n   2.出现这种错误：\n   \n   `Cannot find module './xxxx'`\n   \n   那就很有是拉库命令不完整，请检查或复制完整的拉库命令。\n   \n   部分需要的依赖：自行安装\n   \n   `\"npm install -g npm\"\"pip3 install requests\"\"pip3 install pytz\"\"npm install -g download\"\"pnpm install jsdom\"\"apk add --no-cache build-base g++ cairo-dev pango-dev giflib-dev && cd scripts && npm install canvas png-js md5 date-fns axios crypto-js tslib ts-md5 @types/node --build-from-source\"`\n   \n   截止2021年12月4日目前还在维护的仓库推荐使用下方两个库，一个日常任务一个开卡 。\n   \n   拉库命令：\n   \n   `//国内鸡：ql repo https://ghproxy.com/github.com/KingRan/JDJB.git \"jd_|jx_|jdCookie\" \"activity|backUp\" \"^jd[^_]|USER|utils|function|sendNotify|ql|JDJR\"//国外鸡：ql repo https://github.com/KingRan/JDJB.git \"jd_|jx_|jdCookie\" \"activity|backUp\" \"^jd[^_]|USER|utils|function|sendNotify|ql|JDJR\"`\n   \n   smiek2221开卡库：\n   \n   `//国外鸡：ql repo https://github.com/smiek2221/scripts.git \"jd_|gua_\" \"\" \"ZooFaker_Necklace.js|JDJRValidator_Pure.js|sign_graphics_validate.js\"//国内鸡：ql repo https://ghproxy.com/github.com/smiek2221/scripts.git \"jd_|gua_\" \"\" \"ZooFaker_Necklace.js|JDJRValidator_Pure.js|sign_graphics_validate.js\"`\n   \n   ccwav大佬的资产通知增强版和CK检测（推荐使用）\n   \n   `//不包含sendNotify:ql repo https://github.com/ccwav/QLScript2.git \"jd_\" \"sendNotify|NoUsed\" \"ql\"//包含sendNotify:ql repo https://github.com/ccwav/QLScript2.git \"jd_\" \"NoUsed\" \"ql|sendNotify\"`\n   \n   wskey转换来源于Zy143L大佬（不上传，推荐）\n   \n   `//完美网络用户：ql repo https://github.com/Zy143L/wskey.git \"wskey\"//国内网络用户：ql repo https://ghproxy.com/github.com/Zy143L/wskey.git \"wskey`\n   \n   zero205大佬更新拉库命令（更新频繁，内置作者助力）\n   \n   `ql repo https://github.com/zero205/JD_tencent_scf.git \"jd_|jx_|getJDCookie\" \"backUp|icon\" \"^jd[^_]|USER|sendNotify|sign_graphics_validate|JDJR\"\"main\"`\n   \n   京东保价、汽车兑换等\n   \n   `//国内鸡 ql repo https://ghproxy.com/github.com/KingRan/JD-Scripts.git \"jd_|jx_|getJDCookie\" \"activity|backUp\" \"^jd[^_]|USER|utils|function\" //国外鸡 ql repo https://github.com/KingRan/JD-Scripts.git \"jd_|jx_|getJDCookie\" \"activity|backUp\" \"^jd[^_`]|USER|utils|function\" \n   \n   yuannian1112拉取仓库命令：\n   \n   `//国内鸡 ql repo https://hub.fastgit.org/yuannian1112/jd_scripts.git \"jd_|jx_|getJDCookie\" \"activity|backUp\" \"^jd[^_]|USER|utils\" //国外鸡 ql repo https://github.com/yuannian1112/jd_scripts.git \"jd_|jx_|getJDCookie\" \"activity|backUp\" \"^jd[^_]|USER|utils\" //v4修改默认库为 https://hub.fastgit.org/yuannian1112/jd_scripts.git //分支修改为main`\n   \n   star261 粉丝互动\n   \n   `ql repo https://github.com/star261/jd.git \"scripts|jd\" \"\" \"\" \"main\"`\n   \n   `chinnkarahoi 无维护，原版`\n   \n   `ql repo https://github.com/chinnkarahoi/jd_scripts.git \"jd_|jx_|getJDCookie\" \"activity|backUp|Coupon\" \"^jd[^_]|USER\"`\n   \n   JDHelloWorld 基本天天有更新,但是采用TS脚本让初学者不友好\n   \n   `ql repo https://github.com/JDHelloWorld/jd_scripts.git \"jd_|jx_|getCookie\" \"activity|backUp|Coupon|enen|update\" \"^jd[^_]|USER|tools\"`\n   \n   柠檬panghu 已经跑路\n   \n   `ql repo https://github.com/panghu999/jd_scripts.git \"jd_|jx_|getJDCookie\" \"activity|backUp|jd_delCoupon|format_\" \"^jd[^_]|USER\"`\n   \n   he1pu 有更新\n   \n   `ql repo https://github.com/he1pu/JDHelp.git \"jd_|jx_|getJDCookie\" \"activity|backUp|jd_delCoupon\" \"^jd[^_]|USER\"`\n   \n   shufflewzc 集合目前能用的脚本有更新\n   \n   `ql repo https://github.com/shufflewzc/faker2.git \"jd_|jx_|jddj_|getJDCookie\" \"activity|backUp\" \"^jd[^_]|USER|ZooFaker_Necklace|JDJRValidator_Pure|sign_graphics_validate\"`\n   \n   Annyoo2021 lxk最终版及搬运整理 集合目前能用的脚本 推荐\n   \n   `ql repo https://github.com/Annyoo2021/scripts.git \"jd_|jx_|long_|getJDCookie\" \"activity|backUp\" \"^jd[^_]|USER|ZooFaker_Necklace|JDJRValidator_Pure|JDJRValidator\" \"main`\n   \n   smiek2221仓库\n   https://github.com/smiek2221/scripts\n   \n   Tsukasa007仓库\n   https://github.com/Tsukasa007/my_script/tree/master\n   \n   同步上游各个大佬的仓库 相当于合集\n   https://github.com/DovFork\n   \n   更新7.7最新仓库：（仅提供地址，拉取请参照下面）\n   \n   树叶shuye72仓库\n   https://github.com/wuzhi04/MyActions\n   \n   Annyoo2021仓库 基本天天更新，集合了大量可用脚本\n   https://github.com/Annyoo2021/scripts\n   \n   lukesyy仓库\n   https://github.com/lukesyy/jd_yun\n   \n   zero205仓库\n   https://github.com/zero205/JD_tencent_scf\n   \n   curtinlv仓库 \n   ql repo https://github.com/curtinlv/JD-Script.git \n   \n   he1pu互助仓库 \n   ql repo https://github.com/he1pu/JDHelp.git \"jd_|jx_|getJDCookie\" \"activity|backUp|Coupon\" \"^jd[^_]|USER\" \n   \n   柠檬（胖虎）代维护lxk0301仓库 已经跑路\n   ql repo https://github.com/panghu999/jd_scripts.git \"jd_|jx_|getJDCookie\" \"activity|backUp|Coupon|jd_try|format_\" \"^jd[^_]|USER\" \n   \n   zcy01仓库 \n   ql repo https://github.com/ZCY01/daily_scripts.git \"jd_\" _\n   \n   _passerby-b 仓库 \n   ql repo https://github.com/passerby-b/JDDJ.git \"jddj_\" \"scf_test_event|jddj_fruit_code.js|jddj_getck.js|jd_|jddj_cookie\" _\n   \n   _JDHelloWorld仓库 \n   ql repo https://github.com/JDHelloWorld/jd_scripts.git \"jd_|jx_|getJDCookie\" \"activity|backUp|Coupon|enen|update\" \"^jd[^_]|USER\" \n   \n   jiulan仓库 \n   ql repo https://github.com/jiulan/platypus.git \n   \n   Ariszy（Zhiyi-N）仓库 \n   ql repo https://github.com/Ariszy/Private-Script.git \"JD\" \n   \n   柠檬（胖虎）仓库 \n   ql repo https://github.com/panghu999/panghu.git \"jd_\" \n   \n   混沌仓库 \n   ql repo https://github.com/whyour/hundun.git \"quanx\" \"tokens|caiyun|didi|donate|fold|Env|.py\" \n   \n   moposmall仓库 \n   ql repo https://github.com/moposmall/Script.git \"jx_mc|cfd.js\" \n   \n   龙珠仓库 \n   ql repo https://github.com/longzhuzhu/nianyu.git \"qx\" “main” \n   \n5. ## 目前用的脚本库:\n\n   1. https://github.com/shufflewzc/faker3.git\n   2. https://github.com/shufflewzc/faker2.git\n   3. https://github.com/Aaron-lv/sync.git\n   4. https://github.com/6dylan6/jdpro.git\n   5. https://github.com/JDHelloWorld/jd_scripts.git\n   6. https://github.com/KingRan/KR.git\n   7. https://github.com/okyyds/yyds.git\n   8. https://github.com/okyyds/duck.git\n\n   \n","source":"_posts/青龙面板.md","raw":"---\ntitle: 青龙面板\ndate: 2022-03-01 20:31:25\ntags: [\"学习\", \"折腾\",\"青龙面板\"]\ncategories: \"青龙面板\"\n---\n\n\n\n# 搭建[青龙面板](https://github.com/whyour/qinglong)\n\n1. ## 安装Docker容器\n\n2. ## 启动容器\n\n   ```bash\n   docker run -dit \\\n     -v $PWD/ql:/ql/data \\\n     -p 5700:5700 \\\n     --name qinglong \\\n     --hostname qinglong \\\n     --restart unless-stopped \\\n     whyour/qinglong:latest\n   ```\n\n3. ## docker-compose 部署\n\n   1. docker-compose 安装\n\n      ```bash\n   sudo curl -L https://github.com/docker/compose/releases/download/1.16.1/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose\n      ```\n\n   2. 启动容器\n\n      ```bash\n      mkdir qinglong\n      wget https://raw.githubusercontent.com/whyour/qinglong/master/docker/docker-compose.yml\n      \n      # 启动\n      docker-compose up -d\n      # 停止\n      docker-compose down\n      ```\n   \n    <!-- more -->\n   \n4. ## 青龙面板拉取常用脚本(JD签到)\n\n   [转载自科技玩家](https://www.kejiwanjia.com/)\n\n   如何拉库：\n   \n   `\n   ql repo <repourl> <path> <blacklist> <dependence> <branch>\n   `\n\n   对应意思 “库地址” “拉哪些” “不拉哪些” “依赖文件” “分支”\n\n   拉取单个脚本：\n   \n   `ql raw <fileurl>`\n   \n   使用方法：\n   \n   一、添加库：进入面板-右上角“定时任务”-分别填入相关信息。提供个人设置，给大家参考。其中人物名、任务定时可自定义。\n   二、运行库任务添加脚本：分别点击每个库的运行按钮，稍等一下，让它飞一会儿。然后刷新页面，就能看到库的脚本了。\n   \n   拉库出现的问题及解决方案\n   \n   1.出现这种错误：\n   \n   `Cannot find module 'xxxx'`\n   \n   依赖不完整，解决方法：\n   \n   `docker exec -it qinglong(容器名称) bashcd /ql/scripts/pnpm install 'xxxx'npm install 'xxxx'`\n   \n   这两个安装命令都可以用.\n   \n   2.出现这种错误：\n   \n   `Cannot find module './xxxx'`\n   \n   那就很有是拉库命令不完整，请检查或复制完整的拉库命令。\n   \n   部分需要的依赖：自行安装\n   \n   `\"npm install -g npm\"\"pip3 install requests\"\"pip3 install pytz\"\"npm install -g download\"\"pnpm install jsdom\"\"apk add --no-cache build-base g++ cairo-dev pango-dev giflib-dev && cd scripts && npm install canvas png-js md5 date-fns axios crypto-js tslib ts-md5 @types/node --build-from-source\"`\n   \n   截止2021年12月4日目前还在维护的仓库推荐使用下方两个库，一个日常任务一个开卡 。\n   \n   拉库命令：\n   \n   `//国内鸡：ql repo https://ghproxy.com/github.com/KingRan/JDJB.git \"jd_|jx_|jdCookie\" \"activity|backUp\" \"^jd[^_]|USER|utils|function|sendNotify|ql|JDJR\"//国外鸡：ql repo https://github.com/KingRan/JDJB.git \"jd_|jx_|jdCookie\" \"activity|backUp\" \"^jd[^_]|USER|utils|function|sendNotify|ql|JDJR\"`\n   \n   smiek2221开卡库：\n   \n   `//国外鸡：ql repo https://github.com/smiek2221/scripts.git \"jd_|gua_\" \"\" \"ZooFaker_Necklace.js|JDJRValidator_Pure.js|sign_graphics_validate.js\"//国内鸡：ql repo https://ghproxy.com/github.com/smiek2221/scripts.git \"jd_|gua_\" \"\" \"ZooFaker_Necklace.js|JDJRValidator_Pure.js|sign_graphics_validate.js\"`\n   \n   ccwav大佬的资产通知增强版和CK检测（推荐使用）\n   \n   `//不包含sendNotify:ql repo https://github.com/ccwav/QLScript2.git \"jd_\" \"sendNotify|NoUsed\" \"ql\"//包含sendNotify:ql repo https://github.com/ccwav/QLScript2.git \"jd_\" \"NoUsed\" \"ql|sendNotify\"`\n   \n   wskey转换来源于Zy143L大佬（不上传，推荐）\n   \n   `//完美网络用户：ql repo https://github.com/Zy143L/wskey.git \"wskey\"//国内网络用户：ql repo https://ghproxy.com/github.com/Zy143L/wskey.git \"wskey`\n   \n   zero205大佬更新拉库命令（更新频繁，内置作者助力）\n   \n   `ql repo https://github.com/zero205/JD_tencent_scf.git \"jd_|jx_|getJDCookie\" \"backUp|icon\" \"^jd[^_]|USER|sendNotify|sign_graphics_validate|JDJR\"\"main\"`\n   \n   京东保价、汽车兑换等\n   \n   `//国内鸡 ql repo https://ghproxy.com/github.com/KingRan/JD-Scripts.git \"jd_|jx_|getJDCookie\" \"activity|backUp\" \"^jd[^_]|USER|utils|function\" //国外鸡 ql repo https://github.com/KingRan/JD-Scripts.git \"jd_|jx_|getJDCookie\" \"activity|backUp\" \"^jd[^_`]|USER|utils|function\" \n   \n   yuannian1112拉取仓库命令：\n   \n   `//国内鸡 ql repo https://hub.fastgit.org/yuannian1112/jd_scripts.git \"jd_|jx_|getJDCookie\" \"activity|backUp\" \"^jd[^_]|USER|utils\" //国外鸡 ql repo https://github.com/yuannian1112/jd_scripts.git \"jd_|jx_|getJDCookie\" \"activity|backUp\" \"^jd[^_]|USER|utils\" //v4修改默认库为 https://hub.fastgit.org/yuannian1112/jd_scripts.git //分支修改为main`\n   \n   star261 粉丝互动\n   \n   `ql repo https://github.com/star261/jd.git \"scripts|jd\" \"\" \"\" \"main\"`\n   \n   `chinnkarahoi 无维护，原版`\n   \n   `ql repo https://github.com/chinnkarahoi/jd_scripts.git \"jd_|jx_|getJDCookie\" \"activity|backUp|Coupon\" \"^jd[^_]|USER\"`\n   \n   JDHelloWorld 基本天天有更新,但是采用TS脚本让初学者不友好\n   \n   `ql repo https://github.com/JDHelloWorld/jd_scripts.git \"jd_|jx_|getCookie\" \"activity|backUp|Coupon|enen|update\" \"^jd[^_]|USER|tools\"`\n   \n   柠檬panghu 已经跑路\n   \n   `ql repo https://github.com/panghu999/jd_scripts.git \"jd_|jx_|getJDCookie\" \"activity|backUp|jd_delCoupon|format_\" \"^jd[^_]|USER\"`\n   \n   he1pu 有更新\n   \n   `ql repo https://github.com/he1pu/JDHelp.git \"jd_|jx_|getJDCookie\" \"activity|backUp|jd_delCoupon\" \"^jd[^_]|USER\"`\n   \n   shufflewzc 集合目前能用的脚本有更新\n   \n   `ql repo https://github.com/shufflewzc/faker2.git \"jd_|jx_|jddj_|getJDCookie\" \"activity|backUp\" \"^jd[^_]|USER|ZooFaker_Necklace|JDJRValidator_Pure|sign_graphics_validate\"`\n   \n   Annyoo2021 lxk最终版及搬运整理 集合目前能用的脚本 推荐\n   \n   `ql repo https://github.com/Annyoo2021/scripts.git \"jd_|jx_|long_|getJDCookie\" \"activity|backUp\" \"^jd[^_]|USER|ZooFaker_Necklace|JDJRValidator_Pure|JDJRValidator\" \"main`\n   \n   smiek2221仓库\n   https://github.com/smiek2221/scripts\n   \n   Tsukasa007仓库\n   https://github.com/Tsukasa007/my_script/tree/master\n   \n   同步上游各个大佬的仓库 相当于合集\n   https://github.com/DovFork\n   \n   更新7.7最新仓库：（仅提供地址，拉取请参照下面）\n   \n   树叶shuye72仓库\n   https://github.com/wuzhi04/MyActions\n   \n   Annyoo2021仓库 基本天天更新，集合了大量可用脚本\n   https://github.com/Annyoo2021/scripts\n   \n   lukesyy仓库\n   https://github.com/lukesyy/jd_yun\n   \n   zero205仓库\n   https://github.com/zero205/JD_tencent_scf\n   \n   curtinlv仓库 \n   ql repo https://github.com/curtinlv/JD-Script.git \n   \n   he1pu互助仓库 \n   ql repo https://github.com/he1pu/JDHelp.git \"jd_|jx_|getJDCookie\" \"activity|backUp|Coupon\" \"^jd[^_]|USER\" \n   \n   柠檬（胖虎）代维护lxk0301仓库 已经跑路\n   ql repo https://github.com/panghu999/jd_scripts.git \"jd_|jx_|getJDCookie\" \"activity|backUp|Coupon|jd_try|format_\" \"^jd[^_]|USER\" \n   \n   zcy01仓库 \n   ql repo https://github.com/ZCY01/daily_scripts.git \"jd_\" _\n   \n   _passerby-b 仓库 \n   ql repo https://github.com/passerby-b/JDDJ.git \"jddj_\" \"scf_test_event|jddj_fruit_code.js|jddj_getck.js|jd_|jddj_cookie\" _\n   \n   _JDHelloWorld仓库 \n   ql repo https://github.com/JDHelloWorld/jd_scripts.git \"jd_|jx_|getJDCookie\" \"activity|backUp|Coupon|enen|update\" \"^jd[^_]|USER\" \n   \n   jiulan仓库 \n   ql repo https://github.com/jiulan/platypus.git \n   \n   Ariszy（Zhiyi-N）仓库 \n   ql repo https://github.com/Ariszy/Private-Script.git \"JD\" \n   \n   柠檬（胖虎）仓库 \n   ql repo https://github.com/panghu999/panghu.git \"jd_\" \n   \n   混沌仓库 \n   ql repo https://github.com/whyour/hundun.git \"quanx\" \"tokens|caiyun|didi|donate|fold|Env|.py\" \n   \n   moposmall仓库 \n   ql repo https://github.com/moposmall/Script.git \"jx_mc|cfd.js\" \n   \n   龙珠仓库 \n   ql repo https://github.com/longzhuzhu/nianyu.git \"qx\" “main” \n   \n5. ## 目前用的脚本库:\n\n   1. https://github.com/shufflewzc/faker3.git\n   2. https://github.com/shufflewzc/faker2.git\n   3. https://github.com/Aaron-lv/sync.git\n   4. https://github.com/6dylan6/jdpro.git\n   5. https://github.com/JDHelloWorld/jd_scripts.git\n   6. https://github.com/KingRan/KR.git\n   7. https://github.com/okyyds/yyds.git\n   8. https://github.com/okyyds/duck.git\n\n   \n","slug":"青龙面板","published":1,"updated":"2022-03-01T13:06:22.199Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7rscd2f000ubwuz1fpn1ckz","content":"<h1 id=\"搭建青龙面板\"><a href=\"#搭建青龙面板\" class=\"headerlink\" title=\"搭建青龙面板\"></a>搭建<a href=\"https://github.com/whyour/qinglong\">青龙面板</a></h1><ol>\n<li><h2 id=\"安装Docker容器\"><a href=\"#安装Docker容器\" class=\"headerlink\" title=\"安装Docker容器\"></a>安装Docker容器</h2></li>\n<li><h2 id=\"启动容器\"><a href=\"#启动容器\" class=\"headerlink\" title=\"启动容器\"></a>启动容器</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -dit \\</span><br><span class=\"line\">  -v <span class=\"variable\">$PWD</span>/ql:/ql/data \\</span><br><span class=\"line\">  -p 5700:5700 \\</span><br><span class=\"line\">  --name qinglong \\</span><br><span class=\"line\">  --hostname qinglong \\</span><br><span class=\"line\">  --restart unless-stopped \\</span><br><span class=\"line\">  whyour/qinglong:latest</span><br></pre></td></tr></table></figure></li>\n<li><h2 id=\"docker-compose-部署\"><a href=\"#docker-compose-部署\" class=\"headerlink\" title=\"docker-compose 部署\"></a>docker-compose 部署</h2><ol>\n<li><p>docker-compose 安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo curl -L https://github.com/docker/compose/releases/download/1.16.1/docker-compose-`<span class=\"built_in\">uname</span> -s`-`<span class=\"built_in\">uname</span> -m` -o /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure></li>\n<li><p>启动容器</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> qinglong</span><br><span class=\"line\">wget https://raw.githubusercontent.com/whyour/qinglong/master/docker/docker-compose.yml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动</span></span><br><span class=\"line\">docker-compose up -d</span><br><span class=\"line\"><span class=\"comment\"># 停止</span></span><br><span class=\"line\">docker-compose down</span><br></pre></td></tr></table></figure></li>\n</ol>\n <span id=\"more\"></span></li>\n<li><h2 id=\"青龙面板拉取常用脚本-JD签到\"><a href=\"#青龙面板拉取常用脚本-JD签到\" class=\"headerlink\" title=\"青龙面板拉取常用脚本(JD签到)\"></a>青龙面板拉取常用脚本(JD签到)</h2><p><a href=\"https://www.kejiwanjia.com/\">转载自科技玩家</a></p>\n<p>如何拉库：</p>\n<p><code>ql repo &lt;repourl&gt; &lt;path&gt; &lt;blacklist&gt; &lt;dependence&gt; &lt;branch&gt;</code></p>\n<p>对应意思 “库地址” “拉哪些” “不拉哪些” “依赖文件” “分支”</p>\n<p>拉取单个脚本：</p>\n<p><code>ql raw &lt;fileurl&gt;</code></p>\n<p>使用方法：</p>\n<p>一、添加库：进入面板-右上角“定时任务”-分别填入相关信息。提供个人设置，给大家参考。其中人物名、任务定时可自定义。<br>二、运行库任务添加脚本：分别点击每个库的运行按钮，稍等一下，让它飞一会儿。然后刷新页面，就能看到库的脚本了。</p>\n<p>拉库出现的问题及解决方案</p>\n<p>1.出现这种错误：</p>\n<p><code>Cannot find module &#39;xxxx&#39;</code></p>\n<p>依赖不完整，解决方法：</p>\n<p><code>docker exec -it qinglong(容器名称) bashcd /ql/scripts/pnpm install &#39;xxxx&#39;npm install &#39;xxxx&#39;</code></p>\n<p>这两个安装命令都可以用.</p>\n<p>2.出现这种错误：</p>\n<p><code>Cannot find module &#39;./xxxx&#39;</code></p>\n<p>那就很有是拉库命令不完整，请检查或复制完整的拉库命令。</p>\n<p>部分需要的依赖：自行安装</p>\n<p><code>&quot;npm install -g npm&quot;&quot;pip3 install requests&quot;&quot;pip3 install pytz&quot;&quot;npm install -g download&quot;&quot;pnpm install jsdom&quot;&quot;apk add --no-cache build-base g++ cairo-dev pango-dev giflib-dev &amp;&amp; cd scripts &amp;&amp; npm install canvas png-js md5 date-fns axios crypto-js tslib ts-md5 @types/node --build-from-source&quot;</code></p>\n<p>截止2021年12月4日目前还在维护的仓库推荐使用下方两个库，一个日常任务一个开卡 。</p>\n<p>拉库命令：</p>\n<p><code>//国内鸡：ql repo https://ghproxy.com/github.com/KingRan/JDJB.git &quot;jd_|jx_|jdCookie&quot; &quot;activity|backUp&quot; &quot;^jd[^_]|USER|utils|function|sendNotify|ql|JDJR&quot;//国外鸡：ql repo https://github.com/KingRan/JDJB.git &quot;jd_|jx_|jdCookie&quot; &quot;activity|backUp&quot; &quot;^jd[^_]|USER|utils|function|sendNotify|ql|JDJR&quot;</code></p>\n<p>smiek2221开卡库：</p>\n<p><code>//国外鸡：ql repo https://github.com/smiek2221/scripts.git &quot;jd_|gua_&quot; &quot;&quot; &quot;ZooFaker_Necklace.js|JDJRValidator_Pure.js|sign_graphics_validate.js&quot;//国内鸡：ql repo https://ghproxy.com/github.com/smiek2221/scripts.git &quot;jd_|gua_&quot; &quot;&quot; &quot;ZooFaker_Necklace.js|JDJRValidator_Pure.js|sign_graphics_validate.js&quot;</code></p>\n<p>ccwav大佬的资产通知增强版和CK检测（推荐使用）</p>\n<p><code>//不包含sendNotify:ql repo https://github.com/ccwav/QLScript2.git &quot;jd_&quot; &quot;sendNotify|NoUsed&quot; &quot;ql&quot;//包含sendNotify:ql repo https://github.com/ccwav/QLScript2.git &quot;jd_&quot; &quot;NoUsed&quot; &quot;ql|sendNotify&quot;</code></p>\n<p>wskey转换来源于Zy143L大佬（不上传，推荐）</p>\n<p><code>//完美网络用户：ql repo https://github.com/Zy143L/wskey.git &quot;wskey&quot;//国内网络用户：ql repo https://ghproxy.com/github.com/Zy143L/wskey.git &quot;wskey</code></p>\n<p>zero205大佬更新拉库命令（更新频繁，内置作者助力）</p>\n<p><code>ql repo https://github.com/zero205/JD_tencent_scf.git &quot;jd_|jx_|getJDCookie&quot; &quot;backUp|icon&quot; &quot;^jd[^_]|USER|sendNotify|sign_graphics_validate|JDJR&quot;&quot;main&quot;</code></p>\n<p>京东保价、汽车兑换等</p>\n<p><code>//国内鸡 ql repo https://ghproxy.com/github.com/KingRan/JD-Scripts.git &quot;jd_|jx_|getJDCookie&quot; &quot;activity|backUp&quot; &quot;^jd[^_]|USER|utils|function&quot; //国外鸡 ql repo https://github.com/KingRan/JD-Scripts.git &quot;jd_|jx_|getJDCookie&quot; &quot;activity|backUp&quot; &quot;^jd[^_</code>]|USER|utils|function” </p>\n<p>yuannian1112拉取仓库命令：</p>\n<p><code>//国内鸡 ql repo https://hub.fastgit.org/yuannian1112/jd_scripts.git &quot;jd_|jx_|getJDCookie&quot; &quot;activity|backUp&quot; &quot;^jd[^_]|USER|utils&quot; //国外鸡 ql repo https://github.com/yuannian1112/jd_scripts.git &quot;jd_|jx_|getJDCookie&quot; &quot;activity|backUp&quot; &quot;^jd[^_]|USER|utils&quot; //v4修改默认库为 https://hub.fastgit.org/yuannian1112/jd_scripts.git //分支修改为main</code></p>\n<p>star261 粉丝互动</p>\n<p><code>ql repo https://github.com/star261/jd.git &quot;scripts|jd&quot; &quot;&quot; &quot;&quot; &quot;main&quot;</code></p>\n<p><code>chinnkarahoi 无维护，原版</code></p>\n<p><code>ql repo https://github.com/chinnkarahoi/jd_scripts.git &quot;jd_|jx_|getJDCookie&quot; &quot;activity|backUp|Coupon&quot; &quot;^jd[^_]|USER&quot;</code></p>\n<p>JDHelloWorld 基本天天有更新,但是采用TS脚本让初学者不友好</p>\n<p><code>ql repo https://github.com/JDHelloWorld/jd_scripts.git &quot;jd_|jx_|getCookie&quot; &quot;activity|backUp|Coupon|enen|update&quot; &quot;^jd[^_]|USER|tools&quot;</code></p>\n<p>柠檬panghu 已经跑路</p>\n<p><code>ql repo https://github.com/panghu999/jd_scripts.git &quot;jd_|jx_|getJDCookie&quot; &quot;activity|backUp|jd_delCoupon|format_&quot; &quot;^jd[^_]|USER&quot;</code></p>\n<p>he1pu 有更新</p>\n<p><code>ql repo https://github.com/he1pu/JDHelp.git &quot;jd_|jx_|getJDCookie&quot; &quot;activity|backUp|jd_delCoupon&quot; &quot;^jd[^_]|USER&quot;</code></p>\n<p>shufflewzc 集合目前能用的脚本有更新</p>\n<p><code>ql repo https://github.com/shufflewzc/faker2.git &quot;jd_|jx_|jddj_|getJDCookie&quot; &quot;activity|backUp&quot; &quot;^jd[^_]|USER|ZooFaker_Necklace|JDJRValidator_Pure|sign_graphics_validate&quot;</code></p>\n<p>Annyoo2021 lxk最终版及搬运整理 集合目前能用的脚本 推荐</p>\n<p><code>ql repo https://github.com/Annyoo2021/scripts.git &quot;jd_|jx_|long_|getJDCookie&quot; &quot;activity|backUp&quot; &quot;^jd[^_]|USER|ZooFaker_Necklace|JDJRValidator_Pure|JDJRValidator&quot; &quot;main</code></p>\n<p>smiek2221仓库<br><a href=\"https://github.com/smiek2221/scripts\">https://github.com/smiek2221/scripts</a></p>\n<p>Tsukasa007仓库<br><a href=\"https://github.com/Tsukasa007/my_script/tree/master\">https://github.com/Tsukasa007/my_script/tree/master</a></p>\n<p>同步上游各个大佬的仓库 相当于合集<br><a href=\"https://github.com/DovFork\">https://github.com/DovFork</a></p>\n<p>更新7.7最新仓库：（仅提供地址，拉取请参照下面）</p>\n<p>树叶shuye72仓库<br><a href=\"https://github.com/wuzhi04/MyActions\">https://github.com/wuzhi04/MyActions</a></p>\n<p>Annyoo2021仓库 基本天天更新，集合了大量可用脚本<br><a href=\"https://github.com/Annyoo2021/scripts\">https://github.com/Annyoo2021/scripts</a></p>\n<p>lukesyy仓库<br><a href=\"https://github.com/lukesyy/jd_yun\">https://github.com/lukesyy/jd_yun</a></p>\n<p>zero205仓库<br><a href=\"https://github.com/zero205/JD_tencent_scf\">https://github.com/zero205/JD_tencent_scf</a></p>\n<p>curtinlv仓库<br>ql repo <a href=\"https://github.com/curtinlv/JD-Script.git\">https://github.com/curtinlv/JD-Script.git</a> </p>\n<p>he1pu互助仓库<br>ql repo <a href=\"https://github.com/he1pu/JDHelp.git\">https://github.com/he1pu/JDHelp.git</a> “jd_|jx_|getJDCookie” “activity|backUp|Coupon” “^jd[^_]|USER” </p>\n<p>柠檬（胖虎）代维护lxk0301仓库 已经跑路<br>ql repo <a href=\"https://github.com/panghu999/jd_scripts.git\">https://github.com/panghu999/jd_scripts.git</a> “jd_|jx_|getJDCookie” “activity|backUp|Coupon|jd_try|format_” “^jd[^_]|USER” </p>\n<p>zcy01仓库<br>ql repo <a href=\"https://github.com/ZCY01/daily_scripts.git\">https://github.com/ZCY01/daily_scripts.git</a> “jd_” _</p>\n<p><em>passerby-b 仓库<br>ql repo <a href=\"https://github.com/passerby-b/JDDJ.git\">https://github.com/passerby-b/JDDJ.git</a> “jddj</em>“ “scf_test_event|jddj_fruit_code.js|jddj_getck.js|jd_|jddj_cookie” _</p>\n<p><em>JDHelloWorld仓库<br>ql repo <a href=\"https://github.com/JDHelloWorld/jd_scripts.git\">https://github.com/JDHelloWorld/jd_scripts.git</a> “jd</em>|jx_|getJDCookie” “activity|backUp|Coupon|enen|update” “^jd[^_]|USER” </p>\n<p>jiulan仓库<br>ql repo <a href=\"https://github.com/jiulan/platypus.git\">https://github.com/jiulan/platypus.git</a> </p>\n<p>Ariszy（Zhiyi-N）仓库<br>ql repo <a href=\"https://github.com/Ariszy/Private-Script.git\">https://github.com/Ariszy/Private-Script.git</a> “JD” </p>\n<p>柠檬（胖虎）仓库<br>ql repo <a href=\"https://github.com/panghu999/panghu.git\">https://github.com/panghu999/panghu.git</a> “jd_” </p>\n<p>混沌仓库<br>ql repo <a href=\"https://github.com/whyour/hundun.git\">https://github.com/whyour/hundun.git</a> “quanx” “tokens|caiyun|didi|donate|fold|Env|.py” </p>\n<p>moposmall仓库<br>ql repo <a href=\"https://github.com/moposmall/Script.git\">https://github.com/moposmall/Script.git</a> “jx_mc|cfd.js” </p>\n<p>龙珠仓库<br>ql repo <a href=\"https://github.com/longzhuzhu/nianyu.git\">https://github.com/longzhuzhu/nianyu.git</a> “qx” “main” </p>\n</li>\n<li><h2 id=\"目前用的脚本库\"><a href=\"#目前用的脚本库\" class=\"headerlink\" title=\"目前用的脚本库:\"></a>目前用的脚本库:</h2><ol>\n<li><a href=\"https://github.com/shufflewzc/faker3.git\">https://github.com/shufflewzc/faker3.git</a></li>\n<li><a href=\"https://github.com/shufflewzc/faker2.git\">https://github.com/shufflewzc/faker2.git</a></li>\n<li><a href=\"https://github.com/Aaron-lv/sync.git\">https://github.com/Aaron-lv/sync.git</a></li>\n<li><a href=\"https://github.com/6dylan6/jdpro.git\">https://github.com/6dylan6/jdpro.git</a></li>\n<li><a href=\"https://github.com/JDHelloWorld/jd_scripts.git\">https://github.com/JDHelloWorld/jd_scripts.git</a></li>\n<li><a href=\"https://github.com/KingRan/KR.git\">https://github.com/KingRan/KR.git</a></li>\n<li><a href=\"https://github.com/okyyds/yyds.git\">https://github.com/okyyds/yyds.git</a></li>\n<li><a href=\"https://github.com/okyyds/duck.git\">https://github.com/okyyds/duck.git</a></li>\n</ol>\n</li>\n</ol>\n","site":{"data":{}},"abbrlink":5,"excerpt":"<h1 id=\"搭建青龙面板\"><a href=\"#搭建青龙面板\" class=\"headerlink\" title=\"搭建青龙面板\"></a>搭建<a href=\"https://github.com/whyour/qinglong\">青龙面板</a></h1><ol>\n<li><h2 id=\"安装Docker容器\"><a href=\"#安装Docker容器\" class=\"headerlink\" title=\"安装Docker容器\"></a>安装Docker容器</h2></li>\n<li><h2 id=\"启动容器\"><a href=\"#启动容器\" class=\"headerlink\" title=\"启动容器\"></a>启动容器</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -dit \\</span><br><span class=\"line\">  -v <span class=\"variable\">$PWD</span>/ql:/ql/data \\</span><br><span class=\"line\">  -p 5700:5700 \\</span><br><span class=\"line\">  --name qinglong \\</span><br><span class=\"line\">  --hostname qinglong \\</span><br><span class=\"line\">  --restart unless-stopped \\</span><br><span class=\"line\">  whyour/qinglong:latest</span><br></pre></td></tr></table></figure></li>\n<li><h2 id=\"docker-compose-部署\"><a href=\"#docker-compose-部署\" class=\"headerlink\" title=\"docker-compose 部署\"></a>docker-compose 部署</h2><ol>\n<li><p>docker-compose 安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo curl -L https://github.com/docker/compose/releases/download/1.16.1/docker-compose-`<span class=\"built_in\">uname</span> -s`-`<span class=\"built_in\">uname</span> -m` -o /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure></li>\n<li><p>启动容器</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> qinglong</span><br><span class=\"line\">wget https://raw.githubusercontent.com/whyour/qinglong/master/docker/docker-compose.yml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动</span></span><br><span class=\"line\">docker-compose up -d</span><br><span class=\"line\"><span class=\"comment\"># 停止</span></span><br><span class=\"line\">docker-compose down</span><br></pre></td></tr></table></figure></li>\n</ol>","more":"</li>\n<li><h2 id=\"青龙面板拉取常用脚本-JD签到\"><a href=\"#青龙面板拉取常用脚本-JD签到\" class=\"headerlink\" title=\"青龙面板拉取常用脚本(JD签到)\"></a>青龙面板拉取常用脚本(JD签到)</h2><p><a href=\"https://www.kejiwanjia.com/\">转载自科技玩家</a></p>\n<p>如何拉库：</p>\n<p><code>ql repo &lt;repourl&gt; &lt;path&gt; &lt;blacklist&gt; &lt;dependence&gt; &lt;branch&gt;</code></p>\n<p>对应意思 “库地址” “拉哪些” “不拉哪些” “依赖文件” “分支”</p>\n<p>拉取单个脚本：</p>\n<p><code>ql raw &lt;fileurl&gt;</code></p>\n<p>使用方法：</p>\n<p>一、添加库：进入面板-右上角“定时任务”-分别填入相关信息。提供个人设置，给大家参考。其中人物名、任务定时可自定义。<br>二、运行库任务添加脚本：分别点击每个库的运行按钮，稍等一下，让它飞一会儿。然后刷新页面，就能看到库的脚本了。</p>\n<p>拉库出现的问题及解决方案</p>\n<p>1.出现这种错误：</p>\n<p><code>Cannot find module &#39;xxxx&#39;</code></p>\n<p>依赖不完整，解决方法：</p>\n<p><code>docker exec -it qinglong(容器名称) bashcd /ql/scripts/pnpm install &#39;xxxx&#39;npm install &#39;xxxx&#39;</code></p>\n<p>这两个安装命令都可以用.</p>\n<p>2.出现这种错误：</p>\n<p><code>Cannot find module &#39;./xxxx&#39;</code></p>\n<p>那就很有是拉库命令不完整，请检查或复制完整的拉库命令。</p>\n<p>部分需要的依赖：自行安装</p>\n<p><code>&quot;npm install -g npm&quot;&quot;pip3 install requests&quot;&quot;pip3 install pytz&quot;&quot;npm install -g download&quot;&quot;pnpm install jsdom&quot;&quot;apk add --no-cache build-base g++ cairo-dev pango-dev giflib-dev &amp;&amp; cd scripts &amp;&amp; npm install canvas png-js md5 date-fns axios crypto-js tslib ts-md5 @types/node --build-from-source&quot;</code></p>\n<p>截止2021年12月4日目前还在维护的仓库推荐使用下方两个库，一个日常任务一个开卡 。</p>\n<p>拉库命令：</p>\n<p><code>//国内鸡：ql repo https://ghproxy.com/github.com/KingRan/JDJB.git &quot;jd_|jx_|jdCookie&quot; &quot;activity|backUp&quot; &quot;^jd[^_]|USER|utils|function|sendNotify|ql|JDJR&quot;//国外鸡：ql repo https://github.com/KingRan/JDJB.git &quot;jd_|jx_|jdCookie&quot; &quot;activity|backUp&quot; &quot;^jd[^_]|USER|utils|function|sendNotify|ql|JDJR&quot;</code></p>\n<p>smiek2221开卡库：</p>\n<p><code>//国外鸡：ql repo https://github.com/smiek2221/scripts.git &quot;jd_|gua_&quot; &quot;&quot; &quot;ZooFaker_Necklace.js|JDJRValidator_Pure.js|sign_graphics_validate.js&quot;//国内鸡：ql repo https://ghproxy.com/github.com/smiek2221/scripts.git &quot;jd_|gua_&quot; &quot;&quot; &quot;ZooFaker_Necklace.js|JDJRValidator_Pure.js|sign_graphics_validate.js&quot;</code></p>\n<p>ccwav大佬的资产通知增强版和CK检测（推荐使用）</p>\n<p><code>//不包含sendNotify:ql repo https://github.com/ccwav/QLScript2.git &quot;jd_&quot; &quot;sendNotify|NoUsed&quot; &quot;ql&quot;//包含sendNotify:ql repo https://github.com/ccwav/QLScript2.git &quot;jd_&quot; &quot;NoUsed&quot; &quot;ql|sendNotify&quot;</code></p>\n<p>wskey转换来源于Zy143L大佬（不上传，推荐）</p>\n<p><code>//完美网络用户：ql repo https://github.com/Zy143L/wskey.git &quot;wskey&quot;//国内网络用户：ql repo https://ghproxy.com/github.com/Zy143L/wskey.git &quot;wskey</code></p>\n<p>zero205大佬更新拉库命令（更新频繁，内置作者助力）</p>\n<p><code>ql repo https://github.com/zero205/JD_tencent_scf.git &quot;jd_|jx_|getJDCookie&quot; &quot;backUp|icon&quot; &quot;^jd[^_]|USER|sendNotify|sign_graphics_validate|JDJR&quot;&quot;main&quot;</code></p>\n<p>京东保价、汽车兑换等</p>\n<p><code>//国内鸡 ql repo https://ghproxy.com/github.com/KingRan/JD-Scripts.git &quot;jd_|jx_|getJDCookie&quot; &quot;activity|backUp&quot; &quot;^jd[^_]|USER|utils|function&quot; //国外鸡 ql repo https://github.com/KingRan/JD-Scripts.git &quot;jd_|jx_|getJDCookie&quot; &quot;activity|backUp&quot; &quot;^jd[^_</code>]|USER|utils|function” </p>\n<p>yuannian1112拉取仓库命令：</p>\n<p><code>//国内鸡 ql repo https://hub.fastgit.org/yuannian1112/jd_scripts.git &quot;jd_|jx_|getJDCookie&quot; &quot;activity|backUp&quot; &quot;^jd[^_]|USER|utils&quot; //国外鸡 ql repo https://github.com/yuannian1112/jd_scripts.git &quot;jd_|jx_|getJDCookie&quot; &quot;activity|backUp&quot; &quot;^jd[^_]|USER|utils&quot; //v4修改默认库为 https://hub.fastgit.org/yuannian1112/jd_scripts.git //分支修改为main</code></p>\n<p>star261 粉丝互动</p>\n<p><code>ql repo https://github.com/star261/jd.git &quot;scripts|jd&quot; &quot;&quot; &quot;&quot; &quot;main&quot;</code></p>\n<p><code>chinnkarahoi 无维护，原版</code></p>\n<p><code>ql repo https://github.com/chinnkarahoi/jd_scripts.git &quot;jd_|jx_|getJDCookie&quot; &quot;activity|backUp|Coupon&quot; &quot;^jd[^_]|USER&quot;</code></p>\n<p>JDHelloWorld 基本天天有更新,但是采用TS脚本让初学者不友好</p>\n<p><code>ql repo https://github.com/JDHelloWorld/jd_scripts.git &quot;jd_|jx_|getCookie&quot; &quot;activity|backUp|Coupon|enen|update&quot; &quot;^jd[^_]|USER|tools&quot;</code></p>\n<p>柠檬panghu 已经跑路</p>\n<p><code>ql repo https://github.com/panghu999/jd_scripts.git &quot;jd_|jx_|getJDCookie&quot; &quot;activity|backUp|jd_delCoupon|format_&quot; &quot;^jd[^_]|USER&quot;</code></p>\n<p>he1pu 有更新</p>\n<p><code>ql repo https://github.com/he1pu/JDHelp.git &quot;jd_|jx_|getJDCookie&quot; &quot;activity|backUp|jd_delCoupon&quot; &quot;^jd[^_]|USER&quot;</code></p>\n<p>shufflewzc 集合目前能用的脚本有更新</p>\n<p><code>ql repo https://github.com/shufflewzc/faker2.git &quot;jd_|jx_|jddj_|getJDCookie&quot; &quot;activity|backUp&quot; &quot;^jd[^_]|USER|ZooFaker_Necklace|JDJRValidator_Pure|sign_graphics_validate&quot;</code></p>\n<p>Annyoo2021 lxk最终版及搬运整理 集合目前能用的脚本 推荐</p>\n<p><code>ql repo https://github.com/Annyoo2021/scripts.git &quot;jd_|jx_|long_|getJDCookie&quot; &quot;activity|backUp&quot; &quot;^jd[^_]|USER|ZooFaker_Necklace|JDJRValidator_Pure|JDJRValidator&quot; &quot;main</code></p>\n<p>smiek2221仓库<br><a href=\"https://github.com/smiek2221/scripts\">https://github.com/smiek2221/scripts</a></p>\n<p>Tsukasa007仓库<br><a href=\"https://github.com/Tsukasa007/my_script/tree/master\">https://github.com/Tsukasa007/my_script/tree/master</a></p>\n<p>同步上游各个大佬的仓库 相当于合集<br><a href=\"https://github.com/DovFork\">https://github.com/DovFork</a></p>\n<p>更新7.7最新仓库：（仅提供地址，拉取请参照下面）</p>\n<p>树叶shuye72仓库<br><a href=\"https://github.com/wuzhi04/MyActions\">https://github.com/wuzhi04/MyActions</a></p>\n<p>Annyoo2021仓库 基本天天更新，集合了大量可用脚本<br><a href=\"https://github.com/Annyoo2021/scripts\">https://github.com/Annyoo2021/scripts</a></p>\n<p>lukesyy仓库<br><a href=\"https://github.com/lukesyy/jd_yun\">https://github.com/lukesyy/jd_yun</a></p>\n<p>zero205仓库<br><a href=\"https://github.com/zero205/JD_tencent_scf\">https://github.com/zero205/JD_tencent_scf</a></p>\n<p>curtinlv仓库<br>ql repo <a href=\"https://github.com/curtinlv/JD-Script.git\">https://github.com/curtinlv/JD-Script.git</a> </p>\n<p>he1pu互助仓库<br>ql repo <a href=\"https://github.com/he1pu/JDHelp.git\">https://github.com/he1pu/JDHelp.git</a> “jd_|jx_|getJDCookie” “activity|backUp|Coupon” “^jd[^_]|USER” </p>\n<p>柠檬（胖虎）代维护lxk0301仓库 已经跑路<br>ql repo <a href=\"https://github.com/panghu999/jd_scripts.git\">https://github.com/panghu999/jd_scripts.git</a> “jd_|jx_|getJDCookie” “activity|backUp|Coupon|jd_try|format_” “^jd[^_]|USER” </p>\n<p>zcy01仓库<br>ql repo <a href=\"https://github.com/ZCY01/daily_scripts.git\">https://github.com/ZCY01/daily_scripts.git</a> “jd_” _</p>\n<p><em>passerby-b 仓库<br>ql repo <a href=\"https://github.com/passerby-b/JDDJ.git\">https://github.com/passerby-b/JDDJ.git</a> “jddj</em>“ “scf_test_event|jddj_fruit_code.js|jddj_getck.js|jd_|jddj_cookie” _</p>\n<p><em>JDHelloWorld仓库<br>ql repo <a href=\"https://github.com/JDHelloWorld/jd_scripts.git\">https://github.com/JDHelloWorld/jd_scripts.git</a> “jd</em>|jx_|getJDCookie” “activity|backUp|Coupon|enen|update” “^jd[^_]|USER” </p>\n<p>jiulan仓库<br>ql repo <a href=\"https://github.com/jiulan/platypus.git\">https://github.com/jiulan/platypus.git</a> </p>\n<p>Ariszy（Zhiyi-N）仓库<br>ql repo <a href=\"https://github.com/Ariszy/Private-Script.git\">https://github.com/Ariszy/Private-Script.git</a> “JD” </p>\n<p>柠檬（胖虎）仓库<br>ql repo <a href=\"https://github.com/panghu999/panghu.git\">https://github.com/panghu999/panghu.git</a> “jd_” </p>\n<p>混沌仓库<br>ql repo <a href=\"https://github.com/whyour/hundun.git\">https://github.com/whyour/hundun.git</a> “quanx” “tokens|caiyun|didi|donate|fold|Env|.py” </p>\n<p>moposmall仓库<br>ql repo <a href=\"https://github.com/moposmall/Script.git\">https://github.com/moposmall/Script.git</a> “jx_mc|cfd.js” </p>\n<p>龙珠仓库<br>ql repo <a href=\"https://github.com/longzhuzhu/nianyu.git\">https://github.com/longzhuzhu/nianyu.git</a> “qx” “main” </p>\n</li>\n<li><h2 id=\"目前用的脚本库\"><a href=\"#目前用的脚本库\" class=\"headerlink\" title=\"目前用的脚本库:\"></a>目前用的脚本库:</h2><ol>\n<li><a href=\"https://github.com/shufflewzc/faker3.git\">https://github.com/shufflewzc/faker3.git</a></li>\n<li><a href=\"https://github.com/shufflewzc/faker2.git\">https://github.com/shufflewzc/faker2.git</a></li>\n<li><a href=\"https://github.com/Aaron-lv/sync.git\">https://github.com/Aaron-lv/sync.git</a></li>\n<li><a href=\"https://github.com/6dylan6/jdpro.git\">https://github.com/6dylan6/jdpro.git</a></li>\n<li><a href=\"https://github.com/JDHelloWorld/jd_scripts.git\">https://github.com/JDHelloWorld/jd_scripts.git</a></li>\n<li><a href=\"https://github.com/KingRan/KR.git\">https://github.com/KingRan/KR.git</a></li>\n<li><a href=\"https://github.com/okyyds/yyds.git\">https://github.com/okyyds/yyds.git</a></li>\n<li><a href=\"https://github.com/okyyds/duck.git\">https://github.com/okyyds/duck.git</a></li>\n</ol>\n</li>\n</ol>"},{"title":"青龙面板搭建JDX短信登","date":"2022-03-04T13:58:32.000Z","_content":"\n <!-- more -->\n\n[JDX地址](https://github.com/wangyiidii/jdx)\n\n## 安装说明\n\n本项目已打包成`docker`镜像，拉取配置即可使用\n\n### 1.🐋拉取并运行docker\n\n```shell\ndocker run -d \\\n    # 配置文件生成路径\n    -v <config dir>:/jdx/config \\\n    -p <port>:80 \\\n    --restart=always \\\n    --name jdx registry.cn-hangzhou.aliyuncs.com/yiidii-hub/jdx:v0.2.1\n```\n\n>这里命令自行替换卷和端口映射\n>\n>例如：\n>\n>```shell\n>docker run -d \\\n>  -v  /data/jdx/config:/jdx/config \\\n>  -p 5702:80 \\\n>  --restart=always \\\n>  --name jdx registry.cn-hangzhou.aliyuncs.com/yiidii-hub/jdx:v0.2.1\n>```\n\n注意：\n\n- 记得放行端口\n\n- 2. 访问\n\n  这时候访问 `http://ip:port/` 就能访问了\n\n  ### 3. 后台登录\n\n  访问 `http://ip:port/admin` 首次登录用户名：`admin`, 密码：`123465`, **千万记得修改密码！！！！！**\n\n  ## 📃 使用说明\n\n  1. QL配置只能删除和新增，不能编辑操作\n  2. 所有涉及编辑和删除的操作，左滑即可（就像微信删除最近联系人一样...）\n\n  ## 📌 一对一推送\n\n  脚本参考[ccwav/QLScript2](https://github.com/ccwav/QLScript2) 即可\n\n  **用户的uid扫码即可自动填充到备注上，需要在wPusher配置（wxPusher后台 -> 应用管理 -> 应用信息 -> 事件回调地址）如下：**\n\n  ```\n  http://ip:port/api/third/wxPusher/follow/callback\n  ```\n","source":"_posts/青龙面板搭建JDX短信登.md","raw":"---\ntitle: 青龙面板搭建JDX短信登\ndate: 2022-03-04 21:58:32\ntags: [\"学习\",\"折腾\",\"青龙面板\"]\ncategories: \"青龙面板\"\n---\n\n <!-- more -->\n\n[JDX地址](https://github.com/wangyiidii/jdx)\n\n## 安装说明\n\n本项目已打包成`docker`镜像，拉取配置即可使用\n\n### 1.🐋拉取并运行docker\n\n```shell\ndocker run -d \\\n    # 配置文件生成路径\n    -v <config dir>:/jdx/config \\\n    -p <port>:80 \\\n    --restart=always \\\n    --name jdx registry.cn-hangzhou.aliyuncs.com/yiidii-hub/jdx:v0.2.1\n```\n\n>这里命令自行替换卷和端口映射\n>\n>例如：\n>\n>```shell\n>docker run -d \\\n>  -v  /data/jdx/config:/jdx/config \\\n>  -p 5702:80 \\\n>  --restart=always \\\n>  --name jdx registry.cn-hangzhou.aliyuncs.com/yiidii-hub/jdx:v0.2.1\n>```\n\n注意：\n\n- 记得放行端口\n\n- 2. 访问\n\n  这时候访问 `http://ip:port/` 就能访问了\n\n  ### 3. 后台登录\n\n  访问 `http://ip:port/admin` 首次登录用户名：`admin`, 密码：`123465`, **千万记得修改密码！！！！！**\n\n  ## 📃 使用说明\n\n  1. QL配置只能删除和新增，不能编辑操作\n  2. 所有涉及编辑和删除的操作，左滑即可（就像微信删除最近联系人一样...）\n\n  ## 📌 一对一推送\n\n  脚本参考[ccwav/QLScript2](https://github.com/ccwav/QLScript2) 即可\n\n  **用户的uid扫码即可自动填充到备注上，需要在wPusher配置（wxPusher后台 -> 应用管理 -> 应用信息 -> 事件回调地址）如下：**\n\n  ```\n  http://ip:port/api/third/wxPusher/follow/callback\n  ```\n","slug":"青龙面板搭建JDX短信登","published":1,"updated":"2022-03-04T14:14:48.378Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl7rscd2u002ebwuzfwgj26au","content":" <span id=\"more\"></span>\n\n<p><a href=\"https://github.com/wangyiidii/jdx\">JDX地址</a></p>\n<h2 id=\"安装说明\"><a href=\"#安装说明\" class=\"headerlink\" title=\"安装说明\"></a>安装说明</h2><p>本项目已打包成<code>docker</code>镜像，拉取配置即可使用</p>\n<h3 id=\"1-🐋拉取并运行docker\"><a href=\"#1-🐋拉取并运行docker\" class=\"headerlink\" title=\"1.🐋拉取并运行docker\"></a>1.🐋拉取并运行docker</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d \\</span><br><span class=\"line\">    # 配置文件生成路径</span><br><span class=\"line\">    -v &lt;config dir&gt;:/jdx/config \\</span><br><span class=\"line\">    -p &lt;port&gt;:80 \\</span><br><span class=\"line\">    --restart=always \\</span><br><span class=\"line\">    --name jdx registry.cn-hangzhou.aliyuncs.com/yiidii-hub/jdx:v0.2.1</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>这里命令自行替换卷和端口映射</p>\n<p>例如：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">&gt;</span><span class=\"language-bash\">docker run -d \\</span></span><br><span class=\"line\"><span class=\"language-bash\"> -v  /data/jdx/config:/jdx/config \\</span></span><br><span class=\"line\"><span class=\"language-bash\"> -p 5702:80 \\</span></span><br><span class=\"line\"><span class=\"language-bash\"> --restart=always \\</span></span><br><span class=\"line\"><span class=\"language-bash\"> --name jdx registry.cn-hangzhou.aliyuncs.com/yiidii-hub/jdx:v0.2.1</span></span><br></pre></td></tr></table></figure>\n</blockquote>\n<p>注意：</p>\n<ul>\n<li><p>记得放行端口</p>\n</li>\n<li><ol start=\"2\">\n<li>访问</li>\n</ol>\n<p>这时候访问 <code>http://ip:port/</code> 就能访问了</p>\n<h3 id=\"3-后台登录\"><a href=\"#3-后台登录\" class=\"headerlink\" title=\"3. 后台登录\"></a>3. 后台登录</h3><p>访问 <code>http://ip:port/admin</code> 首次登录用户名：<code>admin</code>, 密码：<code>123465</code>, <strong>千万记得修改密码！！！！！</strong></p>\n<h2 id=\"📃-使用说明\"><a href=\"#📃-使用说明\" class=\"headerlink\" title=\"📃 使用说明\"></a>📃 使用说明</h2><ol>\n<li>QL配置只能删除和新增，不能编辑操作</li>\n<li>所有涉及编辑和删除的操作，左滑即可（就像微信删除最近联系人一样…）</li>\n</ol>\n<h2 id=\"📌-一对一推送\"><a href=\"#📌-一对一推送\" class=\"headerlink\" title=\"📌 一对一推送\"></a>📌 一对一推送</h2><p>脚本参考<a href=\"https://github.com/ccwav/QLScript2\">ccwav/QLScript2</a> 即可</p>\n<p><strong>用户的uid扫码即可自动填充到备注上，需要在wPusher配置（wxPusher后台 -&gt; 应用管理 -&gt; 应用信息 -&gt; 事件回调地址）如下：</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://ip:port/api/third/wxPusher/follow/callback</span><br></pre></td></tr></table></figure></li>\n</ul>\n","site":{"data":{}},"abbrlink":6,"excerpt":"","more":"<p><a href=\"https://github.com/wangyiidii/jdx\">JDX地址</a></p>\n<h2 id=\"安装说明\"><a href=\"#安装说明\" class=\"headerlink\" title=\"安装说明\"></a>安装说明</h2><p>本项目已打包成<code>docker</code>镜像，拉取配置即可使用</p>\n<h3 id=\"1-🐋拉取并运行docker\"><a href=\"#1-🐋拉取并运行docker\" class=\"headerlink\" title=\"1.🐋拉取并运行docker\"></a>1.🐋拉取并运行docker</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d \\</span><br><span class=\"line\">    # 配置文件生成路径</span><br><span class=\"line\">    -v &lt;config dir&gt;:/jdx/config \\</span><br><span class=\"line\">    -p &lt;port&gt;:80 \\</span><br><span class=\"line\">    --restart=always \\</span><br><span class=\"line\">    --name jdx registry.cn-hangzhou.aliyuncs.com/yiidii-hub/jdx:v0.2.1</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>这里命令自行替换卷和端口映射</p>\n<p>例如：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">&gt;</span><span class=\"language-bash\">docker run -d \\</span></span><br><span class=\"line\"><span class=\"language-bash\"> -v  /data/jdx/config:/jdx/config \\</span></span><br><span class=\"line\"><span class=\"language-bash\"> -p 5702:80 \\</span></span><br><span class=\"line\"><span class=\"language-bash\"> --restart=always \\</span></span><br><span class=\"line\"><span class=\"language-bash\"> --name jdx registry.cn-hangzhou.aliyuncs.com/yiidii-hub/jdx:v0.2.1</span></span><br></pre></td></tr></table></figure>\n</blockquote>\n<p>注意：</p>\n<ul>\n<li><p>记得放行端口</p>\n</li>\n<li><ol start=\"2\">\n<li>访问</li>\n</ol>\n<p>这时候访问 <code>http://ip:port/</code> 就能访问了</p>\n<h3 id=\"3-后台登录\"><a href=\"#3-后台登录\" class=\"headerlink\" title=\"3. 后台登录\"></a>3. 后台登录</h3><p>访问 <code>http://ip:port/admin</code> 首次登录用户名：<code>admin</code>, 密码：<code>123465</code>, <strong>千万记得修改密码！！！！！</strong></p>\n<h2 id=\"📃-使用说明\"><a href=\"#📃-使用说明\" class=\"headerlink\" title=\"📃 使用说明\"></a>📃 使用说明</h2><ol>\n<li>QL配置只能删除和新增，不能编辑操作</li>\n<li>所有涉及编辑和删除的操作，左滑即可（就像微信删除最近联系人一样…）</li>\n</ol>\n<h2 id=\"📌-一对一推送\"><a href=\"#📌-一对一推送\" class=\"headerlink\" title=\"📌 一对一推送\"></a>📌 一对一推送</h2><p>脚本参考<a href=\"https://github.com/ccwav/QLScript2\">ccwav/QLScript2</a> 即可</p>\n<p><strong>用户的uid扫码即可自动填充到备注上，需要在wPusher配置（wxPusher后台 -&gt; 应用管理 -&gt; 应用信息 -&gt; 事件回调地址）如下：</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://ip:port/api/third/wxPusher/follow/callback</span><br></pre></td></tr></table></figure></li>\n</ul>"}],"PostAsset":[{"_id":"source/_posts/Eruda-手机网页前端调试面板/screenshot.jpg","slug":"screenshot.jpg","post":"cl7rscd1x0003bwuz56vp3t48","modified":0,"renderable":0},{"_id":"source/_posts/hexo安装教程/image-20220107192509368.png","slug":"image-20220107192509368.png","post":"cl7rscd27000dbwuze2rf2nlj","modified":0,"renderable":0}],"PostCategory":[{"post_id":"cl7rscd1t0001bwuzh7rvhw6b","category_id":"cl7rscd1z0004bwuzgh0a9t73","_id":"cl7rscd28000ebwuz35ehggnc"},{"post_id":"cl7rscd1x0003bwuz56vp3t48","category_id":"cl7rscd25000abwuz56e4hyvt","_id":"cl7rscd2b000lbwuz2424e1to"},{"post_id":"cl7rscd220007bwuz682m2nzb","category_id":"cl7rscd28000fbwuza73u7ycj","_id":"cl7rscd2f000sbwuz6rdp1jfn"},{"post_id":"cl7rscd230008bwuz4i1i51tx","category_id":"cl7rscd2c000nbwuzbjb1e2of","_id":"cl7rscd2h000wbwuz1fpn1i78"},{"post_id":"cl7rscd27000dbwuze2rf2nlj","category_id":"cl7rscd2h000xbwuz4k9o932b","_id":"cl7rscd2j0016bwuz6ib76afv"},{"post_id":"cl7rscd29000hbwuzeovq6wr9","category_id":"cl7rscd2h000xbwuz4k9o932b","_id":"cl7rscd2k001abwuzf0ovchov"},{"post_id":"cl7rscd2f000ubwuz1fpn1ckz","category_id":"cl7rscd2k001ebwuz50h429ew","_id":"cl7rscd2m001kbwuzfzzga9k4"},{"post_id":"cl7rscd26000cbwuzccrbgquw","category_id":"cl7rscd2f000tbwuz9odg17mq","_id":"cl7rscd2n001qbwuzc83ydjcw"},{"post_id":"cl7rscd26000cbwuzccrbgquw","category_id":"cl7rscd2l001jbwuzhz282ct6","_id":"cl7rscd2n001tbwuzhvo81if3"},{"post_id":"cl7rscd2a000jbwuzgct8c8z9","category_id":"cl7rscd2h000xbwuz4k9o932b","_id":"cl7rscd2p0021bwuzajnq1jio"},{"post_id":"cl7rscd2a000jbwuzgct8c8z9","category_id":"cl7rscd2m001mbwuz7x5ihhqd","_id":"cl7rscd2q0024bwuz6i7qaxd2"},{"post_id":"cl7rscd2a000jbwuzgct8c8z9","category_id":"cl7rscd2o001vbwuz775y72dx","_id":"cl7rscd2q0026bwuz89gv908p"},{"post_id":"cl7rscd2e000qbwuzeb8zazpt","category_id":"cl7rscd2h000xbwuz4k9o932b","_id":"cl7rscd2q002abwuzd2foef97"},{"post_id":"cl7rscd2e000qbwuzeb8zazpt","category_id":"cl7rscd2m001mbwuz7x5ihhqd","_id":"cl7rscd2q002bbwuz6u9y1cey"},{"post_id":"cl7rscd2e000qbwuzeb8zazpt","category_id":"cl7rscd2o001vbwuz775y72dx","_id":"cl7rscd2r002cbwuzhhlyb162"},{"post_id":"cl7rscd2e000qbwuzeb8zazpt","category_id":"cl7rscd2p0023bwuzh1wxgnwx","_id":"cl7rscd2r002dbwuzgaira8wh"},{"post_id":"cl7rscd2u002ebwuzfwgj26au","category_id":"cl7rscd2k001ebwuz50h429ew","_id":"cl7rscd2v002hbwuz0d80c80m"}],"PostTag":[{"post_id":"cl7rscd1t0001bwuzh7rvhw6b","tag_id":"cl7rscd210005bwuz1urpeyud","_id":"cl7rscd2a000ibwuz52t29d1t"},{"post_id":"cl7rscd1t0001bwuzh7rvhw6b","tag_id":"cl7rscd25000bbwuz3pis8mc7","_id":"cl7rscd2b000kbwuzfub37or3"},{"post_id":"cl7rscd1x0003bwuz56vp3t48","tag_id":"cl7rscd210005bwuz1urpeyud","_id":"cl7rscd2e000pbwuz25ev8hkm"},{"post_id":"cl7rscd220007bwuz682m2nzb","tag_id":"cl7rscd210005bwuz1urpeyud","_id":"cl7rscd2h000ybwuz7mg54d3c"},{"post_id":"cl7rscd220007bwuz682m2nzb","tag_id":"cl7rscd2f000rbwuz4ntb3p07","_id":"cl7rscd2h000zbwuz6cuc6pc0"},{"post_id":"cl7rscd230008bwuz4i1i51tx","tag_id":"cl7rscd2g000vbwuzdjvgcwxk","_id":"cl7rscd2i0012bwuz7wq21ifo"},{"post_id":"cl7rscd230008bwuz4i1i51tx","tag_id":"cl7rscd210005bwuz1urpeyud","_id":"cl7rscd2i0013bwuz070bh7nv"},{"post_id":"cl7rscd26000cbwuzccrbgquw","tag_id":"cl7rscd2h0010bwuz19ucdn8t","_id":"cl7rscd2j0017bwuzgh1rdnzx"},{"post_id":"cl7rscd26000cbwuzccrbgquw","tag_id":"cl7rscd210005bwuz1urpeyud","_id":"cl7rscd2j0018bwuzdigqbqmi"},{"post_id":"cl7rscd27000dbwuze2rf2nlj","tag_id":"cl7rscd210005bwuz1urpeyud","_id":"cl7rscd2k001cbwuz9856646g"},{"post_id":"cl7rscd27000dbwuze2rf2nlj","tag_id":"cl7rscd2i0014bwuz4ogpb0vo","_id":"cl7rscd2k001dbwuzc6s80f6v"},{"post_id":"cl7rscd29000hbwuzeovq6wr9","tag_id":"cl7rscd210005bwuz1urpeyud","_id":"cl7rscd2l001gbwuz8ejs16h7"},{"post_id":"cl7rscd29000hbwuzeovq6wr9","tag_id":"cl7rscd2i0014bwuz4ogpb0vo","_id":"cl7rscd2l001hbwuzdf35hwbn"},{"post_id":"cl7rscd2a000jbwuzgct8c8z9","tag_id":"cl7rscd2i0014bwuz4ogpb0vo","_id":"cl7rscd2m001nbwuz6qum1qt2"},{"post_id":"cl7rscd2a000jbwuzgct8c8z9","tag_id":"cl7rscd2l001ibwuz6pphcy4q","_id":"cl7rscd2n001obwuzd4i3ffol"},{"post_id":"cl7rscd2a000jbwuzgct8c8z9","tag_id":"cl7rscd210005bwuz1urpeyud","_id":"cl7rscd2n001sbwuz4gvm8uj0"},{"post_id":"cl7rscd2e000qbwuzeb8zazpt","tag_id":"cl7rscd2i0014bwuz4ogpb0vo","_id":"cl7rscd2p001ybwuzd0xna47w"},{"post_id":"cl7rscd2e000qbwuzeb8zazpt","tag_id":"cl7rscd2l001ibwuz6pphcy4q","_id":"cl7rscd2p001zbwuzcot0covh"},{"post_id":"cl7rscd2e000qbwuzeb8zazpt","tag_id":"cl7rscd210005bwuz1urpeyud","_id":"cl7rscd2p0022bwuzf4ce1khs"},{"post_id":"cl7rscd2e000qbwuzeb8zazpt","tag_id":"cl7rscd2h0010bwuz19ucdn8t","_id":"cl7rscd2q0025bwuzaze29u5g"},{"post_id":"cl7rscd2f000ubwuz1fpn1ckz","tag_id":"cl7rscd210005bwuz1urpeyud","_id":"cl7rscd2q0027bwuz7q1o869x"},{"post_id":"cl7rscd2f000ubwuz1fpn1ckz","tag_id":"cl7rscd2o001wbwuz87hbbfh0","_id":"cl7rscd2q0028bwuz2jzoh26j"},{"post_id":"cl7rscd2f000ubwuz1fpn1ckz","tag_id":"cl7rscd2p0020bwuz5aw007vs","_id":"cl7rscd2q0029bwuz7733gn9v"},{"post_id":"cl7rscd2u002ebwuzfwgj26au","tag_id":"cl7rscd210005bwuz1urpeyud","_id":"cl7rscd2u002fbwuzfcsh08pc"},{"post_id":"cl7rscd2u002ebwuzfwgj26au","tag_id":"cl7rscd2o001wbwuz87hbbfh0","_id":"cl7rscd2v002gbwuz60w41t5c"},{"post_id":"cl7rscd2u002ebwuzfwgj26au","tag_id":"cl7rscd2p0020bwuz5aw007vs","_id":"cl7rscd2v002ibwuz8tqlaaax"}],"Tag":[{"name":"学习","_id":"cl7rscd210005bwuz1urpeyud"},{"name":"GitHub","_id":"cl7rscd25000bbwuz3pis8mc7"},{"name":"node","_id":"cl7rscd2f000rbwuz4ntb3p07"},{"name":"OpenWrt","_id":"cl7rscd2g000vbwuzdjvgcwxk"},{"name":"HTML","_id":"cl7rscd2h0010bwuz19ucdn8t"},{"name":"hexo","_id":"cl7rscd2i0014bwuz4ogpb0vo"},{"name":"HTML背景特效","_id":"cl7rscd2l001ibwuz6pphcy4q"},{"name":"折腾","_id":"cl7rscd2o001wbwuz87hbbfh0"},{"name":"青龙面板","_id":"cl7rscd2p0020bwuz5aw007vs"}],"abbrlink":[{"_id":"c-thiskeyusingbyabbrlink2","maxid":6},{"_id":"cl7rscd1t0001bwuzh7rvhw6b","maxid":2},{"_id":"cl7rscd1x0003bwuz56vp3t48","maxid":3},{"_id":"cl7rscd220007bwuz682m2nzb","maxid":3},{"_id":"cl7rscd230008bwuz4i1i51tx","maxid":4},{"_id":"cl7rscd240009bwuz9ui18i32","maxid":4},{"_id":"cl7rscd26000cbwuzccrbgquw","maxid":4},{"_id":"cl7rscd27000dbwuze2rf2nlj","maxid":4},{"_id":"cl7rscd29000hbwuzeovq6wr9","maxid":5},{"_id":"cl7rscd2a000jbwuzgct8c8z9","maxid":5},{"_id":"cl7rscd2c000obwuzfra7692k","maxid":5},{"_id":"cl7rscd2e000qbwuzeb8zazpt","maxid":5},{"_id":"cl7rscd2f000ubwuz1fpn1ckz","maxid":5},{"_id":"cl7rscd2u002ebwuzfwgj26au","maxid":6}]}}